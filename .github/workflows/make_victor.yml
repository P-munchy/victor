name: Build and Cache Workflow

on:
  push:
    tags:
      - '*'

jobs:
  make_victor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          lfs: true
          token: ${{ secrets.GH_PAT }}

      - name: Clone anki-deps to ~/.anki
        run: |
          if [[ ! -d ~/.anki ]]; then
            git clone https://kercre123:${{ secrets.GH_PAT }}@github.com/kercre123/anki-deps.git ~/.anki
          fi

      - name: Install dependencies
        run: |
          sudo apt-get remove containerd.io
          sudo apt-get update
          sudo apt-get install -y docker.io git-lfs rsync ssh build-essential
          sudo systemctl start docker
          sudo gpasswd -a $USER docker
          newgrp docker

      - name: Build inside Docker
        run: |
          cd $GITHUB_WORKSPACE
          ./wire/build-d.sh

      - name: Get tag version
        id: get_tag
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build OTA files
        run: |
          tag_version=${{ env.tag_name }}
          cd ota
          ./make.sh $tag_version
        env:
          DOCKER_BUILDKIT: 1

      - name: Transfer OTA files to server
        continue-on-error: true
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          tag_version=${{ env.tag_name }}
          for target in dvt3 dev whiskey oskr; do
            local_path="ota/out/$tag_version/$target/$tag_version.ota"
            remote_path="/wire/otas/full/$target/$tag_version.ota"
            ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p /wire/otas/full/$target && touch /wire/otas/dnar"
            rsync -avz -e "ssh -o StrictHostKeyChecking=no" $local_path ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:$remote_path
          done
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo $tag_version > /wire/otas/latest && rm /wire/otas/dnar"
