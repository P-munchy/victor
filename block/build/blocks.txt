; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\blocks.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\blocks.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F401xC -DUSE_STDPERIPH_DRIVER -DSTM32F411xE -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DOFFBOARD_VISION -DSTM32F401xx --omf_browse=.\build\blocks.crf arm_hal\hal\blocks.cpp]
                          THUMB

                          AREA ||i._ZN4Anki5Cozmo3HAL13FlashBlockIDsEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL13FlashBlockIDsEv PROC ; Anki::Cozmo::HAL::FlashBlockIDs()
;;;10         {
;;;11           void FlashBlockIDs()
000000  4c08              LDR      r4,|L1.36|
                  |L1.2|
;;;12           {
;;;13               // XXX STUB!
;;;14     								while(1)
;;;15     				{
;;;16     				SetLED(LED_RIGHT_EYE_RIGHT, 0x000001FF);
000002  f24011ff          MOV      r1,#0x1ff
000006  2001              MOVS     r0,#1
000008  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
;;;17     				MicroWait(500000);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
;;;18     				SetLED(LED_RIGHT_EYE_RIGHT, 0x00000000);
000012  2100              MOVS     r1,#0
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
;;;19     				MicroWait(500000);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000020  e7ef              B        |L1.2|
;;;20     				}
;;;21           }
;;;22           
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      0x0007a120

                          AREA ||i._ZN4Anki5Cozmo3HAL13SetBlockLightEhPKj||, CODE, READONLY, ALIGN=1

                  _ZN4Anki5Cozmo3HAL13SetBlockLightEhPKj PROC ; Anki::Cozmo::HAL::SetBlockLight(unsigned char, const unsigned*)
;;;22           
;;;23           Result SetBlockLight(const u8 blockID, const u32* color) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
;;;24     				for(int Id = 0; Id<NUM_LEDS; Id++)
000004  2400              MOVS     r4,#0
                  |L2.6|
;;;25     				{
;;;26     						SetLED(LEDId(Id), color[Id]);
000006  b2e0              UXTB     r0,r4
000008  f8551024          LDR      r1,[r5,r4,LSL #2]
00000c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
000010  1c64              ADDS     r4,r4,#1
000012  2c08              CMP      r4,#8                 ;24
000014  dbf7              BLT      |L2.6|
;;;27     				}
;;;28     				/*
;;;29     				while(1)
;;;30     				{
;;;31     				SetLED(LED_RIGHT_EYE_RIGHT, 0x000001FF);
;;;32     				MicroWait(500000);
;;;33     				SetLED(LED_RIGHT_EYE_RIGHT, 0x00000000);
;;;34     				MicroWait(500000);
;;;35     				}*/
;;;36             return RESULT_OK;
000016  2000              MOVS     r0,#0
;;;37           }
000018  bd70              POP      {r4-r6,pc}
;;;38         }
                          ENDP


                          AREA ||i.__sti___10_blocks_cpp_b9277415||, CODE, READONLY, ALIGN=2

                  __sti___10_blocks_cpp_b9277415 PROC
000000  4803              LDR      r0,|L3.16|
000002  ed9f0a02          VLDR     s0,|L3.12|
000006  ed800a00          VSTR     s0,[r0,#0]
00000a  4770              BX       lr
                          ENDP

                  |L3.12|
00000c  423df6f2          DCFS     0x423df6f2 ; 47.491157531738281
                  |L3.16|
                          DCD      ||.data||

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4Anki5Cozmo3HAL13FlashBlockIDsEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL13FlashBlockIDsEv||
                          DCD      0x00000001

                          AREA ||area_number.5||, LINKORDER=||i._ZN4Anki5Cozmo3HAL13SetBlockLightEhPKj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL13SetBlockLightEhPKj||
                          DCD      0x00000001

                          AREA ||area_number.6||, LINKORDER=||i.__sti___10_blocks_cpp_b9277415||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___10_blocks_cpp_b9277415||
                          DCD      0x00000001

                          AREA ||.data||, DATA, ALIGN=2

                  _ZN4Anki5Cozmo21ROBOT_BOUNDING_RADIUSE ; Anki::Cozmo::ROBOT_BOUNDING_RADIUS
                          DCD      0x00000000

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___10_blocks_cpp_b9277415

;*** Start embedded assembler ***

#line 1 "arm_hal\\hal\\blocks.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_blocks_cpp_b9277415___Z7__REV16j|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___10_blocks_cpp_b9277415___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_blocks_cpp_b9277415___Z7__REVSHi|
#line 144
|__asm___10_blocks_cpp_b9277415___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
