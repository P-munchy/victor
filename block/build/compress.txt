; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\compress.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\compress.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F401xC -DUSE_STDPERIPH_DRIVER -DSTM32F411xE -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DOFFBOARD_VISION -DSTM32F401xx --omf_browse=.\build\compress.crf ..\coretech\common\robot\src\compress.cpp]
                          THUMB

                          AREA ||i._ZN4Anki8Embedded21DecodeRunLengthBinaryEPKhiPhiRi||, CODE, READONLY, ALIGN=2

                  _ZN4Anki8Embedded21DecodeRunLengthBinaryEPKhiPhiRi PROC ; Anki::Embedded::DecodeRunLengthBinary(const unsigned char*, int, unsigned char*, int, int&)
;;;64     
;;;65         Result DecodeRunLengthBinary(
000000  e92d03f0          PUSH     {r4-r9}
;;;66           const u8 * restrict in, const s32 inLength,
;;;67           u8 * restrict out, const s32 outMaxLength, s32 &outUncompressedLength)
;;;68         {
;;;69           outUncompressedLength = 0;
000004  f04f0c00          MOV      r12,#0
000008  9c06              LDR      r4,[sp,#0x18]
;;;70     
;;;71           for(s32 iIn=0; iIn<inLength; iIn++) {
00000a  4666              MOV      r6,r12
00000c  2900              CMP      r1,#0
00000e  f8c4c000          STR      r12,[r4,#0]
000012  dd24              BLE      |L1.94|
                  |L1.20|
;;;72             const u8 curByte = in[iIn];
000014  f810c006          LDRB     r12,[r0,r6]
;;;73     
;;;74             const u8 curComponentColor = (curByte & 128) >> 7;
000018  ea4f17dc          LSR      r7,r12,#7
;;;75             const s32 curComponentCount = curByte & 127;
00001c  f00c057f          AND      r5,r12,#0x7f
;;;76     
;;;77             if((curComponentCount + outUncompressedLength) >= outMaxLength) {
000020  f8d4c000          LDR      r12,[r4,#0]
000024  44ac              ADD      r12,r12,r5
000026  4563              CMP      r3,r12
;;;78               return RESULT_FAIL_OUT_OF_MEMORY;
;;;79             }
;;;80     
;;;81             // Note: curComponentCount is (count-1)
;;;82             for(s32 iOut=0; iOut<=curComponentCount; iOut++) {
000028  bfc8              IT       GT
00002a  f04f0c00          MOVGT    r12,#0
00002e  dc03              BGT      |L1.56|
;;;83               out[iOut + outUncompressedLength] = curComponentColor;
;;;84             }
;;;85     
;;;86             outUncompressedLength += curComponentCount + 1;
;;;87           } // for(s32 iByte=0; iByte<inLength; iByte++)
;;;88     
;;;89           return RESULT_OK;
;;;90         } // DecodeRunLengthBinary()
000030  e8bd03f0          POP      {r4-r9}
000034  480c              LDR      r0,|L1.104|
000036  4770              BX       lr
                  |L1.56|
000038  eb02090c          ADD      r9,r2,r12             ;83
00003c  f8d48000          LDR      r8,[r4,#0]            ;83
000040  f10c0c01          ADD      r12,r12,#1            ;83
000044  45ac              CMP      r12,r5                ;82
000046  f8087009          STRB     r7,[r8,r9]            ;83
00004a  ddf5              BLE      |L1.56|
00004c  1c6d              ADDS     r5,r5,#1              ;86
00004e  f8d4c000          LDR      r12,[r4,#0]           ;86
000052  1c76              ADDS     r6,r6,#1              ;86
000054  44ac              ADD      r12,r12,r5            ;86
000056  f8c4c000          STR      r12,[r4,#0]           ;71
00005a  42b1              CMP      r1,r6                 ;71
00005c  dcda              BGT      |L1.20|
                  |L1.94|
00005e  e8bd03f0          POP      {r4-r9}
000062  2000              MOVS     r0,#0                 ;89
000064  4770              BX       lr
;;;91       } // namespace Embedded
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
                          DCD      0x01000001

                          AREA ||i._ZN4Anki8Embedded21EncodeRunLengthBinaryEPKhiPhiRi||, CODE, READONLY, ALIGN=2

                  _ZN4Anki8Embedded21EncodeRunLengthBinaryEPKhiPhiRi PROC ; Anki::Embedded::EncodeRunLengthBinary(const unsigned char*, int, unsigned char*, int, int&)
;;;17       {
;;;18         Result EncodeRunLengthBinary(
000000  b4f0              PUSH     {r4-r7}
;;;19           const u8 * restrict in, const s32 inLength,
;;;20           u8 * restrict out, const s32 outMaxLength, s32 &outCompressedLength)
;;;21         {
;;;22           s32 curComponentCount = 0;
;;;23           s32 curComponentColor;
;;;24     
;;;25           if(in[0] == 0) {
000002  f890c000          LDRB     r12,[r0,#0]
000006  2500              MOVS     r5,#0                 ;22
000008  9e04              LDR      r6,[sp,#0x10]
00000a  f1bc0f00          CMP      r12,#0
;;;26             curComponentColor = 0;
;;;27           } else {
;;;28             curComponentColor = 1;
00000e  bf18              IT       NE
000010  f04f0c01          MOVNE    r12,#1
;;;29           }
;;;30     
;;;31           outCompressedLength = 0;
000014  2400              MOVS     r4,#0
;;;32     
;;;33           for(s32 iByte=1; iByte<inLength; iByte++) {
000016  6034              STR      r4,[r6,#0]
000018  2401              MOVS     r4,#1
00001a  2901              CMP      r1,#1
;;;34             // If the current component is the same color as the current pixel,
;;;35             // and not too big, keep growing it
;;;36     
;;;37             const bool isNewColor = (curComponentColor == 0 && in[iByte] != 0) || (curComponentColor == 1 && in[iByte] == 0);
;;;38     
;;;39             if(isNewColor || curComponentCount > 126) {
;;;40               out[outCompressedLength] = static_cast<u8>(curComponentColor * 128 + curComponentCount);
;;;41               outCompressedLength++;
;;;42     
;;;43               if(outCompressedLength >= (outMaxLength-1)) {
00001c  bfc8              IT       GT
00001e  1e5f              SUBGT    r7,r3,#1
000020  dd29              BLE      |L2.118|
                  |L2.34|
000022  f1bc0f00          CMP      r12,#0                ;37
000026  d005              BEQ      |L2.52|
000028  f1bc0f00          CMP      r12,#0                ;37
00002c  d006              BEQ      |L2.60|
00002e  5d03              LDRB     r3,[r0,r4]            ;37
000030  b113              CBZ      r3,|L2.56|
000032  e003              B        |L2.60|
                  |L2.52|
000034  5d03              LDRB     r3,[r0,r4]            ;37
000036  b10b              CBZ      r3,|L2.60|
                  |L2.56|
000038  2301              MOVS     r3,#1                 ;37
00003a  e000              B        |L2.62|
                  |L2.60|
00003c  2300              MOVS     r3,#0                 ;37
                  |L2.62|
00003e  b91b              CBNZ     r3,|L2.72|
000040  2d7e              CMP      r5,#0x7e              ;39
000042  bfd8              IT       LE                    ;39
000044  1c6d              ADDLE    r5,r5,#1              ;39
000046  dd13              BLE      |L2.112|
                  |L2.72|
000048  6833              LDR      r3,[r6,#0]            ;40
00004a  eb051ccc          ADD      r12,r5,r12,LSL #7     ;40
00004e  f802c003          STRB     r12,[r2,r3]           ;40
000052  1c5b              ADDS     r3,r3,#1              ;40
000054  6033              STR      r3,[r6,#0]
000056  42bb              CMP      r3,r7
000058  db02              BLT      |L2.96|
;;;44                 return RESULT_FAIL_OUT_OF_MEMORY;
;;;45               }
;;;46     
;;;47               curComponentCount = 0; // Actually 1, but we're storing (count-1)
;;;48     
;;;49               if(in[iByte] == 0) {
;;;50                 curComponentColor = 0;
;;;51               } else {
;;;52                 curComponentColor = 1;
;;;53               }
;;;54             } else {
;;;55               curComponentCount++;
;;;56             }
;;;57           } // for(s32 iByte=1; iByte<inLength; iByte++)
;;;58     
;;;59           out[outCompressedLength] = static_cast<u8>(curComponentColor * 128 + curComponentCount);
;;;60           outCompressedLength++;
;;;61     
;;;62           return RESULT_OK;
;;;63         } // EncodeRunLengthBinary()
00005a  bcf0              POP      {r4-r7}
00005c  480a              LDR      r0,|L2.136|
00005e  4770              BX       lr
                  |L2.96|
000060  5d03              LDRB     r3,[r0,r4]            ;49
000062  2500              MOVS     r5,#0                 ;47
000064  2b00              CMP      r3,#0                 ;49
000066  bf0c              ITE      EQ                    ;50
000068  f04f0c00          MOVEQ    r12,#0                ;50
00006c  f04f0c01          MOVNE    r12,#1                ;52
                  |L2.112|
000070  1c64              ADDS     r4,r4,#1              ;52
000072  42a1              CMP      r1,r4                 ;33
000074  dcd5              BGT      |L2.34|
                  |L2.118|
000076  6830              LDR      r0,[r6,#0]            ;59
000078  eb0511cc          ADD      r1,r5,r12,LSL #7      ;59
00007c  5411              STRB     r1,[r2,r0]            ;59
00007e  1c40              ADDS     r0,r0,#1              ;59
000080  6030              STR      r0,[r6,#0]            ;62
000082  bcf0              POP      {r4-r7}
000084  2000              MOVS     r0,#0                 ;62
000086  4770              BX       lr
;;;64     
                          ENDP

                  |L2.136|
                          DCD      0x01000001

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4Anki8Embedded21EncodeRunLengthBinaryEPKhiPhiRi||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki8Embedded21EncodeRunLengthBinaryEPKhiPhiRi||
                          DCD      0x00000001

                          AREA ||area_number.4||, LINKORDER=||i._ZN4Anki8Embedded21DecodeRunLengthBinaryEPKhiPhiRi||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki8Embedded21DecodeRunLengthBinaryEPKhiPhiRi||
                          DCD      0x00000001
