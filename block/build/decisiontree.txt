; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\decisiontree.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\decisiontree.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F401xC -DUSE_STDPERIPH_DRIVER -DSTM32F411xE -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DOFFBOARD_VISION -DSTM32F401xx --omf_browse=.\build\decisiontree.crf ..\coretech\common\robot\src\decisionTree.cpp]
                          THUMB

                          AREA ||i._ZN4Anki8Embedded12DecisionTreeC1EPKviiiPKti||, CODE, READONLY, ALIGN=2

                  _ZN4Anki8Embedded12DecisionTreeC2EPKviiiPKti                  ; Alternate entry point ; Anki::Embedded::DecisionTree::DecisionTree__sub_object(const void*, int, int, int, const unsigned short*, int)
                  _ZN4Anki8Embedded12DecisionTreeC1EPKviiiPKti PROC ; Anki::Embedded::DecisionTree::DecisionTree(const void*, int, int, int, const unsigned short*, int)
;;;20     
;;;21         DecisionTree::DecisionTree(const void * restrict treeData, const s32 treeDataLength, const s32 treeDataNumFractionalBits, const s32 treeMaxDepth, const u16 * restrict leafLabels, const s32 numLeafLabels)
;;;22           : treeData(NULL), treeDataLength(-1), treeDataNumFractionalBits(-1), treeMaxDepth(-1), leafLabels(leafLabels), numLeafLabels(numLeafLabels)
;;;23         {
;;;24           AnkiConditionalErrorAndReturn(treeData != NULL, "DecisionTree::DecisionTree", "treeData is NULL");
;;;25           AnkiConditionalErrorAndReturn(treeDataLength > 0, "DecisionTree::DecisionTree", "treeDataLength <= 0");
;;;26           AnkiConditionalErrorAndReturn(treeDataNumFractionalBits >= 0 && treeDataNumFractionalBits <= 32, "DecisionTree::DecisionTree", "0 <= treeDataNumFractionalBits <= 32");
;;;27     
;;;28           if(this->leafLabels == NULL) {
;;;29             AnkiConditionalError(this->numLeafLabels==0, "DecisionTree::DecisionTree", "With NULL leafNode array, numLeafLabels must be 0.");
;;;30           }
;;;31           
;;;32           this->treeData = treeData;
;;;33           this->treeDataLength = treeDataLength;
;;;34           this->treeDataNumFractionalBits = treeDataNumFractionalBits;
;;;35           this->treeMaxDepth = treeMaxDepth;
;;;36         }
;;;37     
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b082              SUB      sp,sp,#8
000006  4604              MOV      r4,r0
000008  e9dd8008          LDRD     r8,r0,[sp,#0x20]
00000c  000f              MOVS     r7,r1
00000e  f04f0100          MOV      r1,#0
000012  f8ddc028          LDR      r12,[sp,#0x28]
000016  6021              STR      r1,[r4,#0]
000018  f04f31ff          MOV      r1,#0xffffffff
00001c  6061              STR      r1,[r4,#4]
00001e  f8c4c014          STR      r12,[r4,#0x14]
000022  60a1              STR      r1,[r4,#8]
000024  e9c41003          STRD     r1,r0,[r4,#0xc]
000028  4921              LDR      r1,|L1.176|
00002a  461d              MOV      r5,r3
00002c  4616              MOV      r6,r2
00002e  d00e              BEQ      |L1.78|
000030  2e00              CMP      r6,#0
000032  dc19              BGT      |L1.104|
000034  2019              MOVS     r0,#0x19
000036  e9cd1000          STRD     r1,r0,[sp,#0]
00003a  a31e              ADR      r3,|L1.180|
00003c  a229              ADR      r2,|L1.228|
00003e  a12e              ADR      r1,|L1.248|
000040  2005              MOVS     r0,#5
000042  f7fffffe          BL       _Anki_Log
000046  b002              ADD      sp,sp,#8
000048  4620              MOV      r0,r4
00004a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.78|
00004e  2018              MOVS     r0,#0x18
000050  e9cd1000          STRD     r1,r0,[sp,#0]
000054  a317              ADR      r3,|L1.180|
000056  a22f              ADR      r2,|L1.276|
000058  a127              ADR      r1,|L1.248|
00005a  2005              MOVS     r0,#5
00005c  f7fffffe          BL       _Anki_Log
000060  b002              ADD      sp,sp,#8
000062  4620              MOV      r0,r4
000064  e8bd81f0          POP      {r4-r8,pc}
                  |L1.104|
000068  2d21              CMP      r5,#0x21
00006a  d309              BCC      |L1.128|
00006c  201a              MOVS     r0,#0x1a
00006e  e9cd1000          STRD     r1,r0,[sp,#0]
000072  a310              ADR      r3,|L1.180|
000074  a22c              ADR      r2,|L1.296|
000076  a120              ADR      r1,|L1.248|
000078  2005              MOVS     r0,#5
00007a  f7fffffe          BL       _Anki_Log
00007e  e012              B        |L1.166|
                  |L1.128|
000080  2800              CMP      r0,#0
000082  d10b              BNE      |L1.156|
000084  f1bc0f00          CMP      r12,#0
000088  d008              BEQ      |L1.156|
00008a  201d              MOVS     r0,#0x1d
00008c  e9cd1000          STRD     r1,r0,[sp,#0]
000090  a308              ADR      r3,|L1.180|
000092  a22f              ADR      r2,|L1.336|
000094  a118              ADR      r1,|L1.248|
000096  2005              MOVS     r0,#5
000098  f7fffffe          BL       _Anki_Log
                  |L1.156|
00009c  f8c4800c          STR      r8,[r4,#0xc]
0000a0  6027              STR      r7,[r4,#0]
0000a2  e9c46501          STRD     r6,r5,[r4,#4]
                  |L1.166|
0000a6  b002              ADD      sp,sp,#8
0000a8  4620              MOV      r0,r4
0000aa  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      ||.constdata||
                  |L1.180|
0000b4  2e2e5c63          DCB      "..\\coretech\\common\\robot\\src\\decisionTree.cpp",0
0000b8  6f726574
0000bc  6563685c
0000c0  636f6d6d
0000c4  6f6e5c72
0000c8  6f626f74
0000cc  5c737263
0000d0  5c646563
0000d4  6973696f
0000d8  6e547265
0000dc  652e6370
0000e0  7000    
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L1.228|
0000e4  74726565          DCB      "treeDataLength <= 0",0
0000e8  44617461
0000ec  4c656e67
0000f0  7468203c
0000f4  3d203000
                  |L1.248|
0000f8  44656369          DCB      "DecisionTree::DecisionTree",0
0000fc  73696f6e
000100  54726565
000104  3a3a4465
000108  63697369
00010c  6f6e5472
000110  656500  
000113  00                DCB      0
                  |L1.276|
000114  74726565          DCB      "treeData is NULL",0
000118  44617461
00011c  20697320
000120  4e554c4c
000124  00      
000125  00                DCB      0
000126  00                DCB      0
000127  00                DCB      0
                  |L1.296|
000128  30203c3d          DCB      "0 <= treeDataNumFractionalBits <= 32",0
00012c  20747265
000130  65446174
000134  614e756d
000138  46726163
00013c  74696f6e
000140  616c4269
000144  7473203c
000148  3d203332
00014c  00      
00014d  00                DCB      0
00014e  00                DCB      0
00014f  00                DCB      0
                  |L1.336|
000150  57697468          DCB      "With NULL leafNode array, numLeafLabels must be 0.",0
000154  204e554c
000158  4c206c65
00015c  61664e6f
000160  64652061
000164  72726179
000168  2c206e75
00016c  6d4c6561
000170  664c6162
000174  656c7320
000178  6d757374
00017c  20626520
000180  302e00  
000183  00                DCB      0

                          AREA ||i._ZN4Anki8Embedded12DecisionTreeC1Ev||, CODE, READONLY, ALIGN=1

                  _ZN4Anki8Embedded12DecisionTreeC2Ev                  ; Alternate entry point ; Anki::Embedded::DecisionTree::DecisionTree__sub_object()
                  _ZN4Anki8Embedded12DecisionTreeC1Ev PROC ; Anki::Embedded::DecisionTree::DecisionTree()
;;;15       {
;;;16         DecisionTree::DecisionTree()
;;;17           : treeData(NULL), treeDataLength(-1), treeDataNumFractionalBits(-1), treeMaxDepth(-1)
;;;18         {
;;;19         }
;;;20     
000000  2100              MOVS     r1,#0
000002  6001              STR      r1,[r0,#0]
000004  1e49              SUBS     r1,r1,#1
000006  6041              STR      r1,[r0,#4]
000008  6081              STR      r1,[r0,#8]
00000a  60c1              STR      r1,[r0,#0xc]
00000c  4770              BX       lr
                          ENDP


                          AREA ||i._ZNK4Anki8Embedded12DecisionTree15get_numMaxDepthEv||, CODE, READONLY, ALIGN=1

                  _ZNK4Anki8Embedded12DecisionTree15get_numMaxDepthEv PROC ; Anki::Embedded::DecisionTree::get_numMaxDepth() const
;;;50     
;;;51         s32 DecisionTree::get_numMaxDepth() const
000000  68c0              LDR      r0,[r0,#0xc]
;;;52         {
;;;53           return this->treeMaxDepth;
;;;54         }
000002  4770              BX       lr
;;;55       } // namespace Embedded
                          ENDP


                          AREA ||i._ZNK4Anki8Embedded12DecisionTree21get_numFractionalBitsEv||, CODE, READONLY, ALIGN=1

                  _ZNK4Anki8Embedded12DecisionTree21get_numFractionalBitsEv PROC ; Anki::Embedded::DecisionTree::get_numFractionalBits() const
;;;45     
;;;46         s32 DecisionTree::get_numFractionalBits() const
000000  6880              LDR      r0,[r0,#8]
;;;47         {
;;;48           return this->treeDataNumFractionalBits;
;;;49         }
000002  4770              BX       lr
;;;50     
                          ENDP


                          AREA ||i._ZNK4Anki8Embedded12DecisionTree7IsValidEv||, CODE, READONLY, ALIGN=1

                  _ZNK4Anki8Embedded12DecisionTree7IsValidEv PROC ; Anki::Embedded::DecisionTree::IsValid() const
;;;37     
;;;38         bool DecisionTree::IsValid() const
000000  6800              LDR      r0,[r0,#0]
;;;39         {
;;;40           if(!treeData)
000002  2800              CMP      r0,#0
;;;41             return false;
;;;42     
;;;43           return true;
000004  bf18              IT       NE
000006  2001              MOVNE    r0,#1
;;;44         }
000008  4770              BX       lr
;;;45     
                          ENDP


                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4Anki8Embedded12DecisionTreeC1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki8Embedded12DecisionTreeC1Ev||
                          DCD      0x00000001

                          AREA ||area_number.7||, LINKORDER=||i._ZN4Anki8Embedded12DecisionTreeC1EPKviiiPKti||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki8Embedded12DecisionTreeC1EPKviiiPKti||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i._ZNK4Anki8Embedded12DecisionTree7IsValidEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK4Anki8Embedded12DecisionTree7IsValidEv||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i._ZNK4Anki8Embedded12DecisionTree21get_numFractionalBitsEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK4Anki8Embedded12DecisionTree21get_numFractionalBitsEv||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i._ZNK4Anki8Embedded12DecisionTree15get_numMaxDepthEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK4Anki8Embedded12DecisionTree15get_numMaxDepthEv||
                          DCD      0x00000001

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __PRETTY_FUNCTION__
000000  416e6b69          DCB      0x41,0x6e,0x6b,0x69
000004  3a3a456d          DCB      0x3a,0x3a,0x45,0x6d
000008  62656464          DCB      0x62,0x65,0x64,0x64
00000c  65643a3a          DCB      0x65,0x64,0x3a,0x3a
000010  44656369          DCB      0x44,0x65,0x63,0x69
000014  73696f6e          DCB      0x73,0x69,0x6f,0x6e
000018  54726565          DCB      0x54,0x72,0x65,0x65
00001c  3a3a4465          DCB      0x3a,0x3a,0x44,0x65
000020  63697369          DCB      0x63,0x69,0x73,0x69
000024  6f6e5472          DCB      0x6f,0x6e,0x54,0x72
000028  65652863          DCB      0x65,0x65,0x28,0x63
00002c  6f6e7374          DCB      0x6f,0x6e,0x73,0x74
000030  20766f69          DCB      0x20,0x76,0x6f,0x69
000034  64202a2c          DCB      0x64,0x20,0x2a,0x2c
000038  20736967          DCB      0x20,0x73,0x69,0x67
00003c  6e656420          DCB      0x6e,0x65,0x64,0x20
000040  696e742c          DCB      0x69,0x6e,0x74,0x2c
000044  20736967          DCB      0x20,0x73,0x69,0x67
000048  6e656420          DCB      0x6e,0x65,0x64,0x20
00004c  696e742c          DCB      0x69,0x6e,0x74,0x2c
000050  20736967          DCB      0x20,0x73,0x69,0x67
000054  6e656420          DCB      0x6e,0x65,0x64,0x20
000058  696e742c          DCB      0x69,0x6e,0x74,0x2c
00005c  20636f6e          DCB      0x20,0x63,0x6f,0x6e
000060  73742075          DCB      0x73,0x74,0x20,0x75
000064  6e736967          DCB      0x6e,0x73,0x69,0x67
000068  6e656420          DCB      0x6e,0x65,0x64,0x20
00006c  73686f72          DCB      0x73,0x68,0x6f,0x72
000070  74202a2c          DCB      0x74,0x20,0x2a,0x2c
000074  20736967          DCB      0x20,0x73,0x69,0x67
000078  6e656420          DCB      0x6e,0x65,0x64,0x20
00007c  696e7429          DCB      0x69,0x6e,0x74,0x29
000080  00                DCB      0x00
