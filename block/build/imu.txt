; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\imu.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\imu.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F401xC -DUSE_STDPERIPH_DRIVER -DSTM32F411xE -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DOFFBOARD_VISION -DSTM32F401xx --omf_browse=.\build\imu.crf arm_hal\hal\imu.cpp]
                          THUMB

                          AREA ||i._ZN4Anki5Cozmo3HAL11IMUReadDataERNS1_17IMU_DataStructureE||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL11IMUReadDataERNS1_17IMU_DataStructureE PROC ; Anki::Cozmo::HAL::IMUReadData(Anki::Cozmo::HAL::IMU_DataStructure&)
;;;455          // Assuming GYRO +/- 500 deg range
;;;456          void IMUReadData(IMU_DataStructure &IMUData)
000000  b570              PUSH     {r4-r6,lr}
;;;457          {
000002  4605              MOV      r5,r0
000004  ed2d8b02          VPUSH    {d8}
;;;458            static uint8_t temp_data_msb, temp_data_lsb;
;;;459            static s16 temp_data;
;;;460            
;;;461            // select accelerometer
;;;462            IMUSelectDevice(IMU_ACC);
000008  2001              MOVS     r0,#1
00000a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
;;;463            
;;;464            // Accelerometer x values
;;;465            // Get data
;;;466            IMUWriteReadPipelined(IMU_READ | ACC_ACCD_X_LSB);  // ACC_ACCD_X_LSB
00000e  2082              MOVS     r0,#0x82
000010  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
;;;467            IMUWriteReadPipelined(0x00);  // ACC_ACCD_X_MSB
000014  2000              MOVS     r0,#0
000016  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
;;;468            temp_data_lsb = IMUWriteReadPipelined(0x00); // ACC_ACCD_Y_LSB
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000020  4c4c              LDR      r4,|L1.340|
000022  70a0              STRB     r0,[r4,#2]
;;;469            temp_data_msb = IMUWriteReadPipelined(0x00);  //ACC_ACCD_Y_MSB
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00002a  7060              STRB     r0,[r4,#1]
;;;470    
;;;471            // Combine and convert to signed
;;;472            temp_data = (temp_data_msb << 8) | (temp_data_lsb & ACC_LSB_MASK);
00002c  78a1              LDRB     r1,[r4,#2]  ; temp_data_lsb
00002e  f00101f0          AND      r1,r1,#0xf0
000032  ea412000          ORR      r0,r1,r0,LSL #8
000036  b200              SXTH     r0,r0
;;;473            temp_data = temp_data >> 4;  // signed extension shift to 12 bits
000038  1100              ASRS     r0,r0,#4
;;;474    				
;;;475            // Put values into IMU Data Struct
;;;476    #ifdef COZMO2          
;;;477            // With head facing forward, x-axis points along robot y-axis. Putting x value into y.
;;;478            // IMU rotated 180 around Z axis and then 180 around Y axis in 2.1, so sign of acc x is preserved.      
;;;479            IMUData.acc_y  = RANGE_CONST_2G * temp_data;  // m/s^2    
;;;480    #else
;;;481            IMUData.acc_y  = RANGE_CONST_2G * temp_data;  // m/s^2    
00003a  ee000a10          VMOV     s0,r0
00003e  80a0              STRH     r0,[r4,#4]            ;473
000040  eeb80ac0          VCVT.F32.S32 s0,s0
000044  ed9f8a44          VLDR     s16,|L1.344|
;;;482    #endif
;;;483            
;;;484            temp_data_lsb = IMUWriteReadPipelined(0x00);  // ACC_ACCD_Z_LSB
000048  2000              MOVS     r0,#0
00004a  ee200a08          VMUL.F32 s0,s0,s16             ;481
00004e  ed850a01          VSTR     s0,[r5,#4]            ;481
000052  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000056  70a0              STRB     r0,[r4,#2]
;;;485            temp_data_msb = IMUWriteReadPipelined(0x00);  // ACC_ACCD_Z_MSB
000058  2000              MOVS     r0,#0
00005a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00005e  7060              STRB     r0,[r4,#1]
;;;486            
;;;487            // Combine and convert to signed
;;;488            temp_data = (temp_data_msb << 8) | (temp_data_lsb & ACC_LSB_MASK);
000060  78a1              LDRB     r1,[r4,#2]  ; temp_data_lsb
000062  f00101f0          AND      r1,r1,#0xf0
000066  ea412000          ORR      r0,r1,r0,LSL #8
00006a  b200              SXTH     r0,r0
;;;489            temp_data = temp_data >> 4; // Signed extension shift to 12 bits
00006c  1100              ASRS     r0,r0,#4
;;;490    				
;;;491            // Put values into IMU Data Struct
;;;492    #ifdef COZMO2          
;;;493            // With head facing forward, y-axis points along robot z-axis. Putting y value into z.
;;;494            // IMU rotated 180 around Z axis and then 180 around Y axis in 2.1, so sign of acc y is flipped.      
;;;495            IMUData.acc_z  = -RANGE_CONST_2G * temp_data;      // m/s^2    
;;;496    #else
;;;497            IMUData.acc_z  = RANGE_CONST_2G * temp_data;      // m/s^2   
00006e  ee000a10          VMOV     s0,r0
000072  80a0              STRH     r0,[r4,#4]            ;489
;;;498    #endif
;;;499    
;;;500            temp_data_lsb = IMUWriteReadPipelined(0x00);    
000074  2000              MOVS     r0,#0
000076  eeb80ac0          VCVT.F32.S32 s0,s0                 ;497
00007a  ee200a08          VMUL.F32 s0,s0,s16             ;497
00007e  ed850a02          VSTR     s0,[r5,#8]            ;497
000082  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000086  70a0              STRB     r0,[r4,#2]
;;;501            temp_data_msb = IMUWriteReadPipelined();
000088  f04f30ff          MOV      r0,#0xffffffff
00008c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000090  7060              STRB     r0,[r4,#1]
;;;502            
;;;503            // Combine and convert to signed
;;;504            temp_data = (temp_data_msb << 8) | (temp_data_lsb & ACC_LSB_MASK);
000092  78a1              LDRB     r1,[r4,#2]  ; temp_data_lsb
000094  f00101f0          AND      r1,r1,#0xf0
000098  ea412000          ORR      r0,r1,r0,LSL #8
00009c  b200              SXTH     r0,r0
;;;505            temp_data = temp_data >> 4;  // Signed extension shift to 12 bits
00009e  1100              ASRS     r0,r0,#4
;;;506    				
;;;507            // Put values into IMU Data Struct
;;;508    #ifdef COZMO2                
;;;509            // With head facing forward, z-axis points along robot x-axis. Putting z value into x.
;;;510            // IMU rotated 180 around Z axis and then 180 around Y axis in 2.1, so sign of acc z is flipped.
;;;511            IMUData.acc_x  = -RANGE_CONST_2G * temp_data;  // m/s^2    
;;;512    #else
;;;513            IMUData.acc_x  = RANGE_CONST_2G * temp_data;  // m/s^2    
0000a0  ee000a10          VMOV     s0,r0
0000a4  80a0              STRH     r0,[r4,#4]            ;505
;;;514    #endif
;;;515            
;;;516            // Select gyro (accelerometer automatically deselected)
;;;517            IMUSelectDevice(IMU_GYRO);
0000a6  2000              MOVS     r0,#0
0000a8  eeb80ac0          VCVT.F32.S32 s0,s0                 ;513
0000ac  ee200a08          VMUL.F32 s0,s0,s16             ;513
0000b0  ed850a00          VSTR     s0,[r5,#0]            ;513
0000b4  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
;;;518            
;;;519            // Gyro x values
;;;520            // Get data
;;;521            IMUWriteReadPipelined(IMU_READ | GYRO_RATE_X_LSB);  // GYRO_RATE_X_LSB
0000b8  2082              MOVS     r0,#0x82
0000ba  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
;;;522            IMUWriteReadPipelined(0x00);  // GYRO_RATE_X_MSB
0000be  2000              MOVS     r0,#0
0000c0  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
;;;523            temp_data_lsb = IMUWriteReadPipelined(0x00);  // GYRO_RATE_Y_LSB
0000c4  2000              MOVS     r0,#0
0000c6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0000ca  70a0              STRB     r0,[r4,#2]
;;;524            temp_data_msb = IMUWriteReadPipelined(0x00);  // GYRO_RATE_Y_MSB
0000cc  2000              MOVS     r0,#0
0000ce  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0000d2  7060              STRB     r0,[r4,#1]
;;;525            
;;;526            // Combine
;;;527            temp_data = (temp_data_msb << 8) | (temp_data_lsb ); 
0000d4  78a1              LDRB     r1,[r4,#2]  ; temp_data_lsb
;;;528    				
;;;529            // Put values into IMU Data Struct
;;;530    #ifdef COZMO2                
;;;531            // With head facing forward, x-axis points along robot y-axis. Putting x value into y.
;;;532            // IMU rotated 180 around Z axis and then 180 around Y axis in 2.1, so sign of gyro x is preserved.
;;;533            IMUData.rate_y  = RANGE_CONST_500D * temp_data;  // rad/s    
;;;534    #else
;;;535            IMUData.rate_y  = RANGE_CONST_500D * temp_data;  // rad/s    
0000d6  ed9f8a21          VLDR     s16,|L1.348|
0000da  ea412000          ORR      r0,r1,r0,LSL #8       ;527
0000de  b200              SXTH     r0,r0                 ;527
0000e0  ee000a10          VMOV     s0,r0
0000e4  80a0              STRH     r0,[r4,#4]            ;527
;;;536    #endif
;;;537            
;;;538            temp_data_lsb = IMUWriteReadPipelined(0x00);  // GYRO_RATE_Z_LSB
0000e6  2000              MOVS     r0,#0
0000e8  eeb80ac0          VCVT.F32.S32 s0,s0                 ;535
0000ec  ee200a08          VMUL.F32 s0,s0,s16             ;535
0000f0  ed850a04          VSTR     s0,[r5,#0x10]         ;535
0000f4  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0000f8  70a0              STRB     r0,[r4,#2]
;;;539            temp_data_msb = IMUWriteReadPipelined(0x00);  // GYRO_RATE_Z_MSB
0000fa  2000              MOVS     r0,#0
0000fc  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000100  7060              STRB     r0,[r4,#1]
;;;540    
;;;541            // Combine
;;;542            temp_data = (temp_data_msb << 8) | (temp_data_lsb ); 
000102  78a1              LDRB     r1,[r4,#2]  ; temp_data_lsb
000104  ea412000          ORR      r0,r1,r0,LSL #8
000108  b200              SXTH     r0,r0
;;;543    				
;;;544            // Put values into IMU Data Struct
;;;545    #ifdef COZMO2                
;;;546            // With head facing forward, y-axis points along robot z-axis. Putting y value into z.
;;;547            // IMU rotated 180 around Z axis and then 180 around Y axis in 2.1, so sign of gyro y is flipped.
;;;548            IMUData.rate_z  = -RANGE_CONST_500D * temp_data;  // rad/s    
;;;549    #else
;;;550            IMUData.rate_z  = RANGE_CONST_500D * temp_data;  // rad/s    
00010a  ee000a10          VMOV     s0,r0
00010e  80a0              STRH     r0,[r4,#4]            ;542
;;;551    #endif
;;;552      
;;;553            temp_data_lsb = IMUWriteReadPipelined(0x00);    
000110  2000              MOVS     r0,#0
000112  eeb80ac0          VCVT.F32.S32 s0,s0                 ;550
000116  ee200a08          VMUL.F32 s0,s0,s16             ;550
00011a  ed850a05          VSTR     s0,[r5,#0x14]         ;550
00011e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000122  70a0              STRB     r0,[r4,#2]
;;;554            temp_data_msb = IMUWriteReadPipelined();
000124  f04f30ff          MOV      r0,#0xffffffff
000128  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00012c  7060              STRB     r0,[r4,#1]
;;;555    
;;;556            // Combine
;;;557            temp_data = (temp_data_msb << 8) | (temp_data_lsb ); 
00012e  78a1              LDRB     r1,[r4,#2]  ; temp_data_lsb
000130  ea412000          ORR      r0,r1,r0,LSL #8
000134  b200              SXTH     r0,r0
;;;558    				
;;;559            // Put values into IMU Data Struct
;;;560    #ifdef COZMO2                
;;;561            // With head facing forward, z-axis points along robot x-axis. Putting z value into x.
;;;562            // IMU rotated 180 around Z axis and then 180 around Y axis in 2.1, so sign of gyro z is flipped.
;;;563            IMUData.rate_x  = -RANGE_CONST_500D * temp_data;  // rad/s    
;;;564    #else
;;;565            IMUData.rate_x  = RANGE_CONST_500D * temp_data;  // rad/s    
000136  ee000a10          VMOV     s0,r0
00013a  80a0              STRH     r0,[r4,#4]            ;557
00013c  eeb80ac0          VCVT.F32.S32 s0,s0
000140  ee200a08          VMUL.F32 s0,s0,s16
000144  ed850a03          VSTR     s0,[r5,#0xc]
;;;566    #endif
;;;567                      
;;;568            // Deselect gyro
;;;569            IMUDeselectAll();
000148  ecbd8b02          VPOP     {d8}
00014c  e8bd4070          POP      {r4-r6,lr}
000150  f7ffbffe          B.W      _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv ; Anki::Cozmo::HAL::IMUDeselectAll()
;;;570          }
;;;571        }         
                          ENDP

                  |L1.340|
                          DCD      ||.data||
                  |L1.344|
000158  411947ae          DCFS     0x411947ae ; 9.5799999237060547
                  |L1.348|
00015c  398b9e2e          DCFS     0x398b9e2e ; 0.00026629999047145247

                          AREA ||i._ZN4Anki5Cozmo3HAL14IMUDeselectAllEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv PROC ; Anki::Cozmo::HAL::IMUDeselectAll()
;;;251          // Deselect accelerometer and gyro SPI
;;;252          static void IMUDeselectAll()
000000  b510              PUSH     {r4,lr}
;;;253          {
;;;254            // Wait for data transfer to finish
;;;255            while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY))
000002  4c09              LDR      r4,|L2.40|
                  |L2.4|
000004  2180              MOVS     r1,#0x80
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       SPI_I2S_GetFlagStatus
00000c  2800              CMP      r0,#0
00000e  d1f9              BNE      |L2.4|
;;;256            {
;;;257            }
;;;258            // deselect accelerometer and gyro      
;;;259            GPIO_SET(GPIO_IMU_CS_ACC, PIN_IMU_CS_ACC);
000010  4806              LDR      r0,|L2.44|
000012  f44f6180          MOV      r1,#0x400
000016  8301              STRH     r1,[r0,#0x18]
;;;260            GPIO_SET(GPIO_IMU_CS_GYRO, PIN_IMU_CS_GYRO);
000018  1581              ASRS     r1,r0,#22
00001a  8301              STRH     r1,[r0,#0x18]
;;;261            MicroWait(1);
00001c  e8bd4010          POP      {r4,lr}
000020  2001              MOVS     r0,#1
000022  f7ffbffe          B.W      _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
;;;262          }
;;;263          
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      0x40003800
                  |L2.44|
                          DCD      0x40020000

                          AREA ||i._ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE PROC ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
;;;265          // Select accelerometer or gyro
;;;266          static void IMUSelectDevice(IMU_DEVICE device)
000000  b510              PUSH     {r4,lr}
;;;267          {
000002  4604              MOV      r4,r0
;;;268            // Deselect all
;;;269            IMUDeselectAll();
000004  f7fffffe          BL       _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv ; Anki::Cozmo::HAL::IMUDeselectAll()
;;;270    
;;;271            // Select device
;;;272            if(device == IMU_GYRO)  // Select gyro
;;;273            {
;;;274              GPIO_RESET(GPIO_IMU_CS_GYRO, PIN_IMU_CS_GYRO);
000008  4808              LDR      r0,|L3.44|
00000a  2c00              CMP      r4,#0                 ;272
00000c  bf08              IT       EQ
00000e  f44f7180          MOVEQ    r1,#0x100
000012  d004              BEQ      |L3.30|
;;;275            }
;;;276            else if(device == IMU_ACC)  // Select accelerometer
000014  2c01              CMP      r4,#1
;;;277            {
;;;278              GPIO_RESET(GPIO_IMU_CS_ACC, PIN_IMU_CS_ACC);
000016  bf08              IT       EQ
000018  f44f6180          MOVEQ    r1,#0x400
00001c  d100              BNE      |L3.32|
                  |L3.30|
00001e  8341              STRH     r1,[r0,#0x1a]
                  |L3.32|
;;;279            }
;;;280            MicroWait(1);
000020  e8bd4010          POP      {r4,lr}
000024  2001              MOVS     r0,#1
000026  f7ffbffe          B.W      _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
;;;281          }
;;;282    
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      0x40020000

                          AREA ||i._ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs PROC ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
;;;213          //    so we only read the last value, and reset begin_pipeline to 1
;;;214          static uint8_t IMUWriteReadPipelined(int16_t value = -1)
000000  b570              PUSH     {r4-r6,lr}
;;;215          {
;;;216            static bool begin_pipeline = 1;
;;;217            
;;;218            // Just send data the first time through
;;;219            if(begin_pipeline)
000002  4d14              LDR      r5,|L4.84|
000004  4604              MOV      r4,r0                 ;215
;;;220            {
;;;221                SPI_I2S_SendData(SPI2, value);
000006  4e14              LDR      r6,|L4.88|
000008  7828              LDRB     r0,[r5,#0]            ;219  ; begin_pipeline
00000a  b138              CBZ      r0,|L4.28|
00000c  b2a1              UXTH     r1,r4
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       SPI_I2S_SendData
;;;222                begin_pipeline = 0;
000014  2000              MOVS     r0,#0
000016  7028              STRB     r0,[r5,#0]
;;;223                return 0xAA;
000018  20aa              MOVS     r0,#0xaa
;;;224            }
;;;225            
;;;226            // If value is -1 (default), skip transmit, and reset begin_pipeline variable
;;;227            if(value != -1)
;;;228            {
;;;229              // Wait until TXE = 1 (wait until transmit buffer is empty)
;;;230              while(!(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_TXE)))
;;;231              {
;;;232              }
;;;233              // Send Data, TXE = 0
;;;234              SPI_I2S_SendData(SPI2, value);
;;;235            }
;;;236            else
;;;237            {
;;;238              begin_pipeline = 1;
;;;239            }
;;;240            
;;;241            // Wait until RXNE = 1 (wait for receive buffer to have data)
;;;242            while(!SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_RXNE))
;;;243            {
;;;244            }
;;;245            
;;;246            // Receive data
;;;247            return SPI_I2S_ReceiveData(SPI2);
;;;248          }
00001a  bd70              POP      {r4-r6,pc}
                  |L4.28|
00001c  f1b43fff          CMP      r4,#0xffffffff        ;227
000020  bf04              ITT      EQ                    ;238
000022  2001              MOVEQ    r0,#1                 ;238
000024  7028              STRBEQ   r0,[r5,#0]            ;238
000026  d009              BEQ      |L4.60|
                  |L4.40|
000028  2102              MOVS     r1,#2                 ;230
00002a  4630              MOV      r0,r6                 ;230
00002c  f7fffffe          BL       SPI_I2S_GetFlagStatus
000030  2800              CMP      r0,#0                 ;230
000032  d0f9              BEQ      |L4.40|
000034  b2a1              UXTH     r1,r4                 ;234
000036  4630              MOV      r0,r6                 ;234
000038  f7fffffe          BL       SPI_I2S_SendData
                  |L4.60|
00003c  2101              MOVS     r1,#1                 ;242
00003e  4630              MOV      r0,r6                 ;242
000040  f7fffffe          BL       SPI_I2S_GetFlagStatus
000044  2800              CMP      r0,#0                 ;242
000046  d0f9              BEQ      |L4.60|
000048  4630              MOV      r0,r6                 ;247
00004a  f7fffffe          BL       SPI_I2S_ReceiveData
00004e  b2c0              UXTB     r0,r0                 ;247
000050  bd70              POP      {r4-r6,pc}
;;;249              
                          ENDP

000052  0000              DCW      0x0000
                  |L4.84|
                          DCD      ||.data||
                  |L4.88|
                          DCD      0x40003800

                          AREA ||i._ZN4Anki5Cozmo3HAL7IMUInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL7IMUInitEv PROC ; Anki::Cozmo::HAL::IMUInit()
;;;442          // Initialize SPI2, set up accelerometer and gyro
;;;443          void IMUInit()
000000  b5f0              PUSH     {r4-r7,lr}
;;;444          {  
000002  b087              SUB      sp,sp,#0x1c
;;;445            // Initialize CS pin values
;;;446            IMUDeselectAll();
000004  f7fffffe          BL       _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv ; Anki::Cozmo::HAL::IMUDeselectAll()
000008  2101              MOVS     r1,#1
00000a  0388              LSLS     r0,r1,#14
00000c  f7fffffe          BL       RCC_APB1PeriphClockCmd
000010  2101              MOVS     r1,#1
000012  2002              MOVS     r0,#2
000014  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000018  2101              MOVS     r1,#1
00001a  4608              MOV      r0,r1
00001c  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000020  4d78              LDR      r5,|L5.516|
000022  2205              MOVS     r2,#5
000024  210d              MOVS     r1,#0xd
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GPIO_PinAFConfig
00002c  2205              MOVS     r2,#5
00002e  210e              MOVS     r1,#0xe
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       GPIO_PinAFConfig
000036  2205              MOVS     r2,#5
000038  210f              MOVS     r1,#0xf
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       GPIO_PinAFConfig
000040  2701              MOVS     r7,#1
000042  2102              MOVS     r1,#2
000044  f88d7005          STRB     r7,[sp,#5]
000048  2400              MOVS     r4,#0
00004a  f88d4006          STRB     r4,[sp,#6]
00004e  0348              LSLS     r0,r1,#13
000050  f88d4007          STRB     r4,[sp,#7]
000054  f88d1004          STRB     r1,[sp,#4]
000058  9000              STR      r0,[sp,#0]
00005a  4669              MOV      r1,sp
00005c  4628              MOV      r0,r5
00005e  f7fffffe          BL       GPIO_Init
000062  0378              LSLS     r0,r7,#13
000064  9000              STR      r0,[sp,#0]
000066  f88d4006          STRB     r4,[sp,#6]
00006a  4669              MOV      r1,sp
00006c  4628              MOV      r0,r5
00006e  f7fffffe          BL       GPIO_Init
000072  03f8              LSLS     r0,r7,#15
000074  9000              STR      r0,[sp,#0]
000076  4669              MOV      r1,sp
000078  4628              MOV      r0,r5
00007a  f7fffffe          BL       GPIO_Init
00007e  15a8              ASRS     r0,r5,#22
000080  f88d7006          STRB     r7,[sp,#6]
000084  4d60              LDR      r5,|L5.520|
000086  f88d7004          STRB     r7,[sp,#4]
00008a  9000              STR      r0,[sp,#0]
00008c  f88d4007          STRB     r4,[sp,#7]
000090  4669              MOV      r1,sp
000092  4628              MOV      r0,r5
000094  f7fffffe          BL       GPIO_Init
000098  152e              ASRS     r6,r5,#20
00009a  4669              MOV      r1,sp
00009c  4628              MOV      r0,r5
00009e  9600              STR      r6,[sp,#0]
0000a0  f7fffffe          BL       GPIO_Init
0000a4  f88d7007          STRB     r7,[sp,#7]
0000a8  156f              ASRS     r7,r5,#21
0000aa  9700              STR      r7,[sp,#0]
0000ac  f88d4004          STRB     r4,[sp,#4]
0000b0  4669              MOV      r1,sp
0000b2  4628              MOV      r0,r5
0000b4  f7fffffe          BL       GPIO_Init
0000b8  f8ad4008          STRH     r4,[sp,#8]
0000bc  f44f7082          MOV      r0,#0x104
0000c0  f8ad000a          STRH     r0,[sp,#0xa]
0000c4  2018              MOVS     r0,#0x18
0000c6  f8ad400c          STRH     r4,[sp,#0xc]
0000ca  f8ad0014          STRH     r0,[sp,#0x14]
0000ce  f8ad400e          STRH     r4,[sp,#0xe]
0000d2  f8ad4010          STRH     r4,[sp,#0x10]
0000d6  f8ad4016          STRH     r4,[sp,#0x16]
0000da  f8ad4018          STRH     r4,[sp,#0x18]
0000de  4c4b              LDR      r4,|L5.524|
0000e0  f8ad7012          STRH     r7,[sp,#0x12]
0000e4  a902              ADD      r1,sp,#8
0000e6  4620              MOV      r0,r4
0000e8  f7fffffe          BL       SPI_Init
0000ec  2101              MOVS     r1,#1
0000ee  4620              MOV      r0,r4
0000f0  f7fffffe          BL       SPI_Cmd
                  |L5.244|
0000f4  f7fffffe          BL       _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv ; Anki::Cozmo::HAL::IMUDeselectAll()
0000f8  836e              STRH     r6,[r5,#0x1a]
0000fa  2001              MOVS     r0,#1
0000fc  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000100  2080              MOVS     r0,#0x80
000102  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000106  2000              MOVS     r0,#0
000108  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00010c  f04f30ff          MOV      r0,#0xffffffff
000110  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000114  28fa              CMP      r0,#0xfa
000116  d1ed              BNE      |L5.244|
000118  2001              MOVS     r0,#1
00011a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
00011e  200f              MOVS     r0,#0xf
000120  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000124  2003              MOVS     r0,#3
000126  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00012a  2014              MOVS     r0,#0x14
00012c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000130  2001              MOVS     r0,#1
000132  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
000136  2010              MOVS     r0,#0x10
000138  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00013c  200d              MOVS     r0,#0xd
00013e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000142  2014              MOVS     r0,#0x14
000144  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000148  2001              MOVS     r0,#1
00014a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
00014e  2020              MOVS     r0,#0x20
000150  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000154  200f              MOVS     r0,#0xf
000156  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00015a  2014              MOVS     r0,#0x14
00015c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000160  2001              MOVS     r0,#1
000162  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
000166  208f              MOVS     r0,#0x8f
000168  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00016c  2000              MOVS     r0,#0
00016e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000172  f04f30ff          MOV      r0,#0xffffffff
000176  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
                  |L5.378|
00017a  2803              CMP      r0,#3
00017c  d1fd              BNE      |L5.378|
00017e  2001              MOVS     r0,#1
000180  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
000184  2090              MOVS     r0,#0x90
000186  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
00018a  2000              MOVS     r0,#0
00018c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
000190  f04f30ff          MOV      r0,#0xffffffff
000194  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
                  |L5.408|
000198  280d              CMP      r0,#0xd
00019a  d1fd              BNE      |L5.408|
00019c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv ; Anki::Cozmo::HAL::IMUDeselectAll()
0001a0  2000              MOVS     r0,#0
0001a2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
0001a6  2080              MOVS     r0,#0x80
0001a8  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0001ac  2000              MOVS     r0,#0
0001ae  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0001b2  f04f30ff          MOV      r0,#0xffffffff
0001b6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0001ba  4604              MOV      r4,r0
0001bc  f7fffffe          BL       _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv ; Anki::Cozmo::HAL::IMUDeselectAll()
                  |L5.448|
0001c0  2c0f              CMP      r4,#0xf
0001c2  d1fd              BNE      |L5.448|
0001c4  2000              MOVS     r0,#0
0001c6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
0001ca  200f              MOVS     r0,#0xf
0001cc  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0001d0  2002              MOVS     r0,#2
0001d2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0001d6  2002              MOVS     r0,#2
0001d8  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
0001dc  2000              MOVS     r0,#0
0001de  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE ; Anki::Cozmo::HAL::IMUSelectDevice(IMU_DEVICE)
0001e2  208f              MOVS     r0,#0x8f
0001e4  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0001e8  2000              MOVS     r0,#0
0001ea  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
0001ee  f04f30ff          MOV      r0,#0xffffffff
0001f2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs ; Anki::Cozmo::HAL::IMUWriteReadPipelined(short)
                  |L5.502|
0001f6  2802              CMP      r0,#2
0001f8  d1fd              BNE      |L5.502|
0001fa  b007              ADD      sp,sp,#0x1c
0001fc  e8bd40f0          POP      {r4-r7,lr}
000200  f7ffbffe          B.W      _ZN4Anki5Cozmo3HAL14IMUDeselectAllEv ; Anki::Cozmo::HAL::IMUDeselectAll()
;;;447            // Enable CS pins and SPI
;;;448            InitSPI();
;;;449            InitAcc();
;;;450            InitGyro();
;;;451          }
;;;452    
                          ENDP

                  |L5.516|
                          DCD      0x40020400
                  |L5.520|
                          DCD      0x40020000
                  |L5.524|
                          DCD      0x40003800

                          AREA ||i.__sti___7_imu_cpp_fa0e53e7||, CODE, READONLY, ALIGN=2

                  __sti___7_imu_cpp_fa0e53e7 PROC
000000  4803              LDR      r0,|L6.16|
000002  ed9f0a02          VLDR     s0,|L6.12|
000006  ed800a02          VSTR     s0,[r0,#8]
00000a  4770              BX       lr
                          ENDP

                  |L6.12|
00000c  423df6f2          DCFS     0x423df6f2 ; 47.491157531738281
                  |L6.16|
                          DCD      ||.data||

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL21IMUWriteReadPipelinedEs||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i._ZN4Anki5Cozmo3HAL7IMUInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL7IMUInitEv||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i._ZN4Anki5Cozmo3HAL11IMUReadDataERNS1_17IMU_DataStructureE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL11IMUReadDataERNS1_17IMU_DataStructureE||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i.__sti___7_imu_cpp_fa0e53e7||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___7_imu_cpp_fa0e53e7||
                          DCD      0x00000001

                          AREA ||area_number.11||, LINKORDER=||i._ZN4Anki5Cozmo3HAL14IMUDeselectAllEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL14IMUDeselectAllEv||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i._ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL15IMUSelectDeviceE10IMU_DEVICE||
                          DCD      0x00000001

                          AREA ||.data||, DATA, ALIGN=2

                  begin_pipeline
000000  01                DCB      0x01
                  temp_data_msb
000001  00                DCB      0x00
                  temp_data_lsb
000002  0000              DCB      0x00,0x00
                  temp_data
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  _ZN4Anki5Cozmo21ROBOT_BOUNDING_RADIUSE ; Anki::Cozmo::ROBOT_BOUNDING_RADIUS
                          DCD      0x00000000

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___7_imu_cpp_fa0e53e7

;*** Start embedded assembler ***

#line 1 "arm_hal\\hal\\imu.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_imu_cpp_fa0e53e7___Z7__REV16j|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___7_imu_cpp_fa0e53e7___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_imu_cpp_fa0e53e7___Z7__REVSHi|
#line 144
|__asm___7_imu_cpp_fa0e53e7___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
