; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\led.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\led.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F429X -DUSE_STDPERIPH_DRIVER -DSTM32F429_439xx -DUSE_DEFAULT_TIMEOUT_CALLBACK -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_FS -DCOZMO_ROBOT -DROBOT_HARDWARE -DANKICORETECH_EMBEDDED_USE_HEATSHRINK -DCORETECH_ROBOT -DSTM32F429X --omf_browse=.\build\led.crf diag\led.cpp]
                          THUMB

                          AREA ||i._ZN4Anki5Cozmo8DIAG_HAL10LEDBlinkIREv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo8DIAG_HAL10LEDBlinkIREv PROC ; Anki::Cozmo::DIAG_HAL::LEDBlinkIR()
;;;162    			
;;;163    			void LEDBlinkIR()
000000  2300              MOVS     r3,#0
;;;164    			{
;;;165    				PulseWait(GPIO_LED_IR, PIN_LED_IR, 1000000, 0);
000002  4a03              LDR      r2,|L1.16|
000004  f44f5100          MOV      r1,#0x2000
000008  4802              LDR      r0,|L1.20|
00000a  f7ffbffe          B.W      _ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb ; Anki::Cozmo::DIAG_HAL::PulseWait(GPIO_TypeDef*, unsigned, unsigned, bool)
;;;166    			}
;;;167    
                          ENDP

00000e  0000              DCW      0x0000
                  |L1.16|
                          DCD      0x000f4240
                  |L1.20|
                          DCD      0x40021c00

                          AREA ||i._ZN4Anki5Cozmo8DIAG_HAL11LEDBlinkEyeEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo8DIAG_HAL11LEDBlinkEyeEv PROC ; Anki::Cozmo::DIAG_HAL::LEDBlinkEye()
;;;118    			
;;;119    			void LEDBlinkEye()
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;120    			{
;;;121    				// reset 
;;;122    				PulseWait(GPIO_LED_EYE_RST, PIN_LED_EYE_RST, 100, 1);
000004  2301              MOVS     r3,#1
000006  2264              MOVS     r2,#0x64
000008  0319              LSLS     r1,r3,#12
00000a  4825              LDR      r0,|L2.160|
00000c  f7fffffe          BL       _ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb ; Anki::Cozmo::DIAG_HAL::PulseWait(GPIO_TypeDef*, unsigned, unsigned, bool)
;;;123    
;;;124    				for (uint8_t j = 0; j<3; j++)
000010  f04f0900          MOV      r9,#0
;;;125    				{
;;;126    					for (uint16_t n = 0; n<1000; n++)
;;;127    					{
;;;128    						for (uint8_t i = 0; i<8; i++)
;;;129    						{
;;;130    							if (j % 3 == 0)
;;;131    								PulseWait(GPIO_LED_EYE_RED, PIN_LED_EYE_RED, 100, 0);
;;;132    							else if (j % 3 == 1)
;;;133    								PulseWait(GPIO_LED_EYE_GREEN, PIN_LED_EYE_GREEN, 100, 0);
000014  f04f0a02          MOV      r10,#2
                  |L2.24|
000018  4822              LDR      r0,|L2.164|
00001a  2700              MOVS     r7,#0                 ;126
00001c  fba01009          UMULL    r1,r0,r0,r9           ;130
000020  0840              LSRS     r0,r0,#1              ;130
000022  eba00080          SUB      r0,r0,r0,LSL #2       ;130
000026  eb000609          ADD      r6,r0,r9              ;130
                  |L2.42|
;;;134    							else
;;;135    								PulseWait(GPIO_LED_EYE_BLUE, PIN_LED_EYE_BLUE, 100, 0);
00002a  f8dfb07c          LDR      r11,|L2.168|
00002e  4d1c              LDR      r5,|L2.160|
000030  2400              MOVS     r4,#0                 ;128
                  |L2.50|
000032  b326              CBZ      r6,|L2.126|
000034  2e01              CMP      r6,#1                 ;132
000036  f04f0064          MOV      r0,#0x64
00003a  d02a              BEQ      |L2.146|
00003c  f8aba01a          STRH     r10,[r11,#0x1a]       ;132
000040  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000044  f8aba018          STRH     r10,[r11,#0x18]       ;132
                  |L2.72|
000048  f44f6800          MOV      r8,#0x800             ;132
;;;136    							//Clock
;;;137    							PulseWait(GPIO_LED_EYE_CLK, PIN_LED_EYE_CLK, 10, 1);
00004c  200a              MOVS     r0,#0xa
00004e  f8a58018          STRH     r8,[r5,#0x18]
000052  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000056  f8a5801a          STRH     r8,[r5,#0x1a]
00005a  1c60              ADDS     r0,r4,#1              ;128
00005c  b2c4              UXTB     r4,r0                 ;128
00005e  2c08              CMP      r4,#8                 ;128
000060  d3e7              BCC      |L2.50|
000062  1c78              ADDS     r0,r7,#1              ;126
000064  b287              UXTH     r7,r0                 ;126
000066  f5b77f7a          CMP      r7,#0x3e8             ;126
00006a  d3de              BCC      |L2.42|
00006c  f1090001          ADD      r0,r9,#1              ;124
000070  f00009ff          AND      r9,r0,#0xff           ;124
000074  f1b90f03          CMP      r9,#3                 ;124
000078  d3ce              BCC      |L2.24|
;;;138    						}
;;;139    					}
;;;140    				}
;;;141    			}
00007a  e8bd9ff0          POP      {r4-r12,pc}
                  |L2.126|
00007e  f04f0804          MOV      r8,#4
000082  2064              MOVS     r0,#0x64              ;131
000084  f8a5801a          STRH     r8,[r5,#0x1a]         ;131
000088  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
00008c  f8a58018          STRH     r8,[r5,#0x18]         ;131
000090  e7da              B        |L2.72|
                  |L2.146|
000092  f8a5a01a          STRH     r10,[r5,#0x1a]        ;131
000096  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
00009a  f8a5a018          STRH     r10,[r5,#0x18]        ;131
00009e  e7d3              B        |L2.72|
;;;142          
                          ENDP

                  |L2.160|
                          DCD      0x40020000
                  |L2.164|
                          DCD      0xaaaaaaab
                  |L2.168|
                          DCD      0x40020400

                          AREA ||i._ZN4Anki5Cozmo8DIAG_HAL14LEDBlinkStatusEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo8DIAG_HAL14LEDBlinkStatusEv PROC ; Anki::Cozmo::DIAG_HAL::LEDBlinkStatus()
;;;111    
;;;112    			void LEDBlinkStatus()
000000  b570              PUSH     {r4-r6,lr}
;;;113    			{
;;;114    				PulseWait(GPIO_LED_STAT_RED, PIN_LED_STAT_RED, 500000, 0);
000002  4c0b              LDR      r4,|L3.48|
000004  4d0b              LDR      r5,|L3.52|
000006  2300              MOVS     r3,#0
000008  4622              MOV      r2,r4
00000a  2140              MOVS     r1,#0x40
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb ; Anki::Cozmo::DIAG_HAL::PulseWait(GPIO_TypeDef*, unsigned, unsigned, bool)
;;;115    				PulseWait(GPIO_LED_STAT_GREEN, PIN_LED_STAT_GREEN, 500000, 0);
000012  2300              MOVS     r3,#0
000014  4622              MOV      r2,r4
000016  1569              ASRS     r1,r5,#21
000018  4807              LDR      r0,|L3.56|
00001a  f7fffffe          BL       _ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb ; Anki::Cozmo::DIAG_HAL::PulseWait(GPIO_TypeDef*, unsigned, unsigned, bool)
;;;116    				PulseWait(GPIO_LED_STAT_BLUE, PIN_LED_STAT_BLUE, 500000, 0);
00001e  4622              MOV      r2,r4
000020  4628              MOV      r0,r5
000022  e8bd4070          POP      {r4-r6,lr}
000026  2300              MOVS     r3,#0
000028  2120              MOVS     r1,#0x20
00002a  f7ffbffe          B.W      _ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb ; Anki::Cozmo::DIAG_HAL::PulseWait(GPIO_TypeDef*, unsigned, unsigned, bool)
;;;117    			}
;;;118    			
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      0x0007a120
                  |L3.52|
                          DCD      0x40021000
                  |L3.56|
                          DCD      0x40020400

                          AREA ||i._ZN4Anki5Cozmo8DIAG_HAL15HeadlightD2HackEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo8DIAG_HAL15HeadlightD2HackEv PROC ; Anki::Cozmo::DIAG_HAL::HeadlightD2Hack()
;;;142          
;;;143          void HeadlightD2Hack()
000000  b570              PUSH     {r4-r6,lr}
;;;144    			{
;;;145    				// reset 
;;;146    				PulseWait(GPIO_LED_EYE_RST, PIN_LED_EYE_RST, 100, 1);
000002  4d0c              LDR      r5,|L4.52|
000004  2301              MOVS     r3,#1
000006  2264              MOVS     r2,#0x64
000008  0319              LSLS     r1,r3,#12
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       _ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb ; Anki::Cozmo::DIAG_HAL::PulseWait(GPIO_TypeDef*, unsigned, unsigned, bool)
;;;147    
;;;148    				for (uint8_t j = 0; j<3; j++)
000010  2400              MOVS     r4,#0
;;;149    				{
;;;150              //Clock
;;;151    					PulseWait(GPIO_LED_EYE_CLK, PIN_LED_EYE_CLK, 10, 1);
000012  14ee              ASRS     r6,r5,#19
                  |L4.20|
000014  200a              MOVS     r0,#0xa
000016  832e              STRH     r6,[r5,#0x18]
000018  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
00001c  836e              STRH     r6,[r5,#0x1a]
;;;152              HAL::MicroWait(10);
00001e  200a              MOVS     r0,#0xa
000020  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000024  1c60              ADDS     r0,r4,#1              ;148
000026  b2c4              UXTB     r4,r0                 ;148
000028  2c03              CMP      r4,#3                 ;148
00002a  d3f3              BCC      |L4.20|
;;;153            }
;;;154            GPIO_RESET(GPIO_LED_EYE_RED, PIN_LED_EYE_RED);
00002c  2004              MOVS     r0,#4
00002e  8368              STRH     r0,[r5,#0x1a]
;;;155            /*
;;;156            while(1)
;;;157            {
;;;158              PulseWait(GPIO_LED_EYE_RED, PIN_LED_EYE_RED, 100, 0);
;;;159              HAL::MicroWait(100);
;;;160            }*/
;;;161    			}
000030  bd70              POP      {r4-r6,pc}
;;;162    			
                          ENDP

000032  0000              DCW      0x0000
                  |L4.52|
                          DCD      0x40020000

                          AREA ||i._ZN4Anki5Cozmo8DIAG_HAL7LEDInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo8DIAG_HAL7LEDInitEv PROC ; Anki::Cozmo::DIAG_HAL::LEDInit()
;;;57           // Setup all GPIO
;;;58           void LEDInit()
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;59     			{
;;;60     				
;;;61     				RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
000004  2101              MOVS     r1,#1
000006  b083              SUB      sp,sp,#0xc            ;59
000008  4608              MOV      r0,r1
00000a  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;62     				RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
00000e  2101              MOVS     r1,#1
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;63     				RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE, ENABLE);
000016  2101              MOVS     r1,#1
000018  2010              MOVS     r0,#0x10
00001a  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;64     				RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOH, ENABLE);
00001e  2101              MOVS     r1,#1
000020  2080              MOVS     r0,#0x80
000022  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;65     				
;;;66     				// Initalize Pins
;;;67     				GPIO_InitTypeDef GPIO_InitStructure;
;;;68     				
;;;69     				// Set LED output pins
;;;70     				GPIO_InitStructure.GPIO_Pin =  PIN_LED_EYE_CLK | PIN_LED_EYE_RST;
;;;71     				GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000026  2401              MOVS     r4,#1
000028  f88d4004          STRB     r4,[sp,#4]
;;;72     				GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002c  2502              MOVS     r5,#2
00002e  f44f50c0          MOV      r0,#0x1800            ;70
000032  f88d5005          STRB     r5,[sp,#5]
;;;73     				GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000036  2600              MOVS     r6,#0
;;;74     				GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
;;;75     				GPIO_Init(GPIO_LED_EYE_CLK, &GPIO_InitStructure);  // GPIOA
000038  4f2e              LDR      r7,|L5.244|
00003a  9000              STR      r0,[sp,#0]            ;71
00003c  f88d6006          STRB     r6,[sp,#6]            ;73
000040  f88d6007          STRB     r6,[sp,#7]            ;74
000044  4669              MOV      r1,sp
000046  4638              MOV      r0,r7
000048  f7fffffe          BL       GPIO_Init
;;;76     				
;;;77     				GPIO_InitStructure.GPIO_Pin =  PIN_LED_EYE_RED | PIN_LED_EYE_GREEN; 
;;;78     				GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00004c  f88d4004          STRB     r4,[sp,#4]
000050  2006              MOVS     r0,#6                 ;77
;;;79     				GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000052  f88d5005          STRB     r5,[sp,#5]
000056  9000              STR      r0,[sp,#0]            ;78
;;;80     				GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000058  f88d4006          STRB     r4,[sp,#6]
;;;81     				GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
00005c  f88d6007          STRB     r6,[sp,#7]
;;;82     				GPIO_Init(GPIO_LED_EYE_RED, &GPIO_InitStructure);  // GPIOA
000060  4669              MOV      r1,sp
000062  4638              MOV      r0,r7
000064  f7fffffe          BL       GPIO_Init
;;;83     				
;;;84     				GPIO_InitStructure.GPIO_Pin =  PIN_LED_STAT_GREEN | PIN_LED_EYE_BLUE;
;;;85     				GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000068  f88d4004          STRB     r4,[sp,#4]
00006c  f2402002          MOV      r0,#0x202             ;84
;;;86     				GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000070  f88d5005          STRB     r5,[sp,#5]
000074  9000              STR      r0,[sp,#0]            ;85
;;;87     				GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000076  f88d4006          STRB     r4,[sp,#6]
;;;88     				GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
00007a  f88d6007          STRB     r6,[sp,#7]
;;;89     				GPIO_Init(GPIO_LED_STAT_GREEN, &GPIO_InitStructure);  // GPIOB
00007e  4669              MOV      r1,sp
000080  481d              LDR      r0,|L5.248|
000082  f7fffffe          BL       GPIO_Init
;;;90     				
;;;91     				GPIO_InitStructure.GPIO_Pin = PIN_LED_STAT_RED | PIN_LED_STAT_BLUE; 
;;;92     				GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000086  f88d4004          STRB     r4,[sp,#4]
00008a  2060              MOVS     r0,#0x60              ;91
;;;93     				GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00008c  f88d5005          STRB     r5,[sp,#5]
;;;94     				GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
;;;95     				GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
;;;96     				GPIO_Init(GPIO_LED_STAT_RED, &GPIO_InitStructure);  // GPIOE
000090  f8df9068          LDR      r9,|L5.252|
000094  9000              STR      r0,[sp,#0]            ;92
000096  f88d4006          STRB     r4,[sp,#6]            ;94
00009a  f88d6007          STRB     r6,[sp,#7]            ;95
00009e  4669              MOV      r1,sp
0000a0  4648              MOV      r0,r9
0000a2  f7fffffe          BL       GPIO_Init
;;;97     				
;;;98     				GPIO_InitStructure.GPIO_Pin = PIN_LED_IR; 
;;;99     				GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
0000a6  f88d4004          STRB     r4,[sp,#4]
;;;100    				GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0000aa  f88d5005          STRB     r5,[sp,#5]
0000ae  f44f5800          MOV      r8,#0x2000            ;98
;;;101    				GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
0000b2  f88d4006          STRB     r4,[sp,#6]
0000b6  f8cd8000          STR      r8,[sp,#0]            ;99
;;;102    				GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
0000ba  f88d6007          STRB     r6,[sp,#7]
;;;103    				GPIO_Init(GPIO_LED_IR, &GPIO_InitStructure);  // GPIOH
0000be  4669              MOV      r1,sp
0000c0  480f              LDR      r0,|L5.256|
0000c2  f7fffffe          BL       GPIO_Init
0000c6  2004              MOVS     r0,#4
0000c8  8338              STRH     r0,[r7,#0x18]
0000ca  833d              STRH     r5,[r7,#0x18]
0000cc  480d              LDR      r0,|L5.260|
0000ce  8005              STRH     r5,[r0,#0]
0000d0  2140              MOVS     r1,#0x40
0000d2  f8a91018          STRH     r1,[r9,#0x18]
0000d6  1541              ASRS     r1,r0,#21
0000d8  8001              STRH     r1,[r0,#0]
0000da  2020              MOVS     r0,#0x20
0000dc  f8a90018          STRH     r0,[r9,#0x18]
0000e0  4809              LDR      r0,|L5.264|
0000e2  f8a08000          STRH     r8,[r0,#0]
;;;104    				
;;;105    				LEDAllOff();
;;;106    				GPIO_RESET(GPIO_LED_EYE_CLK, PIN_LED_EYE_CLK);
0000e6  14c0              ASRS     r0,r0,#19
0000e8  8378              STRH     r0,[r7,#0x1a]
;;;107    				GPIO_RESET(GPIO_LED_EYE_RST, PIN_LED_EYE_RST);
0000ea  0040              LSLS     r0,r0,#1
0000ec  8378              STRH     r0,[r7,#0x1a]
;;;108    				
;;;109    			}
0000ee  b003              ADD      sp,sp,#0xc
0000f0  e8bd83f0          POP      {r4-r9,pc}
;;;110    
                          ENDP

                  |L5.244|
                          DCD      0x40020000
                  |L5.248|
                          DCD      0x40020400
                  |L5.252|
                          DCD      0x40021000
                  |L5.256|
                          DCD      0x40021c00
                  |L5.260|
                          DCD      0x40020418
                  |L5.264|
                          DCD      0x40021c18

                          AREA ||i._ZN4Anki5Cozmo8DIAG_HAL9LEDAllOffEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo8DIAG_HAL9LEDAllOffEv PROC ; Anki::Cozmo::DIAG_HAL::LEDAllOff()
;;;40     	
;;;41     				void LEDAllOff()
000000  4908              LDR      r1,|L6.36|
;;;42     			{
;;;43     				// Eye
;;;44     				GPIO_SET(GPIO_LED_EYE_RED, PIN_LED_EYE_RED);
000002  2004              MOVS     r0,#4
000004  8308              STRH     r0,[r1,#0x18]
;;;45     				GPIO_SET(GPIO_LED_EYE_GREEN, PIN_LED_EYE_GREEN); 
000006  2002              MOVS     r0,#2
000008  8308              STRH     r0,[r1,#0x18]
;;;46     				GPIO_SET(GPIO_LED_EYE_BLUE, PIN_LED_EYE_BLUE); 
00000a  4907              LDR      r1,|L6.40|
00000c  8008              STRH     r0,[r1,#0]
;;;47     				
;;;48     				// Status
;;;49     				GPIO_SET(GPIO_LED_STAT_RED, PIN_LED_STAT_RED);
00000e  4807              LDR      r0,|L6.44|
000010  2240              MOVS     r2,#0x40
000012  8302              STRH     r2,[r0,#0x18]
;;;50     				GPIO_SET(GPIO_LED_STAT_GREEN, PIN_LED_STAT_GREEN); 
000014  1542              ASRS     r2,r0,#21
000016  800a              STRH     r2,[r1,#0]
;;;51     				GPIO_SET(GPIO_LED_STAT_BLUE, PIN_LED_STAT_BLUE); 
000018  2120              MOVS     r1,#0x20
00001a  8301              STRH     r1,[r0,#0x18]
;;;52     				
;;;53     				// IR
;;;54     				GPIO_SET(GPIO_LED_IR, PIN_LED_IR);
00001c  0208              LSLS     r0,r1,#8
00001e  4904              LDR      r1,|L6.48|
000020  8008              STRH     r0,[r1,#0]
;;;55     			}
000022  4770              BX       lr
;;;56           
                          ENDP

                  |L6.36|
                          DCD      0x40020000
                  |L6.40|
                          DCD      0x40020418
                  |L6.44|
                          DCD      0x40021000
                  |L6.48|
                          DCD      0x40021c18

                          AREA ||i._ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb||, CODE, READONLY, ALIGN=1

                  _ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb PROC ; Anki::Cozmo::DIAG_HAL::PulseWait(GPIO_TypeDef*, unsigned, unsigned, bool)
;;;169    
;;;170    			void PulseWait(GPIO_TypeDef* gp, u32 pin, u32 microsec, bool active_level)
000000  b570              PUSH     {r4-r6,lr}
;;;171    			{
000002  4605              MOV      r5,r0
;;;172    				if(active_level == 0)
;;;173    				{
;;;174    					GPIO_RESET(gp, pin);
000004  b28c              UXTH     r4,r1
000006  b12b              CBZ      r3,|L7.20|
;;;175    					HAL::MicroWait(microsec);
;;;176    					GPIO_SET(gp, pin);
;;;177    				}
;;;178    				else if(active_level == 1)
;;;179    				{
;;;180    					GPIO_SET(gp, pin);
000008  832c              STRH     r4,[r5,#0x18]
;;;181    					HAL::MicroWait(microsec);
00000a  4610              MOV      r0,r2
00000c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
;;;182    					GPIO_RESET(gp, pin);
000010  836c              STRH     r4,[r5,#0x1a]
;;;183    				}
;;;184    			}
000012  bd70              POP      {r4-r6,pc}
                  |L7.20|
000014  836c              STRH     r4,[r5,#0x1a]         ;174
000016  4610              MOV      r0,r2                 ;175
000018  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
00001c  832c              STRH     r4,[r5,#0x18]         ;176
00001e  bd70              POP      {r4-r6,pc}
;;;185    		}
                          ENDP


                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4Anki5Cozmo8DIAG_HAL9LEDAllOffEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo8DIAG_HAL9LEDAllOffEv||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i._ZN4Anki5Cozmo8DIAG_HAL7LEDInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo8DIAG_HAL7LEDInitEv||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i._ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo8DIAG_HAL9PulseWaitEP12GPIO_TypeDefjjb||
                          DCD      0x00000001

                          AREA ||area_number.11||, LINKORDER=||i._ZN4Anki5Cozmo8DIAG_HAL14LEDBlinkStatusEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo8DIAG_HAL14LEDBlinkStatusEv||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i._ZN4Anki5Cozmo8DIAG_HAL11LEDBlinkEyeEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo8DIAG_HAL11LEDBlinkEyeEv||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i._ZN4Anki5Cozmo8DIAG_HAL15HeadlightD2HackEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo8DIAG_HAL15HeadlightD2HackEv||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i._ZN4Anki5Cozmo8DIAG_HAL10LEDBlinkIREv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo8DIAG_HAL10LEDBlinkIREv||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "diag\\led.cpp"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_led_cpp_5f6857f1___Z7__REV16j|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___7_led_cpp_5f6857f1___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_led_cpp_5f6857f1___Z7__REVSHi|
#line 144
|__asm___7_led_cpp_5f6857f1___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
