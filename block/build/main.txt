; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\main.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\main.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F401xC -DUSE_STDPERIPH_DRIVER -DSTM32F411xE -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DOFFBOARD_VISION -DSTM32F401xx --omf_browse=.\build\main.crf arm_hal\hal\main.cpp]
                          THUMB

                          AREA ||i._ZN4Anki5Cozmo3HAL12GetProximityEPNS1_15ProximityValuesE||, CODE, READONLY, ALIGN=1

                  _ZN4Anki5Cozmo3HAL12GetProximityEPNS1_15ProximityValuesE PROC ; Anki::Cozmo::HAL::GetProximity(Anki::Cozmo::HAL::ProximityValues*)
;;;66           // XXX: This needs to work in a new way with 3.0+
;;;67           void GetProximity(ProximityValues *prox) { }
000000  4770              BX       lr
;;;68     
                          ENDP


                          AREA ||i._ZN4Anki5Cozmo3HAL12GetTimeStampEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL12GetTimeStampEv PROC ; Anki::Cozmo::HAL::GetTimeStamp()
;;;41           TimeStamp_t t_;
;;;42           TimeStamp_t GetTimeStamp(void){ return t_; }
000000  4801              LDR      r0,|L2.8|
000002  6800              LDR      r0,[r0,#0]  ; _ZN4Anki5Cozmo3HAL2t_E
000004  4770              BX       lr
;;;43           void SetTimeStamp(TimeStamp_t t) {t_ = t;}
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo3HAL12SetTimeStampEj||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL12SetTimeStampEj PROC ; Anki::Cozmo::HAL::SetTimeStamp(unsigned)
;;;42           TimeStamp_t GetTimeStamp(void){ return t_; }
;;;43           void SetTimeStamp(TimeStamp_t t) {t_ = t;}
000000  4901              LDR      r1,|L3.8|
000002  6008              STR      r0,[r1,#0]  ; _ZN4Anki5Cozmo3HAL2t_E
000004  4770              BX       lr
;;;44     
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo3HAL13WifiHasClientEv||, CODE, READONLY, ALIGN=1

                  _ZN4Anki5Cozmo3HAL13WifiHasClientEv PROC ; Anki::Cozmo::HAL::WifiHasClient()
;;;62           // XXX: This needs to work in a new way with 3.0+
;;;63           bool WifiHasClient() {
000000  2000              MOVS     r0,#0
;;;64             return false;
;;;65           }
000002  4770              BX       lr
;;;66           // XXX: This needs to work in a new way with 3.0+
                          ENDP


                          AREA ||i._ZN4Anki5Cozmo3HAL14GetHeadCamInfoEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL14GetHeadCamInfoEv PROC ; Anki::Cozmo::HAL::GetHeadCamInfo()
;;;46     
;;;47           const CameraInfo* GetHeadCamInfo(void)
000000  4800              LDR      r0,|L5.4|
;;;48           {
;;;49             static CameraInfo s_headCamInfo = {
;;;50               HEAD_CAM_CALIB_FOCAL_LENGTH_X,
;;;51               HEAD_CAM_CALIB_FOCAL_LENGTH_Y,
;;;52               HEAD_CAM_CALIB_CENTER_X,
;;;53               HEAD_CAM_CALIB_CENTER_Y,
;;;54               0.f,
;;;55               HEAD_CAM_CALIB_HEIGHT,
;;;56               HEAD_CAM_CALIB_WIDTH
;;;57             };
;;;58     
;;;59             return &s_headCamInfo;
;;;60           }
000002  4770              BX       lr
;;;61     
                          ENDP

                  |L5.4|
                          DCD      ||.data||+0x8

                          AREA ||i._ZN4Anki5Cozmo3HAL9GetIDCardEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL9GetIDCardEv PROC ; Anki::Cozmo::HAL::GetIDCard()
;;;71           static IDCard m_idCard;
;;;72           IDCard* GetIDCard() { return &m_idCard; }
000000  4800              LDR      r0,|L6.4|
000002  4770              BX       lr
;;;73     
                          ENDP

                  |L6.4|
                          DCD      ||.bss||

                          AREA ||i.__aeabi_assert||, CODE, READONLY, ALIGN=1

                  __aeabi_assert PROC
;;;248    extern "C"
;;;249    void __aeabi_assert(const char* s1, const char* s2, int s3)
000000  de00              DCI      0xde00 ; ? Architecturally Undefined
;;;250    {
;;;251    }
                          ENDP


                          AREA ||i.__sti___8_main_cpp_7a2c016d||, CODE, READONLY, ALIGN=2

                  __sti___8_main_cpp_7a2c016d PROC
000000  4803              LDR      r0,|L8.16|
000002  ed9f0a02          VLDR     s0,|L8.12|
000006  ed800a01          VSTR     s0,[r0,#4]
00000a  4770              BX       lr
                          ENDP

                  |L8.12|
00000c  423df6f2          DCFS     0x423df6f2 ; 47.491157531738281
                  |L8.16|
                          DCD      ||.data||

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  main PROC
;;;123    
;;;124    int main(void)
000000  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9TimerInitEv ; Anki::Cozmo::HAL::TimerInit()
;;;125    {
;;;126      using namespace Anki::Cozmo::HAL;
;;;127      using namespace Anki::Cozmo;
;;;128      
;;;129      // Timer, than Startup, must be called FIRST in main() to do hardware sanity check
;;;130      TimerInit();
;;;131      Startup();
000004  f7fffffe          BL       _ZN4Anki5Cozmo3HAL7StartupEv ; Anki::Cozmo::HAL::Startup()
;;;132    
;;;133      // Initialize the hardware
;;;134      LightsInit();
000008  f7fffffe          BL       _ZN4Anki5Cozmo3HAL10LightsInitEv ; Anki::Cozmo::HAL::LightsInit()
;;;135      UARTInit();
00000c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL8UARTInitEv ; Anki::Cozmo::HAL::UARTInit()
;;;136      printf("UART..");
000010  a029              ADR      r0,|L9.184|
000012  f7fffffe          BL       __2printf
000016  4c2a              LDR      r4,|L9.192|
000018  a02a              ADR      r0,|L9.196|
00001a  6821              LDR      r1,[r4,#0]
00001c  f7fffffe          BL       __2printf
000020  482b              LDR      r0,|L9.208|
000022  2102              MOVS     r1,#2
000024  2501              MOVS     r5,#1
000026  6001              STR      r1,[r0,#0]  ; _ZN4Anki5Cozmo3HAL8m_idCardE
000028  6821              LDR      r1,[r4,#0]
00002a  f5a11214          SUB      r2,r1,#0x250000
00002e  3a31              SUBS     r2,r2,#0x31
000030  bf08              IT       EQ
000032  6005              STREQ    r5,[r0,#0]  ; _ZN4Anki5Cozmo3HAL8m_idCardE
;;;137      GetId();
;;;138    	
;;;139    #if defined(DO_BAUDRATE_TESTING)
;;;140      while(1)
;;;141    	{
;;;142    		UARTPutChar(0xaa);
;;;143    	}
;;;144    #endif
;;;145    
;;;146    //  IMUInit();  // The IMU must be configured before spineport
;;;147    //  printf("IMU..");
;;;148    //  SPIInit();
;;;149    //  printf("spine..");
;;;150    
;;;151    #if defined(DO_PROX_SENSOR_TESTING)
;;;152      // Prox sensor testing
;;;153      ProximityValues prox;
;;;154      while(1)
;;;155      {
;;;156        GetProximity(&prox);
;;;157        MicroWait(5000);
;;;158      }
;;;159    #elif defined(DO_MOTOR_TESTING)
;;;160      // Motor testing...
;;;161      while (1)
;;;162      {
;;;163        MotorSetPower(MOTOR_LEFT_WHEEL, 0.3f);
;;;164        Wait();
;;;165        MotorSetPower(MOTOR_LEFT_WHEEL, -0.3f);
;;;166        Wait();
;;;167        MotorSetPower(MOTOR_LEFT_WHEEL, 0.0f);
;;;168    
;;;169        MotorSetPower(MOTOR_RIGHT_WHEEL, 0.3f);
;;;170        Wait();
;;;171        MotorSetPower(MOTOR_RIGHT_WHEEL, -0.3f);
;;;172        Wait();
;;;173        MotorSetPower(MOTOR_RIGHT_WHEEL, 0.0f);
;;;174    
;;;175        MotorSetPower(MOTOR_LIFT, 0.6f);
;;;176        Wait();
;;;177        MotorSetPower(MOTOR_LIFT, -0.6f);
;;;178        Wait();
;;;179        MotorSetPower(MOTOR_LIFT, 0.0f);
;;;180    
;;;181        MotorSetPower(MOTOR_HEAD, 0.5f);
;;;182        Wait();
;;;183        MotorSetPower(MOTOR_HEAD, -0.5f);
;;;184        Wait();
;;;185        MotorSetPower(MOTOR_HEAD, -0.0f);
;;;186    
;;;187        MicroWait(500000);
;;;188      }
;;;189    
;;;190    #elif defined(DO_LED_TESTING) 
;;;191      
;;;192      for (int i=0; i<8; ++i) {
;;;193        SetLED((LEDId)i, 0xFFFFffff);
;;;194      }
;;;195      while (1) {
;;;196        // Spin
;;;197      }
;;;198      
;;;199    #else
;;;200    	
;;;201    
;;;202    	// Enable XBEE
;;;203    	 //GPIO_PIN_SOURCE(IRLED, GPIOA, 12);
;;;204    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
000034  2101              MOVS     r1,#1
000036  2004              MOVS     r0,#4
000038  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;205    	GPIO_RESET(GPIOC, GPIO_Pin_15);
00003c  4a25              LDR      r2,|L9.212|
00003e  f44f4000          MOV      r0,#0x8000
000042  8010              STRH     r0,[r2,#0]
;;;206    	PIN_NOPULL(GPIOC, 15);
000044  4924              LDR      r1,|L9.216|
000046  680b              LDR      r3,[r1,#0]
000048  f0234340          BIC      r3,r3,#0xc0000000
00004c  600b              STR      r3,[r1,#0]
;;;207    	PIN_PP(GPIOC, 15);
00004e  4923              LDR      r1,|L9.220|
000050  680b              LDR      r3,[r1,#0]
000052  f4234300          BIC      r3,r3,#0x8000
000056  600b              STR      r3,[r1,#0]
;;;208    	PIN_OUT(GPIOC, 15);
000058  1f09              SUBS     r1,r1,#4
00005a  680b              LDR      r3,[r1,#0]
00005c  f0234340          BIC      r3,r3,#0xc0000000
000060  f0434380          ORR      r3,r3,#0x40000000
000064  600b              STR      r3,[r1,#0]
;;;209    	// come out of sleep
;;;210    	GPIO_RESET(GPIOC, GPIO_Pin_15);
000066  8010              STRH     r0,[r2,#0]
;;;211    	
;;;212      for (int i=0; i<8; ++i) {
000068  2400              MOVS     r4,#0
                  |L9.106|
;;;213        SetLED((LEDId)i, 0x00);
00006a  b2e0              UXTB     r0,r4
00006c  2100              MOVS     r1,#0
00006e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
000072  1c64              ADDS     r4,r4,#1
000074  2c08              CMP      r4,#8                 ;212
000076  dbf8              BLT      |L9.106|
;;;214      }
;;;215    	
;;;216    	//SetLED(LED_LEFT_EYE_TOP, 0x000001FF);
;;;217    	//SetLED(LED_RIGHT_EYE_TOP, 0x000001FF);
;;;218    	
;;;219    	SetLED(LED_RIGHT_EYE_TOP, 0x05F << 16 | 0x05F << 8 | 0x05F);
000078  4c19              LDR      r4,|L9.224|
00007a  2000              MOVS     r0,#0
00007c  4621              MOV      r1,r4
00007e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
;;;220    	SetLED(LED_RIGHT_EYE_BOTTOM, 0x05F << 16 | 0x05F << 8 | 0x05F);
000082  4621              MOV      r1,r4
000084  2002              MOVS     r0,#2
000086  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
;;;221    	SetLED(LED_RIGHT_EYE_LEFT, 0x05F << 16 | 0x05F << 8 | 0x05F);
00008a  4621              MOV      r1,r4
00008c  2003              MOVS     r0,#3
00008e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
;;;222    	SetLED(LED_RIGHT_EYE_RIGHT, 0x05F << 16 | 0x05F << 8 | 0x05F);
000092  4621              MOV      r1,r4
000094  2001              MOVS     r0,#1
000096  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
;;;223    
;;;224    	/*
;;;225    	SetLED(LED_RIGHT_EYE_TOP, 0x00 << 16 | 0x05F << 8 | 0x05F);
;;;226    	SetLED(LED_RIGHT_EYE_BOTTOM, 0x0 << 16 | 0x05F << 8 | 0x05F);
;;;227    	SetLED(LED_RIGHT_EYE_LEFT, 0x0<< 16 | 0x05F << 8 | 0x05F);
;;;228    	SetLED(LED_RIGHT_EYE_RIGHT, 0x0 << 16 | 0x05F << 8 | 0x05F);
;;;229    	*/
;;;230    	
;;;231    	
;;;232      Anki::Cozmo::Robot::Init();
00009a  f7fffffe          BL       _ZN4Anki5Cozmo5Robot4InitEv ; Anki::Cozmo::Robot::Init()
;;;233      g_halInitComplete = true;
00009e  4811              LDR      r0,|L9.228|
0000a0  7005              STRB     r5,[r0,#0]
;;;234      printf("init complete!\r\n");
0000a2  a011              ADR      r0,|L9.232|
0000a4  f7fffffe          BL       __2printf
                  |L9.168|
;;;235    
;;;236    
;;;237    	
;;;238      while (1) // XXX: Anki::Cozmo::Robot::step_LongExecution() == Anki::RESULT_OK)
;;;239      {
;;;240    		/*printf("hello!\r\n");
;;;241    		MicroWait(500000);*/
;;;242    		Anki::Cozmo::Robot::step_MainExecution();
0000a8  f7fffffe          BL       _ZN4Anki5Cozmo5Robot18step_MainExecutionEv ; Anki::Cozmo::Robot::step_MainExecution()
;;;243    		MicroWait(1000);
0000ac  f44f707a          MOV      r0,#0x3e8
0000b0  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
0000b4  e7f8              B        |L9.168|
;;;244      }
;;;245    #endif
;;;246    }
;;;247    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L9.184|
0000b8  55415254          DCB      "UART..",0
0000bc  2e2e00  
0000bf  00                DCB      0
                  |L9.192|
                          DCD      0x1fff7a10
                  |L9.196|
0000c4  4d792049          DCB      "My ID: %08x",0
0000c8  443a2025
0000cc  30387800
                  |L9.208|
                          DCD      ||.bss||
                  |L9.212|
                          DCD      0x4002081a
                  |L9.216|
                          DCD      0x4002080c
                  |L9.220|
                          DCD      0x40020804
                  |L9.224|
                          DCD      0x005f5f5f
                  |L9.228|
                          DCD      _ZN4Anki5Cozmo3HAL17g_halInitCompleteE ; Anki::Cozmo::HAL::g_halInitComplete
                  |L9.232|
0000e8  696e6974          DCB      "init complete!\r\n",0
0000ec  20636f6d
0000f0  706c6574
0000f4  65210d0a
0000f8  00      
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0

                          AREA ||.ARM.exidx||, LINKORDER=||i.main||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i.main||
                          DCD      0x00000001

                          AREA ||area_number.11||, LINKORDER=||i.__aeabi_assert||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__aeabi_assert||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i._ZN4Anki5Cozmo3HAL12GetTimeStampEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL12GetTimeStampEv||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i._ZN4Anki5Cozmo3HAL12SetTimeStampEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL12SetTimeStampEj||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i._ZN4Anki5Cozmo3HAL14GetHeadCamInfoEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL14GetHeadCamInfoEv||
                          DCD      0x00000001

                          AREA ||area_number.15||, LINKORDER=||i._ZN4Anki5Cozmo3HAL13WifiHasClientEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL13WifiHasClientEv||
                          DCD      0x00000001

                          AREA ||area_number.16||, LINKORDER=||i._ZN4Anki5Cozmo3HAL12GetProximityEPNS1_15ProximityValuesE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL12GetProximityEPNS1_15ProximityValuesE||
                          DCD      0x00000001

                          AREA ||area_number.17||, LINKORDER=||i._ZN4Anki5Cozmo3HAL9GetIDCardEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL9GetIDCardEv||
                          DCD      0x00000001

                          AREA ||area_number.18||, LINKORDER=||i.__sti___8_main_cpp_7a2c016d||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___8_main_cpp_7a2c016d||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _ZN4Anki5Cozmo3HAL8m_idCardE ; Anki::Cozmo::HAL::m_idCard
                          %        20

                          AREA ||.data||, DATA, ALIGN=2

                  _ZN4Anki5Cozmo3HAL2t_E ; Anki::Cozmo::HAL::t_
                          DCD      0x00000000
                  _ZN4Anki5Cozmo21ROBOT_BOUNDING_RADIUSE ; Anki::Cozmo::ROBOT_BOUNDING_RADIUS
                          DCD      0x00000000
                  s_headCamInfo
000008  43bb7d9e          DCFS     0x43bb7d9e ; 374.98138427734375
00000c  43b9ec91          DCFS     0x43b9ec91 ; 371.84817504882812
000010  431bd64d          DCFS     0x431bd64d ; 155.83711242675781
000014  42ebc1c8          DCFS     0x42ebc1c8 ; 117.87847900390625
000018  00000000          DCFS     0x00000000 ; 0
00001c  00f00140          DCW      0x00f0,0x0140
                          %        16

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___8_main_cpp_7a2c016d

;*** Start embedded assembler ***

#line 1 "arm_hal\\hal\\main.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_7a2c016d___Z7__REV16j|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___8_main_cpp_7a2c016d___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_main_cpp_7a2c016d___Z7__REVSHi|
#line 144
|__asm___8_main_cpp_7a2c016d___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
