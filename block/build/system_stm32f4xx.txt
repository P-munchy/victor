; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\build\system_stm32f4xx.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\system_stm32f4xx.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F401xC -DUSE_STDPERIPH_DRIVER -DSTM32F411xE -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DOFFBOARD_VISION -DSTM32F401xx --omf_browse=.\build\system_stm32f4xx.crf arm_hal\hal\system_stm32f4xx.c]
                          THUMB

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;58     
;;;59     void SystemInit(void)
000000  4828              LDR      r0,|L1.164|
;;;60     {
000002  b410              PUSH     {r4}
;;;61       /* FPU settings ------------------------------------------------------------*/
;;;62       SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000004  6801              LDR      r1,[r0,#0]
000006  f4410170          ORR      r1,r1,#0xf00000
00000a  6001              STR      r1,[r0,#0]
;;;63       // Should flush the pipeline here, but ST didn't wanna (and it'll be a while before an FP op)
;;;64       
;;;65       /* Reset the RCC clock configuration to the default reset state ------------*/
;;;66       /* Set HSION bit */
;;;67       RCC->CR |= (uint32_t)0x00000001;
00000c  4926              LDR      r1,|L1.168|
00000e  6808              LDR      r0,[r1,#0]
000010  f0400001          ORR      r0,r0,#1
000014  6008              STR      r0,[r1,#0]
;;;68     
;;;69       /* Reset CFGR register */
;;;70       RCC->CFGR = 0x00000000;
000016  4825              LDR      r0,|L1.172|
000018  f04f0c00          MOV      r12,#0
00001c  f8c0c000          STR      r12,[r0,#0]
;;;71     
;;;72       /* Reset HSEON, CSSON and PLLON bits */
;;;73       RCC->CR &= (uint32_t)0xFEF6FFFF;
000020  680a              LDR      r2,[r1,#0]
000022  f4222210          BIC      r2,r2,#0x90000
000026  f0227280          BIC      r2,r2,#0x1000000
00002a  600a              STR      r2,[r1,#0]
;;;74     
;;;75       /* Reset PLLCFGR register */
;;;76       RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
00002c  1f02              SUBS     r2,r0,#4
00002e  4b20              LDR      r3,|L1.176|
000030  6013              STR      r3,[r2,#0]
;;;77                        (RCC_PLLCFGR_PLLSRC_HSI) | (PLL_Q << 24);
;;;78       
;;;79       /* Reset HSEBYP bit */
;;;80       RCC->CR &= (uint32_t)0xFFFBFFFF;
000032  680c              LDR      r4,[r1,#0]
000034  f4242480          BIC      r4,r4,#0x40000
000038  600c              STR      r4,[r1,#0]
;;;81     
;;;82       /* Disable all interrupts */
;;;83       RCC->CIR = 0x00000000;
00003a  1d04              ADDS     r4,r0,#4
00003c  f8c4c000          STR      r12,[r4,#0]
000040  6013              STR      r3,[r2,#0]
000042  4a1c              LDR      r2,|L1.180|
000044  6813              LDR      r3,[r2,#0]
000046  f0435380          ORR      r3,r3,#0x10000000
00004a  6013              STR      r3,[r2,#0]
00004c  4a1a              LDR      r2,|L1.184|
00004e  6813              LDR      r3,[r2,#0]
000050  f4434340          ORR      r3,r3,#0xc000
000054  6013              STR      r3,[r2,#0]
000056  6802              LDR      r2,[r0,#0]
000058  6002              STR      r2,[r0,#0]
00005a  6802              LDR      r2,[r0,#0]
00005c  6002              STR      r2,[r0,#0]
00005e  6802              LDR      r2,[r0,#0]
000060  f4425280          ORR      r2,r2,#0x1000
000064  6002              STR      r2,[r0,#0]
000066  680a              LDR      r2,[r1,#0]
000068  f0427280          ORR      r2,r2,#0x1000000
00006c  600a              STR      r2,[r1,#0]
                  |L1.110|
00006e  680a              LDR      r2,[r1,#0]
000070  f0127f00          TST      r2,#0x2000000
000074  d0fb              BEQ      |L1.110|
000076  4a11              LDR      r2,|L1.188|
000078  f44f61e1          MOV      r1,#0x708
00007c  6011              STR      r1,[r2,#0]
00007e  6801              LDR      r1,[r0,#0]
000080  f0210103          BIC      r1,r1,#3
000084  6001              STR      r1,[r0,#0]
000086  6801              LDR      r1,[r0,#0]
000088  f0410102          ORR      r1,r1,#2
00008c  6001              STR      r1,[r0,#0]
                  |L1.142|
00008e  6801              LDR      r1,[r0,#0]
000090  f001010c          AND      r1,r1,#0xc
000094  2908              CMP      r1,#8
000096  d1fa              BNE      |L1.142|
;;;84     
;;;85       // Initialize external memory
;;;86       SystemInit_ExtMemCtl(); 
;;;87      
;;;88       /* Configure the System clock source, PLL Multiplier and Divider factors, 
;;;89          AHB/APBx prescalers and Flash settings ----------------------------------*/
;;;90       SetSysClock();
;;;91     
;;;92       /* Configure the Vector Table location add offset address ------------------*/
;;;93     #ifdef VECT_TAB_SRAM
;;;94       SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;95     #else
;;;96       SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
000098  0608              LSLS     r0,r1,#24
00009a  4909              LDR      r1,|L1.192|
00009c  6008              STR      r0,[r1,#0]
;;;97     #endif
;;;98     }
00009e  bc10              POP      {r4}
0000a0  4770              BX       lr
;;;99     
                          ENDP

0000a2  0000              DCW      0x0000
                  |L1.164|
                          DCD      0xe000ed88
                  |L1.168|
                          DCD      0x40023800
                  |L1.172|
                          DCD      0x40023808
                  |L1.176|
                          DCD      0x07015a10
                  |L1.180|
                          DCD      0x40023840
                  |L1.184|
                          DCD      0x40007000
                  |L1.188|
                          DCD      0x40023c00
                  |L1.192|
                          DCD      0xe000ed08

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x055d4a80

;*** Start embedded assembler ***

#line 1 "arm_hal\\hal\\system_stm32f4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REV16|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___18_system_stm32f4xx_c_5d646a67____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REVSH|
#line 144
|__asm___18_system_stm32f4xx_c_5d646a67____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
