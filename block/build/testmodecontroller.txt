; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\testmodecontroller.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\testmodecontroller.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F401xC -DUSE_STDPERIPH_DRIVER -DSTM32F411xE -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DOFFBOARD_VISION -DSTM32F401xx --omf_browse=.\build\testmodecontroller.crf supervisor\src\testModeController.cpp]
                          THUMB

                          AREA ||i._ZN4Anki5Cozmo18TestModeController11IMUTestInitEi||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController11IMUTestInitEi PROC ; Anki::Cozmo::TestModeController::IMUTestInit(int)
;;;783          
;;;784          Result IMUTestInit(s32 flags)
000000  b510              PUSH     {r4,lr}
;;;785          {
000002  4604              MOV      r4,r0
;;;786            PRINT("\n==== Starting IMUTest =====\n");
000004  a005              ADR      r0,|L1.28|
000006  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;787            imuTestDoTurns_ = flags & ITF_DO_TURNS;
00000a  480c              LDR      r0,|L1.60|
00000c  f0040101          AND      r1,r4,#1
000010  7201              STRB     r1,[r0,#8]
;;;788            ticCnt_ = 0;
000012  2100              MOVS     r1,#0
;;;789            IT_turnLeft = false;
000014  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000016  74c1              STRB     r1,[r0,#0x13]
;;;790            return RESULT_OK;
000018  4608              MOV      r0,r1
;;;791          }
00001a  bd10              POP      {r4,pc}
;;;792          
                          ENDP

                  |L1.28|
00001c  0a3d3d3d          DCB      "\n==== Starting IMUTest =====\n",0
000020  3d205374
000024  61727469
000028  6e672049
00002c  4d555465
000030  7374203d
000034  3d3d3d3d
000038  0a00    
00003a  00                DCB      0
00003b  00                DCB      0
                  |L1.60|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController12AnimTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController12AnimTestInitEv PROC ; Anki::Cozmo::TestModeController::AnimTestInit()
;;;833          
;;;834          Result AnimTestInit()
000000  b570              PUSH     {r4-r6,lr}
;;;835          {
;;;836            PRINT("\n==== Starting AnimationTest =====\n");
000002  a006              ADR      r0,|L2.28|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;837            AT_currAnim = 0;
000008  2400              MOVS     r4,#0
00000a  4d0d              LDR      r5,|L2.64|
;;;838            AnimationController::Play(AT_currAnim, 0);
00000c  4621              MOV      r1,r4
00000e  4620              MOV      r0,r4
000010  652c              STR      r4,[r5,#0x50]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
000012  f7fffffe          BL       _ZN4Anki5Cozmo19AnimationController4PlayEij ; Anki::Cozmo::AnimationController::Play(int, unsigned)
;;;839            ticCnt_ = 0;
;;;840            return RESULT_OK;
000016  2000              MOVS     r0,#0
000018  63ec              STR      r4,[r5,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
;;;841          }
00001a  bd70              POP      {r4-r6,pc}
;;;842          
                          ENDP

                  |L2.28|
00001c  0a3d3d3d          DCB      "\n==== Starting AnimationTest =====\n",0
000020  3d205374
000024  61727469
000028  6e672041
00002c  6e696d61
000030  74696f6e
000034  54657374
000038  203d3d3d
00003c  3d3d0a00
                  |L2.64|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController12HeadTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController12HeadTestInitEv PROC ; Anki::Cozmo::TestModeController::HeadTestInit()
;;;717          
;;;718          Result HeadTestInit()
000000  b510              PUSH     {r4,lr}
;;;719          {
;;;720            PRINT("\n==== Starting HeadTest =====\n");
000002  a006              ADR      r0,|L3.28|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;721            ticCnt_ = 0;
000008  480c              LDR      r0,|L3.60|
00000a  2100              MOVS     r1,#0
;;;722            ticCnt2_ = 0;
;;;723            headPower_ = HEAD_POWER_CMD;
00000c  ed9f0a0c          VLDR     s0,|L3.64|
000010  63c1              STR      r1,[r0,#0x3c]         ;722  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000012  6401              STR      r1,[r0,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
000014  ed800a0a          VSTR     s0,[r0,#0x28]
;;;724    #if(!HEAD_POSITION_TEST)
;;;725            HeadController::Disable();
;;;726    #endif
;;;727            return RESULT_OK;
000018  4608              MOV      r0,r1
;;;728          }
00001a  bd10              POP      {r4,pc}
;;;729          
                          ENDP

                  |L3.28|
00001c  0a3d3d3d          DCB      "\n==== Starting HeadTest =====\n",0
000020  3d205374
000024  61727469
000028  6e672048
00002c  65616454
000030  65737420
000034  3d3d3d3d
000038  3d0a00  
00003b  00                DCB      0
                  |L3.60|
                          DCD      ||.data||
                  |L3.64|
000040  3e4ccccd          DCFS     0x3e4ccccd ; 0.20000000298023224

                          AREA ||i._ZN4Anki5Cozmo18TestModeController12LiftTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController12LiftTestInitEv PROC ; Anki::Cozmo::TestModeController::LiftTestInit()
;;;599          
;;;600          Result LiftTestInit()
000000  b510              PUSH     {r4,lr}
;;;601          {
;;;602            PRINT("\n==== Starting LiftTest =====\n");
000002  a008              ADR      r0,|L4.36|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;603            PRINT("!!! REMOVE JTAG CABLE !!!\n");
000008  a00e              ADR      r0,|L4.68|
00000a  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;604            ticCnt_ = 0;
00000e  4814              LDR      r0,|L4.96|
000010  2100              MOVS     r1,#0
;;;605            ticCnt2_ = 0;
;;;606            liftPower_ = LIFT_POWER_CMD;
000012  ed9f0a14          VLDR     s0,|L4.100|
000016  63c1              STR      r1,[r0,#0x3c]         ;605  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000018  6401              STR      r1,[r0,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
00001a  ed800a09          VSTR     s0,[r0,#0x24]
;;;607    #if(!LIFT_HEIGHT_TEST)
;;;608            LiftController::Disable();
;;;609    #endif
;;;610            return RESULT_OK;
00001e  4608              MOV      r0,r1
;;;611          }
000020  bd10              POP      {r4,pc}
;;;612          
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
000024  0a3d3d3d          DCB      "\n==== Starting LiftTest =====\n",0
000028  3d205374
00002c  61727469
000030  6e67204c
000034  69667454
000038  65737420
00003c  3d3d3d3d
000040  3d0a00  
000043  00                DCB      0
                  |L4.68|
000044  21212120          DCB      "!!! REMOVE JTAG CABLE !!!\n",0
000048  52454d4f
00004c  5645204a
000050  54414720
000054  4341424c
000058  45202121
00005c  210a00  
00005f  00                DCB      0
                  |L4.96|
                          DCD      ||.data||
                  |L4.100|
000064  3e4ccccd          DCFS     0x3e4ccccd ; 0.20000000298023224

                          AREA ||i._ZN4Anki5Cozmo18TestModeController12StopTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController12StopTestInitEv PROC ; Anki::Cozmo::TestModeController::StopTestInit()
;;;950          
;;;951          Result StopTestInit()
000000  b510              PUSH     {r4,lr}
;;;952          {
;;;953            PRINT("\n==== Starting StopTest =====\n");
000002  a007              ADR      r0,|L5.32|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;954            ticCnt_ = 0;
000008  480d              LDR      r0,|L5.64|
00000a  2100              MOVS     r1,#0
;;;955            ST_go = false;
;;;956            ST_speed = 0.f;
00000c  ed9f0a0d          VLDR     s0,|L5.68|
000010  63c1              STR      r1,[r0,#0x3c]         ;955  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000012  7441              STRB     r1,[r0,#0x11]         ;955
000014  ed800a11          VSTR     s0,[r0,#0x44]
;;;957            ST_slowingDown = false;
000018  7481              STRB     r1,[r0,#0x12]
;;;958            return RESULT_OK;
00001a  4608              MOV      r0,r1
;;;959          }
00001c  bd10              POP      {r4,pc}
;;;960          
                          ENDP

00001e  0000              DCW      0x0000
                  |L5.32|
000020  0a3d3d3d          DCB      "\n==== Starting StopTest =====\n",0
000024  3d205374
000028  61727469
00002c  6e672053
000030  746f7054
000034  65737420
000038  3d3d3d3d
00003c  3d0a00  
00003f  00                DCB      0
                  |L5.64|
                          DCD      ||.data||
                  |L5.68|
000044  00000000          DCFS     0x00000000 ; 0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController13DriveTestInitEiii||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController13DriveTestInitEiii PROC ; Anki::Cozmo::TestModeController::DriveTestInit(int, int, int)
;;;506          //                    or power to command as a percent (when DTF_ENABLE_DIRECT_HAL_TEST is set)
;;;507          Result DriveTestInit(s32 flags, s32 powerStepPercent, s32 wheelSpeedOrPower)
000000  b570              PUSH     {r4-r6,lr}
;;;508          {
000002  4614              MOV      r4,r2
;;;509            PRINT("\n=== Starting DirectDriveTest (%x, %d, %d) ===\n", flags, powerStepPercent, wheelSpeedOrPower);
000004  4613              MOV      r3,r2
000006  460e              MOV      r6,r1                 ;508
000008  460a              MOV      r2,r1
00000a  4605              MOV      r5,r0                 ;508
00000c  4601              MOV      r1,r0
00000e  a01c              ADR      r0,|L6.128|
000010  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;510            enableDirectHALTest_ = flags & DTF_ENABLE_DIRECT_HAL_TEST;
000014  4926              LDR      r1,|L6.176|
000016  f0050001          AND      r0,r5,#1
;;;511            enableCycleSpeedsTest_ = flags & DTF_ENABLE_CYCLE_SPEEDS_TEST;
;;;512            enableToggleDir_ = flags & DTF_ENABLE_TOGGLE_DIR;
00001a  f3c50280          UBFX     r2,r5,#2,#1
00001e  7048              STRB     r0,[r1,#1]            ;510
000020  f3c50040          UBFX     r0,r5,#1,#1           ;511
000024  7088              STRB     r0,[r1,#2]            ;511
;;;513            wheelPowerStep_ = powerStepPercent != 0 ? powerStepPercent * 0.01f : DEFAULT_WHEEL_POWER_STEP;
000026  eddf0a23          VLDR     s1,|L6.180|
00002a  700a              STRB     r2,[r1,#0]            ;512
00002c  2e00              CMP      r6,#0
00002e  bf1d              ITTTE    NE
000030  ee006a10          VMOVNE   s0,r6
000034  eeb80ac0          VCVTNE.F32.S32 s0,s0
000038  ee200a20          VMULNE.F32 s0,s0,s1
00003c  ed9f0a1e          VLDREQ   s0,|L6.184|
000040  ed810a07          VSTR     s0,[r1,#0x1c]
;;;514            wheelSpeed_mmps_ = wheelSpeedOrPower != 0 ? wheelSpeedOrPower : WHEEL_SPEED_CMD_MMPS;
000044  2c00              CMP      r4,#0
000046  bf1a              ITTE     NE
000048  ee004a10          VMOVNE   s0,r4
00004c  eeb80ac0          VCVTNE.F32.S32 s0,s0
000050  ed9f0a1a          VLDREQ   s0,|L6.188|
000054  ed810a08          VSTR     s0,[r1,#0x20]
;;;515            wheelPower_ = enableCycleSpeedsTest_ ? 0 : wheelSpeedOrPower * 0.01f;
000058  2800              CMP      r0,#0
00005a  bf11              ITEEE    NE
00005c  ed9f0a18          VLDRNE   s0,|L6.192|
000060  ee004a10          VMOVEQ   s0,r4
000064  eeb80ac0          VCVTEQ.F32.S32 s0,s0
000068  ee200a20          VMULEQ.F32 s0,s0,s1
00006c  ed810a06          VSTR     s0,[r1,#0x18]
;;;516            
;;;517            // If CycleSpeedsTest is on, then enableToggleDir is on by default
;;;518            if (enableCycleSpeedsTest_) {
;;;519              enableToggleDir_ = true;
000070  bf1c              ITT      NE
000072  2001              MOVNE    r0,#1
000074  7008              STRBNE   r0,[r1,#0]
;;;520            }
;;;521            
;;;522            
;;;523            firstSpeedCommanded_ = false;
000076  f04f0000          MOV      r0,#0
00007a  70c8              STRB     r0,[r1,#3]
;;;524            ticCnt_ = 0;
00007c  63c8              STR      r0,[r1,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
;;;525            return RESULT_OK;
;;;526          }
00007e  bd70              POP      {r4-r6,pc}
;;;527          
                          ENDP

                  |L6.128|
000080  0a3d3d3d          DCB      "\n=== Starting DirectDriveTest (%x, %d, %d) ===\n",0
000084  20537461
000088  7274696e
00008c  67204469
000090  72656374
000094  44726976
000098  65546573
00009c  74202825
0000a0  782c2025
0000a4  642c2025
0000a8  6429203d
0000ac  3d3d0a00
                  |L6.176|
                          DCD      ||.data||
                  |L6.180|
0000b4  3c23d70a          DCFS     0x3c23d70a ; 0.0099999997764825821
                  |L6.184|
0000b8  3d4ccccd          DCFS     0x3d4ccccd ; 0.05000000074505806
                  |L6.188|
0000bc  42700000          DCFS     0x42700000 ; 60
                  |L6.192|
0000c0  00000000          DCFS     0x00000000 ; 0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController13IMUTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController13IMUTestUpdateEv PROC ; Anki::Cozmo::TestModeController::IMUTestUpdate()
;;;792          
;;;793          Result IMUTestUpdate()
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;794          {
;;;795            if (imuTestDoTurns_) {
000004  4c39              LDR      r4,|L7.236|
000006  b091              SUB      sp,sp,#0x44           ;794
000008  7a20              LDRB     r0,[r4,#8]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915imuTestDoTurns_E
00000a  b310              CBZ      r0,|L7.82|
;;;796              if (SteeringController::GetMode() != SteeringController::SM_POINT_TURN) {
00000c  f7fffffe          BL       _ZN4Anki5Cozmo18SteeringController7GetModeEv ; Anki::Cozmo::SteeringController::GetMode()
000010  2802              CMP      r0,#2
000012  d01e              BEQ      |L7.82|
;;;797                if (IT_turnLeft) {
000014  7ce0              LDRB     r0,[r4,#0x13]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911IT_turnLeftE
000016  b158              CBZ      r0,|L7.48|
;;;798                  // Turn left 180 degrees
;;;799                  PRINT("Turning to 180\n");
000018  a035              ADR      r0,|L7.240|
00001a  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;800                  SteeringController::ExecutePointTurn(IT_TARGET_ANGLE, IT_MAX_ROT_VEL, IT_ROT_ACCEL, IT_ROT_ACCEL);
00001e  eef21a04          VMOV.F32 s3,#10.00000000
000022  eeb21a04          VMOV.F32 s2,#10.00000000
000026  eef70a08          VMOV.F32 s1,#1.50000000
00002a  ed9f0a35          VLDR     s0,|L7.256|
00002e  e00a              B        |L7.70|
                  |L7.48|
;;;801                } else {
;;;802                  // Turn right 180 degrees
;;;803                  PRINT("Turning to 0\n");
000030  a034              ADR      r0,|L7.260|
000032  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;804                  SteeringController::ExecutePointTurn(0.f, -IT_MAX_ROT_VEL, IT_ROT_ACCEL, IT_ROT_ACCEL);
000036  eef21a04          VMOV.F32 s3,#10.00000000
00003a  eeb21a04          VMOV.F32 s2,#10.00000000
00003e  eeff0a08          VMOV.F32 s1,#-1.50000000
000042  ed9f0a34          VLDR     s0,|L7.276|
                  |L7.70|
000046  f7fffffe          BL       _ZN4Anki5Cozmo18SteeringController16ExecutePointTurnEffff ; Anki::Cozmo::SteeringController::ExecutePointTurn(float, float, float, float)
;;;805                }
;;;806                IT_turnLeft = !IT_turnLeft;
00004a  7ce0              LDRB     r0,[r4,#0x13]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911IT_turnLeftE
00004c  f0800001          EOR      r0,r0,#1
000050  74e0              STRB     r0,[r4,#0x13]
                  |L7.82|
;;;807              }
;;;808            }
;;;809            
;;;810            // Print gyro readings
;;;811            if (++ticCnt_ >= 200 / TIME_STEP) {
000052  4926              LDR      r1,|L7.236|
000054  6bc8              LDR      r0,[r1,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000056  1c40              ADDS     r0,r0,#1
000058  63c8              STR      r0,[r1,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00005a  2828              CMP      r0,#0x28
00005c  d342              BCC      |L7.228|
;;;812              
;;;813              // Raw HAL readings
;;;814              HAL::IMU_DataStructure data;
;;;815              HAL::IMUReadData(data);
00005e  a80a              ADD      r0,sp,#0x28
000060  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11IMUReadDataERNS1_17IMU_DataStructureE ; Anki::Cozmo::HAL::IMUReadData(Anki::Cozmo::HAL::IMU_DataStructure&)
;;;816              
;;;817              PRINT("Gyro (%f,%f,%f) rad/s, (%f,%f,%f) mm/s^2\n",
000064  980c              LDR      r0,[sp,#0x30]
000066  f7fffffe          BL       __aeabi_f2d
00006a  4682              MOV      r10,r0
00006c  468b              MOV      r11,r1
00006e  980b              LDR      r0,[sp,#0x2c]
000070  f7fffffe          BL       __aeabi_f2d
000074  4606              MOV      r6,r0
000076  460f              MOV      r7,r1
000078  980a              LDR      r0,[sp,#0x28]
00007a  f7fffffe          BL       __aeabi_f2d
00007e  4604              MOV      r4,r0
000080  460d              MOV      r5,r1
000082  980f              LDR      r0,[sp,#0x3c]
000084  f7fffffe          BL       __aeabi_f2d
000088  e9cd0100          STRD     r0,r1,[sp,#0]
00008c  980e              LDR      r0,[sp,#0x38]
00008e  f7fffffe          BL       __aeabi_f2d
000092  4680              MOV      r8,r0
000094  4689              MOV      r9,r1
000096  980d              LDR      r0,[sp,#0x34]
000098  f7fffffe          BL       __aeabi_f2d
00009c  ec410b10          VMOV     d0,r0,r1
0000a0  a804              ADD      r0,sp,#0x10
0000a2  ec532b10          VMOV     r2,r3,d0
0000a6  e8800cf0          STM      r0,{r4-r7,r10,r11}
0000aa  e9dd0100          LDRD     r0,r1,[sp,#0]
0000ae  e9cd0102          STRD     r0,r1,[sp,#8]
0000b2  a019              ADR      r0,|L7.280|
0000b4  e9cd8900          STRD     r8,r9,[sp,#0]
0000b8  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;818                    data.rate_x, data.rate_y, data.rate_z,
;;;819                    data.acc_x, data.acc_y, data.acc_z);
;;;820              
;;;821              
;;;822              // IMUFilter readings
;;;823              f32 rot_imu = IMUFilter::GetRotation();
0000bc  f7fffffe          BL       _ZN4Anki5Cozmo9IMUFilter11GetRotationEv ; Anki::Cozmo::IMUFilter::GetRotation()
;;;824              PRINT("Rot(IMU): %f deg\n",
0000c0  eddf0a20          VLDR     s1,|L7.324|
0000c4  ee200a20          VMUL.F32 s0,s0,s1
0000c8  ee100a10          VMOV     r0,s0
0000cc  f7fffffe          BL       __aeabi_f2d
0000d0  ec410b10          VMOV     d0,r0,r1
0000d4  a01c              ADR      r0,|L7.328|
0000d6  ec532b10          VMOV     r2,r3,d0
0000da  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;825                    RAD_TO_DEG_F32(rot_imu)
;;;826                    );
;;;827              
;;;828              ticCnt_ = 0;
0000de  4803              LDR      r0,|L7.236|
0000e0  2100              MOVS     r1,#0
0000e2  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L7.228|
;;;829            }
;;;830    
;;;831            return RESULT_OK;
;;;832          }
0000e4  b011              ADD      sp,sp,#0x44
0000e6  2000              MOVS     r0,#0                 ;831
0000e8  e8bd8ff0          POP      {r4-r11,pc}
;;;833          
                          ENDP

                  |L7.236|
                          DCD      ||.data||
                  |L7.240|
0000f0  5475726e          DCB      "Turning to 180\n",0
0000f4  696e6720
0000f8  746f2031
0000fc  38300a00
                  |L7.256|
000100  4048f5c3          DCFS     0x4048f5c3 ; 3.1400001049041748
                  |L7.260|
000104  5475726e          DCB      "Turning to 0\n",0
000108  696e6720
00010c  746f2030
000110  0a00    
000112  00                DCB      0
000113  00                DCB      0
                  |L7.276|
000114  00000000          DCFS     0x00000000 ; 0
                  |L7.280|
000118  4779726f          DCB      "Gyro (%f,%f,%f) rad/s, (%f,%f,%f) mm/s^2\n",0
00011c  20282566
000120  2c25662c
000124  25662920
000128  7261642f
00012c  732c2028
000130  25662c25
000134  662c2566
000138  29206d6d
00013c  2f735e32
000140  0a00    
000142  00                DCB      0
000143  00                DCB      0
                  |L7.324|
000144  42652ee1          DCFS     0x42652ee1 ; 57.295780181884766
                  |L7.328|
000148  526f7428          DCB      "Rot(IMU): %f deg\n",0
00014c  494d5529
000150  3a202566
000154  20646567
000158  0a00    
00015a  00                DCB      0
00015b  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController13LightTestInitEiii||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController13LightTestInitEiii PROC ; Anki::Cozmo::TestModeController::LightTestInit(int, int, int)
;;;901          // color: The color to set it to (applies if LTF_CYCLE_ALL not enabled)
;;;902          Result LightTestInit(s32 flags, s32 ledID, s32 color)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;903          {
000004  4617              MOV      r7,r2
;;;904            PRINT("\n==== Starting LightTest  (flags = %x, ledID = %d, color = %x) =====\n", flags, ledID, color);
000006  4613              MOV      r3,r2
000008  460e              MOV      r6,r1                 ;903
00000a  460a              MOV      r2,r1
00000c  4604              MOV      r4,r0                 ;903
00000e  4601              MOV      r1,r0
000010  480a              LDR      r0,|L8.60|
000012  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;905            
;;;906            ledCycleTest_ = flags & LTF_CYCLE_ALL;
000016  f0140001          ANDS     r0,r4,#1
00001a  4c09              LDR      r4,|L8.64|
00001c  f04f0500          MOV      r5,#0
000020  72e0              STRB     r0,[r4,#0xb]
;;;907    
;;;908            if (ledCycleTest_) {
;;;909              ledID_ = (LEDId)0;
000022  bf1c              ITT      NE
000024  7265              STRBNE   r5,[r4,#9]
;;;910              ledColorIdx_ = 0;
000026  72a5              STRBNE   r5,[r4,#0xa]
000028  d103              BNE      |L8.50|
;;;911            } else {
;;;912              HAL::SetLED((LEDId)ledID, color);
00002a  b2f0              UXTB     r0,r6
00002c  4639              MOV      r1,r7
00002e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
                  |L8.50|
;;;913            }
;;;914            
;;;915            ticCnt_ = 0;
;;;916            return RESULT_OK;
000032  2000              MOVS     r0,#0
000034  63e5              STR      r5,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
;;;917          }
000036  e8bd81f0          POP      {r4-r8,pc}
;;;918          
                          ENDP

00003a  0000              DCW      0x0000
                  |L8.60|
                          DCD      ||.conststring||+0x44
                  |L8.64|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController14AnimTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController14AnimTestUpdateEv PROC ; Anki::Cozmo::TestModeController::AnimTestUpdate()
;;;842          
;;;843          Result AnimTestUpdate()
000000  b570              PUSH     {r4-r6,lr}
;;;844          {
;;;845            if (ticCnt_++ > AT_periodTics) {
000002  4c12              LDR      r4,|L9.76|
000004  6be0              LDR      r0,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000006  1c41              ADDS     r1,r0,#1
000008  63e1              STR      r1,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000a  f5b06ffa          CMP      r0,#0x7d0
00000e  d91a              BLS      |L9.70|
;;;846              ticCnt_ = 0;
000010  2500              MOVS     r5,#0
;;;847              
;;;848              AT_currAnim = (AnimationID_t)(AT_currAnim + 1);
000012  63e5              STR      r5,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000014  6d20              LDR      r0,[r4,#0x50]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
000016  1c40              ADDS     r0,r0,#1
;;;849              
;;;850              // Skip undefined animIDs
;;;851              while(!AnimationController::IsDefined(AT_currAnim)) {
000018  6520              STR      r0,[r4,#0x50]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
00001a  f7fffffe          BL       _ZN4Anki5Cozmo19AnimationController9IsDefinedEi ; Anki::Cozmo::AnimationController::IsDefined(int)
00001e  b950              CBNZ     r0,|L9.54|
                  |L9.32|
;;;852                if (AT_currAnim == AnimationController::MAX_CANNED_ANIMATIONS) {
000020  6d20              LDR      r0,[r4,#0x50]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
000022  2814              CMP      r0,#0x14
000024  bf07              ITTEE    EQ                    ;851
000026  4628              MOVEQ    r0,r5                 ;851
000028  6525              STREQ    r5,[r4,#0x50]         ;851  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
00002a  1c40              ADDNE    r0,r0,#1              ;851
;;;853                  // Go back to start
;;;854                  AT_currAnim = 0;
;;;855                } else {
;;;856                  // otherwise just incrememnt
;;;857                  AT_currAnim = (AnimationID_t)(AT_currAnim + 1);
00002c  6520              STRNE    r0,[r4,#0x50]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
00002e  f7fffffe          BL       _ZN4Anki5Cozmo19AnimationController9IsDefinedEi ; Anki::Cozmo::AnimationController::IsDefined(int)
000032  2800              CMP      r0,#0                 ;851
000034  d0f4              BEQ      |L9.32|
                  |L9.54|
;;;858                }
;;;859              }
;;;860              
;;;861              PRINT("Playing animation %d\n", AT_currAnim);
000036  a006              ADR      r0,|L9.80|
000038  6d21              LDR      r1,[r4,#0x50]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
00003a  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;862              AnimationController::Play(AT_currAnim, 0);
00003e  2100              MOVS     r1,#0
000040  6d20              LDR      r0,[r4,#0x50]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
000042  f7fffffe          BL       _ZN4Anki5Cozmo19AnimationController4PlayEij ; Anki::Cozmo::AnimationController::Play(int, unsigned)
                  |L9.70|
;;;863            }
;;;864            
;;;865            return RESULT_OK;
000046  2000              MOVS     r0,#0
;;;866          }
000048  bd70              POP      {r4-r6,pc}
;;;867          
                          ENDP

00004a  0000              DCW      0x0000
                  |L9.76|
                          DCD      ||.data||
                  |L9.80|
000050  506c6179          DCB      "Playing animation %d\n",0
000054  696e6720
000058  616e696d
00005c  6174696f
000060  6e202564
000064  0a00    
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController14HeadTestUpdateEv||, CODE, READONLY, ALIGN=3

                  _ZN4Anki5Cozmo18TestModeController14HeadTestUpdateEv PROC ; Anki::Cozmo::TestModeController::HeadTestUpdate()
;;;730          
;;;731          Result HeadTestUpdate()
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;732          {
;;;733            static bool up = false;
;;;734            
;;;735            // Change direction
;;;736            if (ticCnt_++ >= 3000 / TIME_STEP) {
000004  4e24              LDR      r6,|L10.152|
000006  b082              SUB      sp,sp,#8              ;732
000008  2700              MOVS     r7,#0
00000a  6bf0              LDR      r0,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000c  1c41              ADDS     r1,r0,#1
00000e  63f1              STR      r1,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000010  f5b07f16          CMP      r0,#0x258
000014  d31a              BCC      |L10.76|
;;;737              
;;;738              
;;;739    #if(HEAD_POSITION_TEST)
;;;740              up = !up;
000016  7bf0              LDRB     r0,[r6,#0xf]  ; up
000018  f0900001          EORS     r0,r0,#1
00001c  73f0              STRB     r0,[r6,#0xf]
;;;741              if (up) {
00001e  d009              BEQ      |L10.52|
;;;742                PRINT("Head HIGH %f rad\n", HEAD_DES_HIGH_ANGLE);
000020  a021              ADR      r0,|L10.168|
000022  ed9f0b1f          VLDR     d0,|L10.160|
000026  ec532b10          VMOV     r2,r3,d0
00002a  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;743                HeadController::SetDesiredAngle(HEAD_DES_HIGH_ANGLE);
00002e  ed9f0a23          VLDR     s0,|L10.188|
000032  e008              B        |L10.70|
                  |L10.52|
;;;744              } else {
;;;745                PRINT("Head LOW %f rad\n", HEAD_DES_LOW_ANGLE);
000034  ed9f0b22          VLDR     d0,|L10.192|
000038  a023              ADR      r0,|L10.200|
00003a  ec532b10          VMOV     r2,r3,d0
00003e  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;746                HeadController::SetDesiredAngle(HEAD_DES_LOW_ANGLE);
000042  ed9f0a26          VLDR     s0,|L10.220|
                  |L10.70|
000046  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController15SetDesiredAngleEf ; Anki::Cozmo::HeadController::SetDesiredAngle(float)
;;;747              }
;;;748    #else
;;;749              up = !up;
;;;750              if (up) {
;;;751                PRINT("Head UP %f power\n", headPower_);
;;;752                HAL::MotorSetPower(HAL::MOTOR_HEAD, headPower_);
;;;753              } else {
;;;754                PRINT("Head DOWN %f power\n", -headPower_);
;;;755                HAL::MotorSetPower(HAL::MOTOR_HEAD, -headPower_);
;;;756              }
;;;757              
;;;758              // Cycle through different power levels
;;;759              if (!up) {
;;;760                headPower_ += 0.1;
;;;761                if (headPower_ >=1.01f) {
;;;762                  headPower_ = HEAD_POWER_CMD;
;;;763                }
;;;764              }
;;;765    
;;;766    #endif
;;;767              
;;;768              ticCnt_ = 0;
00004a  63f7              STR      r7,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L10.76|
;;;769            }
;;;770            
;;;771            // Print speed
;;;772            if (ticCnt2_++ >= 5) {
00004c  6c30              LDR      r0,[r6,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
00004e  1c41              ADDS     r1,r0,#1
000050  6431              STR      r1,[r6,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
000052  2805              CMP      r0,#5
000054  d319              BCC      |L10.138|
;;;773              f32 hSpeed = HAL::MotorGetSpeed(HAL::MOTOR_HEAD);
000056  2003              MOVS     r0,#3
000058  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorGetSpeedENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetSpeed(Anki::Cozmo::HAL::MotorID)
00005c  ee108a10          VMOV     r8,s0
;;;774              f32 hPos = HeadController::GetAngleRad();
000060  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController11GetAngleRadEv ; Anki::Cozmo::HeadController::GetAngleRad()
000064  ee100a10          VMOV     r0,s0
;;;775              
;;;776              PRINT("Head speed %f rad/s, angle %f rad\n", hSpeed, hPos);
000068  f7fffffe          BL       __aeabi_f2d
00006c  4604              MOV      r4,r0
00006e  460d              MOV      r5,r1
000070  4640              MOV      r0,r8
000072  f7fffffe          BL       __aeabi_f2d
000076  ec410b10          VMOV     d0,r0,r1
00007a  a019              ADR      r0,|L10.224|
00007c  ec532b10          VMOV     r2,r3,d0
000080  e9cd4500          STRD     r4,r5,[sp,#0]
000084  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;777              ticCnt2_ = 0;
000088  6437              STR      r7,[r6,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
                  |L10.138|
;;;778            }
;;;779            
;;;780            
;;;781            return RESULT_OK;
;;;782          }
00008a  b002              ADD      sp,sp,#8
00008c  2000              MOVS     r0,#0                 ;781
00008e  e8bd81f0          POP      {r4-r8,pc}
;;;783          
                          ENDP

000092  0000              DCW      0x0000
                          DCD      0x00000000
                  |L10.152|
                          DCD      ||.data||
                          DCD      0x00000000
                  |L10.160|
0000a0  40000000          DCFD     0x3fe6571840000000 ; 0.69813168048858643
0000a4  3fe65718
                  |L10.168|
0000a8  48656164          DCB      "Head HIGH %f rad\n",0
0000ac  20484947
0000b0  48202566
0000b4  20726164
0000b8  0a00    
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L10.188|
0000bc  3f32b8c2          DCFS     0x3f32b8c2 ; 0.69813168048858643
                  |L10.192|
0000c0  60000000          DCFD     0xbfdbecde60000000 ; -0.43633231520652771
0000c4  bfdbecde
                  |L10.200|
0000c8  48656164          DCB      "Head LOW %f rad\n",0
0000cc  204c4f57
0000d0  20256620
0000d4  7261640a
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0
                  |L10.220|
0000dc  bedf66f3          DCFS     0xbedf66f3 ; -0.43633231520652771
                  |L10.224|
0000e0  48656164          DCB      "Head speed %f rad/s, angle %f rad\n",0
0000e4  20737065
0000e8  65642025
0000ec  66207261
0000f0  642f732c
0000f4  20616e67
0000f8  6c652025
0000fc  66207261
000100  640a00  
000103  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController14LiftTestUpdateEv||, CODE, READONLY, ALIGN=3

                  _ZN4Anki5Cozmo18TestModeController14LiftTestUpdateEv PROC ; Anki::Cozmo::TestModeController::LiftTestUpdate()
;;;613          
;;;614          Result LiftTestUpdate()
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;615          {
;;;616            static bool up = false;
;;;617            
;;;618            // Change direction
;;;619            if (ticCnt_++ >= 3000 / TIME_STEP) {
000004  f8dfb0c8          LDR      r11,|L11.208|
000008  b087              SUB      sp,sp,#0x1c           ;615
00000a  f8db003c          LDR      r0,[r11,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000e  1c41              ADDS     r1,r0,#1
000010  f8cb103c          STR      r1,[r11,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000014  f5b07f16          CMP      r0,#0x258
000018  d31e              BCC      |L11.88|
;;;620              
;;;621    
;;;622    #if(LIFT_HEIGHT_TEST)
;;;623              up = !up;
00001a  f89b000e          LDRB     r0,[r11,#0xe]  ; up
00001e  f0900001          EORS     r0,r0,#1
000022  f88b000e          STRB     r0,[r11,#0xe]
;;;624              if (up) {
000026  d009              BEQ      |L11.60|
;;;625                PRINT("Lift HIGH %f mm\n", LIFT_DES_HIGH_HEIGHT);
000028  a02d              ADR      r0,|L11.224|
00002a  ed9f0b2b          VLDR     d0,|L11.216|
00002e  ec532b10          VMOV     r2,r3,d0
000032  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;626                LiftController::SetDesiredHeight(LIFT_DES_HIGH_HEIGHT);
000036  ed9f0a2f          VLDR     s0,|L11.244|
00003a  e008              B        |L11.78|
                  |L11.60|
;;;627              } else {
;;;628                PRINT("Lift LOW %f mm\n", LIFT_DES_LOW_HEIGHT);
00003c  ed9f0b2e          VLDR     d0,|L11.248|
000040  a02f              ADR      r0,|L11.256|
000042  ec532b10          VMOV     r2,r3,d0
000046  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;629                LiftController::SetDesiredHeight(LIFT_DES_LOW_HEIGHT);
00004a  ed9f0a31          VLDR     s0,|L11.272|
                  |L11.78|
00004e  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController16SetDesiredHeightEf ; Anki::Cozmo::LiftController::SetDesiredHeight(float)
;;;630              }
;;;631              
;;;632    #else
;;;633              up = !up;
;;;634              if (up) {
;;;635                PRINT("Lift UP %f power\n", liftPower_);
;;;636                HAL::MotorSetPower(HAL::MOTOR_LIFT, liftPower_);
;;;637              } else {
;;;638                PRINT("Lift DOWN %f power\n", -liftPower_);
;;;639                HAL::MotorSetPower(HAL::MOTOR_LIFT, -liftPower_);
;;;640              }
;;;641              
;;;642    
;;;643              // Cycle through different power levels
;;;644              if (!up) {
;;;645                liftPower_ += 0.1;
;;;646                if (liftPower_ >=1.01f) {
;;;647                  liftPower_ = LIFT_POWER_CMD;
;;;648                }
;;;649              }
;;;650    
;;;651    #endif
;;;652              
;;;653              ticCnt_ = 0;
000052  2000              MOVS     r0,#0
000054  f8cb003c          STR      r0,[r11,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L11.88|
;;;654            }
;;;655            
;;;656    
;;;657            // Print speed
;;;658            if (ticCnt2_++ >= 40) {
000058  f8db0040          LDR      r0,[r11,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
00005c  1c41              ADDS     r1,r0,#1
00005e  f8cb1040          STR      r1,[r11,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
000062  2828              CMP      r0,#0x28
000064  d32d              BCC      |L11.194|
;;;659              f32 lSpeed = HAL::MotorGetSpeed(HAL::MOTOR_LIFT);
000066  2002              MOVS     r0,#2
000068  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorGetSpeedENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetSpeed(Anki::Cozmo::HAL::MotorID)
00006c  ee10aa10          VMOV     r10,s0
;;;660              f32 lSpeed_filt = LiftController::GetAngularVelocity();
000070  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController18GetAngularVelocityEv ; Anki::Cozmo::LiftController::GetAngularVelocity()
000074  ee104a10          VMOV     r4,s0
;;;661              f32 lPos = LiftController::GetAngleRad(); // HAL::MotorGetPosition(HAL::MOTOR_LIFT);
000078  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController11GetAngleRadEv ; Anki::Cozmo::LiftController::GetAngleRad()
00007c  ee105a10          VMOV     r5,s0
;;;662              f32 lHeight = LiftController::GetHeightMM();
000080  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController11GetHeightMMEv ; Anki::Cozmo::LiftController::GetHeightMM()
000084  ee100a10          VMOV     r0,s0
;;;663              PRINT("Lift speed %f rad/s, filt_speed %f rad/s, position %f rad, %f mm\n", lSpeed, lSpeed_filt, lPos, lHeight);
000088  f7fffffe          BL       __aeabi_f2d
00008c  4680              MOV      r8,r0
00008e  4689              MOV      r9,r1
000090  4628              MOV      r0,r5
000092  f7fffffe          BL       __aeabi_f2d
000096  4606              MOV      r6,r0
000098  460f              MOV      r7,r1
00009a  4620              MOV      r0,r4
00009c  f7fffffe          BL       __aeabi_f2d
0000a0  4604              MOV      r4,r0
0000a2  460d              MOV      r5,r1
0000a4  4650              MOV      r0,r10
0000a6  f7fffffe          BL       __aeabi_f2d
0000aa  e88d03f0          STM      sp,{r4-r9}
0000ae  ec410b10          VMOV     d0,r0,r1
0000b2  4818              LDR      r0,|L11.276|
0000b4  ec532b10          VMOV     r2,r3,d0
0000b8  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;664              ticCnt2_ = 0;
0000bc  2000              MOVS     r0,#0
0000be  f8cb0040          STR      r0,[r11,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
                  |L11.194|
;;;665            }
;;;666    
;;;667            
;;;668            return RESULT_OK;
;;;669          }
0000c2  b007              ADD      sp,sp,#0x1c
0000c4  2000              MOVS     r0,#0                 ;668
0000c6  e8bd8ff0          POP      {r4-r11,pc}
;;;670          
                          ENDP

0000ca  0000              DCW      0x0000
                          DCD      0x00000000
                  |L11.208|
                          DCD      ||.data||
                          DCD      0x00000000
                  |L11.216|
0000d8  00000000          DCFD     0x4055400000000000 ; 85
0000dc  40554000
                  |L11.224|
0000e0  4c696674          DCB      "Lift HIGH %f mm\n",0
0000e4  20484947
0000e8  48202566
0000ec  206d6d0a
0000f0  00      
0000f1  00                DCB      0
0000f2  00                DCB      0
0000f3  00                DCB      0
                  |L11.244|
0000f4  42aa0000          DCFS     0x42aa0000 ; 85
                  |L11.248|
0000f8  00000000          DCFD     0x4040800000000000 ; 33
0000fc  40408000
                  |L11.256|
000100  4c696674          DCB      "Lift LOW %f mm\n",0
000104  204c4f57
000108  20256620
00010c  6d6d0a00
                  |L11.272|
000110  42040000          DCFS     0x42040000 ; 33
                  |L11.276|
                          DCD      ||.conststring||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController14StopTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController14StopTestUpdateEv PROC ; Anki::Cozmo::TestModeController::StopTestUpdate()
;;;961          
;;;962          Result StopTestUpdate()
000000  b5f0              PUSH     {r4-r7,lr}
;;;963          {
;;;964            if (ticCnt_++ > 2000 / TIME_STEP) {
000002  4e46              LDR      r6,|L12.284|
000004  2700              MOVS     r7,#0
000006  ed2d8b02          VPUSH    {d8}                  ;963
00000a  b083              SUB      sp,sp,#0xc            ;963
00000c  6bf0              LDR      r0,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000e  1c41              ADDS     r1,r0,#1
000010  63f1              STR      r1,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000012  f5b07fc8          CMP      r0,#0x190
000016  d942              BLS      |L12.158|
;;;965              ST_go = !ST_go;
000018  7c70              LDRB     r0,[r6,#0x11]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da695ST_goE
00001a  f0900001          EORS     r0,r0,#1
00001e  7470              STRB     r0,[r6,#0x11]
;;;966              if(ST_go) {
;;;967                // Toggle speed
;;;968                if (ST_speed == 100.f)
;;;969                  ST_speed = 20.f;
;;;970                else
;;;971                  ST_speed = 100.f;
;;;972                
;;;973                PRINT("\nGO: %f mm/s\n", ST_speed);
;;;974                SteeringController::ExecuteDirectDrive(ST_speed, ST_speed);
000020  ed9f8a3f          VLDR     s16,|L12.288|
000024  d021              BEQ      |L12.106|
000026  6c70              LDR      r0,[r6,#0x44]         ;968  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ST_speedE
000028  f1a04180          SUB      r1,r0,#0x40000000     ;968
00002c  f1b17132          SUBS     r1,r1,#0x2c80000      ;968
000030  bf0c              ITE      EQ                    ;969
000032  eeb30a04          VMOVEQ.F32 s0,#20.00000000       ;969
000036  ed9f0a3b          VLDRNE   s0,|L12.292|
00003a  ed860a11          VSTR     s0,[r6,#0x44]         ;971
00003e  ee100a10          VMOV     r0,s0                 ;973
000042  f7fffffe          BL       __aeabi_f2d
000046  ec410b10          VMOV     d0,r0,r1              ;973
00004a  a037              ADR      r0,|L12.296|
00004c  ec532b10          VMOV     r2,r3,d0              ;973
000050  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000054  edd60a11          VLDR     s1,[r6,#0x44]
000058  eeb01a48          VMOV.F32 s2,s16
00005c  eef01a41          VMOV.F32 s3,s2
000060  eeb00a60          VMOV.F32 s0,s1
000064  f7fffffe          BL       _ZN4Anki5Cozmo18SteeringController18ExecuteDirectDriveEffff ; Anki::Cozmo::SteeringController::ExecuteDirectDrive(float, float, float, float)
000068  e018              B        |L12.156|
                  |L12.106|
;;;975              } else {
;;;976                // Stopping
;;;977                SteeringController::ExecuteDirectDrive(0, 0);
00006a  eeb00a48          VMOV.F32 s0,s16
00006e  eef01a40          VMOV.F32 s3,s0
000072  eeb01a40          VMOV.F32 s2,s0
000076  eef00a40          VMOV.F32 s1,s0
00007a  f7fffffe          BL       _ZN4Anki5Cozmo18SteeringController18ExecuteDirectDriveEffff ; Anki::Cozmo::SteeringController::ExecuteDirectDrive(float, float, float, float)
;;;978                HAL::MotorResetPosition(HAL::MOTOR_LEFT_WHEEL);
00007e  2000              MOVS     r0,#0
000080  f7fffffe          BL       _ZN4Anki5Cozmo3HAL18MotorResetPositionENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorResetPosition(Anki::Cozmo::HAL::MotorID)
;;;979                HAL::MotorResetPosition(HAL::MOTOR_RIGHT_WHEEL);
000084  2001              MOVS     r0,#1
000086  f7fffffe          BL       _ZN4Anki5Cozmo3HAL18MotorResetPositionENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorResetPosition(Anki::Cozmo::HAL::MotorID)
;;;980                ST_prevLeftPos = 1000;
00008a  ed9f0a2b          VLDR     s0,|L12.312|
;;;981                ST_prevRightPos = 1000;
;;;982                ST_slowDownTics = 0;
;;;983                ST_slowingDown = true;
00008e  2001              MOVS     r0,#1
000090  ed860a12          VSTR     s0,[r6,#0x48]         ;980
000094  ed860a13          VSTR     s0,[r6,#0x4c]         ;981
000098  82b7              STRH     r7,[r6,#0x14]         ;982
00009a  74b0              STRB     r0,[r6,#0x12]
                  |L12.156|
;;;984              }
;;;985              ticCnt_ = 0;
00009c  63f7              STR      r7,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L12.158|
;;;986            }
;;;987            
;;;988            // Report stopping distance once it has come to a complete stop
;;;989            if(ST_slowingDown) {
00009e  7cb0              LDRB     r0,[r6,#0x12]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914ST_slowingDownE
0000a0  2800              CMP      r0,#0
0000a2  d035              BEQ      |L12.272|
;;;990              if (HAL::MotorGetPosition(HAL::MOTOR_LEFT_WHEEL) == ST_prevLeftPos &&
0000a4  2000              MOVS     r0,#0
0000a6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL16MotorGetPositionENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetPosition(Anki::Cozmo::HAL::MotorID)
0000aa  edd60a12          VLDR     s1,[r6,#0x48]
0000ae  eeb40a60          VCMP.F32 s0,s1
0000b2  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000b6  d11e              BNE      |L12.246|
;;;991                  HAL::MotorGetPosition(HAL::MOTOR_RIGHT_WHEEL) == ST_prevRightPos) {
0000b8  2001              MOVS     r0,#1
0000ba  f7fffffe          BL       _ZN4Anki5Cozmo3HAL16MotorGetPositionENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetPosition(Anki::Cozmo::HAL::MotorID)
0000be  edd60a13          VLDR     s1,[r6,#0x4c]
0000c2  eeb40a60          VCMP.F32 s0,s1
0000c6  eef1fa10          VMRS     APSR_nzcv,FPSCR
0000ca  d114              BNE      |L12.246|
;;;992                PRINT("STOPPED: (%f, %f) mm in %d tics\n", ST_prevLeftPos, ST_prevRightPos, ST_slowDownTics);
0000cc  ee100a90          VMOV     r0,s1
0000d0  f7fffffe          BL       __aeabi_f2d
0000d4  4604              MOV      r4,r0
0000d6  460d              MOV      r5,r1
0000d8  6cb0              LDR      r0,[r6,#0x48]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914ST_prevLeftPosE
0000da  f7fffffe          BL       __aeabi_f2d
0000de  ec410b10          VMOV     d0,r0,r1
0000e2  8ab0              LDRH     r0,[r6,#0x14]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915ST_slowDownTicsE
0000e4  9400              STR      r4,[sp,#0]
0000e6  e9cd5001          STRD     r5,r0,[sp,#4]
0000ea  ec532b10          VMOV     r2,r3,d0
0000ee  a013              ADR      r0,|L12.316|
0000f0  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;993                ST_slowingDown = false;
0000f4  74b7              STRB     r7,[r6,#0x12]
                  |L12.246|
;;;994              }
;;;995              ST_prevLeftPos = HAL::MotorGetPosition(HAL::MOTOR_LEFT_WHEEL);
0000f6  2000              MOVS     r0,#0
0000f8  f7fffffe          BL       _ZN4Anki5Cozmo3HAL16MotorGetPositionENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetPosition(Anki::Cozmo::HAL::MotorID)
0000fc  ed860a12          VSTR     s0,[r6,#0x48]
;;;996              ST_prevRightPos = HAL::MotorGetPosition(HAL::MOTOR_RIGHT_WHEEL);
000100  2001              MOVS     r0,#1
000102  f7fffffe          BL       _ZN4Anki5Cozmo3HAL16MotorGetPositionENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetPosition(Anki::Cozmo::HAL::MotorID)
000106  ed860a13          VSTR     s0,[r6,#0x4c]
;;;997              ST_slowDownTics++;
00010a  8ab0              LDRH     r0,[r6,#0x14]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915ST_slowDownTicsE
00010c  1c40              ADDS     r0,r0,#1
00010e  82b0              STRH     r0,[r6,#0x14]
                  |L12.272|
;;;998            }
;;;999            
;;;1000           return RESULT_OK;
;;;1001         }
000110  b003              ADD      sp,sp,#0xc
000112  2000              MOVS     r0,#0                 ;1000
000114  ecbd8b02          VPOP     {d8}
000118  bdf0              POP      {r4-r7,pc}
;;;1002   
                          ENDP

00011a  0000              DCW      0x0000
                  |L12.284|
                          DCD      ||.data||
                  |L12.288|
000120  00000000          DCFS     0x00000000 ; 0
                  |L12.292|
000124  42c80000          DCFS     0x42c80000 ; 100
                  |L12.296|
000128  0a474f3a          DCB      "\nGO: %f mm/s\n",0
00012c  20256620
000130  6d6d2f73
000134  0a00    
000136  00                DCB      0
000137  00                DCB      0
                  |L12.312|
000138  447a0000          DCFS     0x447a0000 ; 1000
                  |L12.316|
00013c  53544f50          DCB      "STOPPED: (%f, %f) mm in %d tics\n",0
000140  5045443a
000144  20282566
000148  2c202566
00014c  29206d6d
000150  20696e20
000154  25642074
000158  6963730a
00015c  00      
00015d  00                DCB      0
00015e  00                DCB      0
00015f  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController15DriveTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController15DriveTestUpdateEv PROC ; Anki::Cozmo::TestModeController::DriveTestUpdate()
;;;527          
;;;528          Result DriveTestUpdate()
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;529          {
;;;530            static bool fwd = true;
;;;531    
;;;532            // Change direction (or at least print speed
;;;533            if (ticCnt_++ >= WHEEL_TOGGLE_DIRECTION_PERIOD_MS / TIME_STEP) {
000004  4db8              LDR      r5,|L13.744|
000006  ed2d8b02          VPUSH    {d8}                  ;529
00000a  b08b              SUB      sp,sp,#0x2c           ;529
00000c  6be8              LDR      r0,[r5,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000e  1c41              ADDS     r1,r0,#1
000010  63e9              STR      r1,[r5,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000012  f5b07fc8          CMP      r0,#0x190
000016  f0c08165          BCC.W    |L13.740|
;;;534    
;;;535              f32 lSpeed = HAL::MotorGetSpeed(HAL::MOTOR_LEFT_WHEEL);
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorGetSpeedENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetSpeed(Anki::Cozmo::HAL::MotorID)
000020  ee109a10          VMOV     r9,s0
;;;536              f32 rSpeed = HAL::MotorGetSpeed(HAL::MOTOR_RIGHT_WHEEL);
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorGetSpeedENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetSpeed(Anki::Cozmo::HAL::MotorID)
00002a  ee104a10          VMOV     r4,s0
;;;537              
;;;538              f32 lSpeed_filt, rSpeed_filt;
;;;539              WheelController::GetFilteredWheelSpeeds(lSpeed_filt,rSpeed_filt);
00002e  a909              ADD      r1,sp,#0x24
000030  a808              ADD      r0,sp,#0x20
000032  f7fffffe          BL       _ZN4Anki5Cozmo15WheelController22GetFilteredWheelSpeedsERfS2_ ; Anki::Cozmo::WheelController::GetFilteredWheelSpeeds(float&, float&)
;;;540    
;;;541    
;;;542              if (firstSpeedCommanded_){
000036  78e8              LDRB     r0,[r5,#3]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6920firstSpeedCommanded_E
000038  2800              CMP      r0,#0
;;;543                if (enableDirectHALTest_) {
;;;544                  PRINT("Going forward %f power (currSpeed %f %f, filtSpeed %f %f)\n", wheelPower_, lSpeed, rSpeed, lSpeed_filt, rSpeed_filt);
;;;545                } else {
;;;546                  PRINT("Going forward %f mm/s (currSpeed %f %f, filtSpeed %f %f)\n", wheelSpeed_mmps_, lSpeed, rSpeed, lSpeed_filt, rSpeed_filt);
;;;547                }
;;;548                ticCnt_ = 0;
;;;549                return RESULT_OK;
;;;550              }
;;;551              
;;;552              if (fwd) {
00003a  4628              MOV      r0,r5
00003c  d052              BEQ      |L13.228|
00003e  7840              LDRB     r0,[r0,#1]            ;543  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6920enableDirectHALTest_E
000040  2800              CMP      r0,#0                 ;543
000042  9809              LDR      r0,[sp,#0x24]         ;543
000044  d025              BEQ      |L13.146|
000046  f7fffffe          BL       __aeabi_f2d
00004a  4682              MOV      r10,r0                ;544
00004c  468b              MOV      r11,r1                ;544
00004e  9808              LDR      r0,[sp,#0x20]         ;544
000050  f7fffffe          BL       __aeabi_f2d
000054  4605              MOV      r5,r0                 ;544
000056  460e              MOV      r6,r1                 ;544
000058  4620              MOV      r0,r4                 ;544
00005a  f7fffffe          BL       __aeabi_f2d
00005e  e9cd0100          STRD     r0,r1,[sp,#0]         ;544
000062  4648              MOV      r0,r9                 ;544
000064  f7fffffe          BL       __aeabi_f2d
000068  4607              MOV      r7,r0                 ;544
00006a  489f              LDR      r0,|L13.744|
00006c  4688              MOV      r8,r1                 ;544
00006e  6980              LDR      r0,[r0,#0x18]         ;544  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911wheelPower_E
000070  f7fffffe          BL       __aeabi_f2d
000074  ec410b10          VMOV     d0,r0,r1              ;544
000078  a804              ADD      r0,sp,#0x10           ;544
00007a  ec532b10          VMOV     r2,r3,d0              ;544
00007e  e8800c60          STM      r0,{r5,r6,r10,r11}    ;544
000082  e9dd0100          LDRD     r0,r1,[sp,#0]         ;544
000086  e9cd7800          STRD     r7,r8,[sp,#0]         ;544
00008a  e9cd0102          STRD     r0,r1,[sp,#8]         ;544
00008e  a097              ADR      r0,|L13.748|
000090  e01e              B        |L13.208|
                  |L13.146|
000092  f7fffffe          BL       __aeabi_f2d
000096  4682              MOV      r10,r0                ;546
000098  468b              MOV      r11,r1                ;546
00009a  9808              LDR      r0,[sp,#0x20]         ;546
00009c  f7fffffe          BL       __aeabi_f2d
0000a0  4607              MOV      r7,r0                 ;546
0000a2  4688              MOV      r8,r1                 ;546
0000a4  4620              MOV      r0,r4                 ;546
0000a6  f7fffffe          BL       __aeabi_f2d
0000aa  4605              MOV      r5,r0                 ;546
0000ac  460e              MOV      r6,r1                 ;546
0000ae  4648              MOV      r0,r9                 ;546
0000b0  f7fffffe          BL       __aeabi_f2d
0000b4  e9cd0100          STRD     r0,r1,[sp,#0]         ;546
0000b8  488b              LDR      r0,|L13.744|
0000ba  6a00              LDR      r0,[r0,#0x20]         ;546  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6916wheelSpeed_mmps_E
0000bc  f7fffffe          BL       __aeabi_f2d
0000c0  ec410b10          VMOV     d0,r0,r1              ;546
0000c4  a902              ADD      r1,sp,#8              ;546
0000c6  ec532b10          VMOV     r2,r3,d0              ;546
0000ca  e8810de0          STM      r1,{r5-r8,r10,r11}    ;546
0000ce  a096              ADR      r0,|L13.808|
                  |L13.208|
0000d0  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
0000d4  4984              LDR      r1,|L13.744|
0000d6  2000              MOVS     r0,#0                 ;548
0000d8  63c8              STR      r0,[r1,#0x3c]         ;548  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L13.218|
;;;553                if (enableDirectHALTest_) {
;;;554                  PRINT("Going forward %f power (currSpeed %f %f, filtSpeed %f %f)\n", wheelPower_, lSpeed, rSpeed, lSpeed_filt, rSpeed_filt);
;;;555                  HAL::MotorSetPower(HAL::MOTOR_LEFT_WHEEL, wheelPower_);
;;;556                  HAL::MotorSetPower(HAL::MOTOR_RIGHT_WHEEL, wheelPower_);
;;;557                  WheelController::Disable();
;;;558                } else {
;;;559                  PRINT("Going forward %f mm/s (currSpeed %f %f, filtSpeed %f %f)\n", wheelSpeed_mmps_, lSpeed, rSpeed, lSpeed_filt, rSpeed_filt);
;;;560                  SteeringController::ExecuteDirectDrive(wheelSpeed_mmps_,wheelSpeed_mmps_,accel_mmps2,accel_mmps2);
;;;561                }
;;;562              } else {
;;;563                if (enableDirectHALTest_) {
;;;564                  PRINT("Going reverse %f power (currSpeed %f %f, filtSpeed %f %f)\n", wheelPower_, lSpeed, rSpeed, lSpeed_filt, rSpeed_filt);
;;;565                  HAL::MotorSetPower(HAL::MOTOR_LEFT_WHEEL, -wheelPower_);
;;;566                  HAL::MotorSetPower(HAL::MOTOR_RIGHT_WHEEL, -wheelPower_);
;;;567                  WheelController::Disable();
;;;568                } else {
;;;569                  PRINT("Going reverse %f mm/s (currSpeed %f %f, filtSpeed %f %f)\n", wheelSpeed_mmps_, lSpeed, rSpeed, lSpeed_filt, rSpeed_filt);
;;;570                  SteeringController::ExecuteDirectDrive(-wheelSpeed_mmps_,-wheelSpeed_mmps_,accel_mmps2,accel_mmps2);
;;;571                }
;;;572                
;;;573              }
;;;574              ticCnt_ = 0;
;;;575              
;;;576              if (enableCycleSpeedsTest_ || enableToggleDir_) {
;;;577                fwd = !fwd;
;;;578              }
;;;579              if (!enableToggleDir_) {
;;;580                firstSpeedCommanded_ = true;
;;;581              }
;;;582    
;;;583    
;;;584              // Cycle through different power levels
;;;585              if (enableCycleSpeedsTest_) {
;;;586                if (!fwd) {
;;;587                  wheelPower_ += wheelPowerStep_;
;;;588                  if (wheelPower_ >=1.01f) {
;;;589                    wheelPower_ = 0;
;;;590                  }
;;;591                }
;;;592              }
;;;593    
;;;594           }
;;;595    
;;;596           return RESULT_OK;
;;;597          }
0000da  b00b              ADD      sp,sp,#0x2c
0000dc  ecbd8b02          VPOP     {d8}
0000e0  e8bd8ff0          POP      {r4-r11,pc}
                  |L13.228|
0000e4  7b40              LDRB     r0,[r0,#0xd]          ;552  ; fwd
0000e6  ed9f8a9f          VLDR     s16,|L13.868|
0000ea  2800              CMP      r0,#0                 ;552
0000ec  d06d              BEQ      |L13.458|
0000ee  f8df81f8          LDR      r8,|L13.744|
0000f2  f8980001          LDRB     r0,[r8,#1]            ;553  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6920enableDirectHALTest_E
0000f6  2800              CMP      r0,#0                 ;553
0000f8  9809              LDR      r0,[sp,#0x24]         ;553
0000fa  d034              BEQ      |L13.358|
0000fc  f7fffffe          BL       __aeabi_f2d
000100  e9cd0100          STRD     r0,r1,[sp,#0]         ;554
000104  9808              LDR      r0,[sp,#0x20]         ;554
000106  f7fffffe          BL       __aeabi_f2d
00010a  4682              MOV      r10,r0                ;554
00010c  468b              MOV      r11,r1                ;554
00010e  4620              MOV      r0,r4                 ;554
000110  f7fffffe          BL       __aeabi_f2d
000114  4604              MOV      r4,r0                 ;554
000116  460d              MOV      r5,r1                 ;554
000118  4648              MOV      r0,r9                 ;554
00011a  f7fffffe          BL       __aeabi_f2d
00011e  4606              MOV      r6,r0                 ;554
000120  460f              MOV      r7,r1                 ;554
000122  f8d80018          LDR      r0,[r8,#0x18]         ;554  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911wheelPower_E
000126  f7fffffe          BL       __aeabi_f2d
00012a  ec410b10          VMOV     d0,r0,r1              ;554
00012e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;554
000132  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;554
000136  a902              ADD      r1,sp,#8              ;554
000138  ec532b10          VMOV     r2,r3,d0              ;554
00013c  e8810c30          STM      r1,{r4,r5,r10,r11}    ;554
000140  a06a              ADR      r0,|L13.748|
000142  e9cd6700          STRD     r6,r7,[sp,#0]         ;554
000146  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
00014a  ed980a06          VLDR     s0,[r8,#0x18]         ;555
00014e  2000              MOVS     r0,#0                 ;555
000150  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorSetPowerENS1_7MotorIDEf ; Anki::Cozmo::HAL::MotorSetPower(Anki::Cozmo::HAL::MotorID, float)
000154  ed980a06          VLDR     s0,[r8,#0x18]         ;556
000158  2001              MOVS     r0,#1                 ;556
00015a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorSetPowerENS1_7MotorIDEf ; Anki::Cozmo::HAL::MotorSetPower(Anki::Cozmo::HAL::MotorID, float)
00015e  f7fffffe          BL       _ZN4Anki5Cozmo15WheelController7DisableEv ; Anki::Cozmo::WheelController::Disable()
000162  f000b89d          B.W      |L13.672|
                  |L13.358|
000166  f7fffffe          BL       __aeabi_f2d
00016a  e9cd0100          STRD     r0,r1,[sp,#0]         ;559
00016e  9808              LDR      r0,[sp,#0x20]         ;559
000170  f7fffffe          BL       __aeabi_f2d
000174  4682              MOV      r10,r0                ;559
000176  468b              MOV      r11,r1                ;559
000178  4620              MOV      r0,r4                 ;559
00017a  f7fffffe          BL       __aeabi_f2d
00017e  4604              MOV      r4,r0                 ;559
000180  460d              MOV      r5,r1                 ;559
000182  4648              MOV      r0,r9                 ;559
000184  f7fffffe          BL       __aeabi_f2d
000188  4606              MOV      r6,r0                 ;559
00018a  460f              MOV      r7,r1                 ;559
00018c  f8d80020          LDR      r0,[r8,#0x20]         ;559  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6916wheelSpeed_mmps_E
000190  f7fffffe          BL       __aeabi_f2d
000194  ec410b10          VMOV     d0,r0,r1              ;559
000198  e9dd0100          LDRD     r0,r1,[sp,#0]         ;559
00019c  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;559
0001a0  a902              ADD      r1,sp,#8              ;559
0001a2  ec532b10          VMOV     r2,r3,d0              ;559
0001a6  e8810c30          STM      r1,{r4,r5,r10,r11}    ;559
0001aa  a05f              ADR      r0,|L13.808|
0001ac  e9cd6700          STRD     r6,r7,[sp,#0]         ;559
0001b0  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
0001b4  edd80a08          VLDR     s1,[r8,#0x20]         ;560
0001b8  eeb01a48          VMOV.F32 s2,s16                ;560
0001bc  eef01a41          VMOV.F32 s3,s2                 ;560
0001c0  eeb00a60          VMOV.F32 s0,s1                 ;560
0001c4  f7fffffe          BL       _ZN4Anki5Cozmo18SteeringController18ExecuteDirectDriveEffff ; Anki::Cozmo::SteeringController::ExecuteDirectDrive(float, float, float, float)
0001c8  e06a              B        |L13.672|
                  |L13.458|
0001ca  4847              LDR      r0,|L13.744|
0001cc  7840              LDRB     r0,[r0,#1]            ;563  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6920enableDirectHALTest_E
0001ce  2800              CMP      r0,#0                 ;563
0001d0  9809              LDR      r0,[sp,#0x24]         ;563
0001d2  d038              BEQ      |L13.582|
0001d4  f7fffffe          BL       __aeabi_f2d
0001d8  4682              MOV      r10,r0                ;564
0001da  468b              MOV      r11,r1                ;564
0001dc  9808              LDR      r0,[sp,#0x20]         ;564
0001de  f7fffffe          BL       __aeabi_f2d
0001e2  e9cd0100          STRD     r0,r1,[sp,#0]         ;564
0001e6  4620              MOV      r0,r4                 ;564
0001e8  f7fffffe          BL       __aeabi_f2d
0001ec  4606              MOV      r6,r0                 ;564
0001ee  460f              MOV      r7,r1                 ;564
0001f0  4648              MOV      r0,r9                 ;564
0001f2  f7fffffe          BL       __aeabi_f2d
0001f6  f8df80f0          LDR      r8,|L13.744|
0001fa  4604              MOV      r4,r0                 ;564
0001fc  460d              MOV      r5,r1                 ;564
0001fe  f8d80018          LDR      r0,[r8,#0x18]         ;564  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911wheelPower_E
000202  f7fffffe          BL       __aeabi_f2d
000206  ec410b10          VMOV     d0,r0,r1              ;564
00020a  e9cdab06          STRD     r10,r11,[sp,#0x18]    ;564
00020e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;564
000212  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;564
000216  e88d00f0          STM      sp,{r4-r7}            ;564
00021a  ec532b10          VMOV     r2,r3,d0              ;564
00021e  a052              ADR      r0,|L13.872|
000220  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000224  ed980a06          VLDR     s0,[r8,#0x18]         ;565
000228  2000              MOVS     r0,#0                 ;565
00022a  eeb10a40          VNEG.F32 s0,s0                 ;565
00022e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorSetPowerENS1_7MotorIDEf ; Anki::Cozmo::HAL::MotorSetPower(Anki::Cozmo::HAL::MotorID, float)
000232  ed980a06          VLDR     s0,[r8,#0x18]         ;566
000236  2001              MOVS     r0,#1                 ;566
000238  eeb10a40          VNEG.F32 s0,s0                 ;566
00023c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorSetPowerENS1_7MotorIDEf ; Anki::Cozmo::HAL::MotorSetPower(Anki::Cozmo::HAL::MotorID, float)
000240  f7fffffe          BL       _ZN4Anki5Cozmo15WheelController7DisableEv ; Anki::Cozmo::WheelController::Disable()
000244  e02c              B        |L13.672|
                  |L13.582|
000246  f7fffffe          BL       __aeabi_f2d
00024a  4682              MOV      r10,r0                ;569
00024c  468b              MOV      r11,r1                ;569
00024e  9808              LDR      r0,[sp,#0x20]         ;569
000250  f7fffffe          BL       __aeabi_f2d
000254  4607              MOV      r7,r0                 ;569
000256  4688              MOV      r8,r1                 ;569
000258  4620              MOV      r0,r4                 ;569
00025a  f7fffffe          BL       __aeabi_f2d
00025e  4605              MOV      r5,r0                 ;569
000260  460e              MOV      r6,r1                 ;569
000262  4648              MOV      r0,r9                 ;569
000264  f7fffffe          BL       __aeabi_f2d
000268  4c1f              LDR      r4,|L13.744|
00026a  e9cd0100          STRD     r0,r1,[sp,#0]         ;569
00026e  6a20              LDR      r0,[r4,#0x20]         ;569  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6916wheelSpeed_mmps_E
000270  f7fffffe          BL       __aeabi_f2d
000274  ec410b10          VMOV     d0,r0,r1              ;569
000278  a902              ADD      r1,sp,#8              ;569
00027a  ec532b10          VMOV     r2,r3,d0              ;569
00027e  e8810de0          STM      r1,{r5-r8,r10,r11}    ;569
000282  a048              ADR      r0,|L13.932|
000284  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000288  ed940a08          VLDR     s0,[r4,#0x20]         ;570
00028c  eeb01a48          VMOV.F32 s2,s16                ;570
000290  eef10a40          VNEG.F32 s1,s0                 ;570
000294  eef01a41          VMOV.F32 s3,s2                 ;570
000298  eeb00a60          VMOV.F32 s0,s1                 ;570
00029c  f7fffffe          BL       _ZN4Anki5Cozmo18SteeringController18ExecuteDirectDriveEffff ; Anki::Cozmo::SteeringController::ExecuteDirectDrive(float, float, float, float)
                  |L13.672|
0002a0  4a11              LDR      r2,|L13.744|
0002a2  2000              MOVS     r0,#0                 ;574
0002a4  63d0              STR      r0,[r2,#0x3c]         ;576  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
0002a6  7890              LDRB     r0,[r2,#2]            ;576  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6922enableCycleSpeedsTest_E
0002a8  7811              LDRB     r1,[r2,#0]            ;576  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6916enableToggleDir_E
0002aa  ea500301          ORRS     r3,r0,r1              ;576
0002ae  d003              BEQ      |L13.696|
0002b0  7b53              LDRB     r3,[r2,#0xd]          ;577  ; fwd
0002b2  f0830301          EOR      r3,r3,#1              ;577
0002b6  7353              STRB     r3,[r2,#0xd]          ;577
                  |L13.696|
0002b8  2900              CMP      r1,#0                 ;579
0002ba  bf04              ITT      EQ                    ;580
0002bc  2101              MOVEQ    r1,#1                 ;580
0002be  70d1              STRBEQ   r1,[r2,#3]            ;580
0002c0  b180              CBZ      r0,|L13.740|
0002c2  7b50              LDRB     r0,[r2,#0xd]          ;586  ; fwd
0002c4  b970              CBNZ     r0,|L13.740|
0002c6  edd20a06          VLDR     s1,[r2,#0x18]         ;587
0002ca  ed920a07          VLDR     s0,[r2,#0x1c]         ;587
0002ce  4944              LDR      r1,|L13.992|
0002d0  ee300a80          VADD.F32 s0,s1,s0              ;587
0002d4  ee100a10          VMOV     r0,s0                 ;588
0002d8  ed820a06          VSTR     s0,[r2,#0x18]         ;587
0002dc  4288              CMP      r0,r1                 ;588
0002de  bfa8              IT       GE                    ;589
0002e0  ed828a06          VSTRGE   s16,[r2,#0x18]        ;589
                  |L13.740|
0002e4  2000              MOVS     r0,#0                 ;596
0002e6  e6f8              B        |L13.218|
;;;598          
                          ENDP

                  |L13.744|
                          DCD      ||.data||
                  |L13.748|
0002ec  476f696e          DCB      "Going forward %f power (currSpeed %f %f, filtSpeed %f %"
0002f0  6720666f
0002f4  72776172
0002f8  64202566
0002fc  20706f77
000300  65722028
000304  63757272
000308  53706565
00030c  64202566
000310  2025662c
000314  2066696c
000318  74537065
00031c  65642025
000320  662025  
000323  66290a00          DCB      "f)\n",0
000327  00                DCB      0
                  |L13.808|
000328  476f696e          DCB      "Going forward %f mm/s (currSpeed %f %f, filtSpeed %f %f"
00032c  6720666f
000330  72776172
000334  64202566
000338  206d6d2f
00033c  73202863
000340  75727253
000344  70656564
000348  20256620
00034c  25662c20
000350  66696c74
000354  53706565
000358  64202566
00035c  202566  
00035f  290a00            DCB      ")\n",0
000362  00                DCB      0
000363  00                DCB      0
                  |L13.868|
000364  00000000          DCFS     0x00000000 ; 0
                  |L13.872|
000368  476f696e          DCB      "Going reverse %f power (currSpeed %f %f, filtSpeed %f %"
00036c  67207265
000370  76657273
000374  65202566
000378  20706f77
00037c  65722028
000380  63757272
000384  53706565
000388  64202566
00038c  2025662c
000390  2066696c
000394  74537065
000398  65642025
00039c  662025  
00039f  66290a00          DCB      "f)\n",0
0003a3  00                DCB      0
                  |L13.932|
0003a4  476f696e          DCB      "Going reverse %f mm/s (currSpeed %f %f, filtSpeed %f %f"
0003a8  67207265
0003ac  76657273
0003b0  65202566
0003b4  206d6d2f
0003b8  73202863
0003bc  75727253
0003c0  70656564
0003c4  20256620
0003c8  25662c20
0003cc  66696c74
0003d0  53706565
0003d4  64202566
0003d8  202566  
0003db  290a00            DCB      ")\n",0
0003de  00                DCB      0
0003df  00                DCB      0
                  |L13.992|
                          DCD      0x3f8147ae

                          AREA ||i._ZN4Anki5Cozmo18TestModeController15GripperTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController15GripperTestInitEv PROC ; Anki::Cozmo::TestModeController::GripperTestInit()
;;;867          
;;;868          Result GripperTestInit()
000000  b510              PUSH     {r4,lr}
;;;869          {
;;;870            PRINT("\n==== Starting GripperTest =====\n");
000002  a003              ADR      r0,|L14.16|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;871            ticCnt_ = 0;
000008  490a              LDR      r1,|L14.52|
00000a  2000              MOVS     r0,#0
00000c  63c8              STR      r0,[r1,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
;;;872            return RESULT_OK;
;;;873          }
00000e  bd10              POP      {r4,pc}
;;;874          
                          ENDP

                  |L14.16|
000010  0a3d3d3d          DCB      "\n==== Starting GripperTest =====\n",0
000014  3d205374
000018  61727469
00001c  6e672047
000020  72697070
000024  65725465
000028  7374203d
00002c  3d3d3d3d
000030  0a00    
000032  00                DCB      0
000033  00                DCB      0
                  |L14.52|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController15LightTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController15LightTestUpdateEv PROC ; Anki::Cozmo::TestModeController::LightTestUpdate()
;;;919          
;;;920          Result LightTestUpdate()
000000  b570              PUSH     {r4-r6,lr}
;;;921          {
;;;922            if (!ledCycleTest_) {
000002  4c19              LDR      r4,|L15.104|
000004  7ae0              LDRB     r0,[r4,#0xb]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6913ledCycleTest_E
000006  b1d8              CBZ      r0,|L15.64|
;;;923              Start(TM_NONE);
;;;924              return RESULT_OK;
;;;925            }
;;;926            
;;;927            // Cycle through all channels
;;;928            if (ticCnt_++ > 2000 / TIME_STEP) {
000008  6be0              LDR      r0,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000a  1c41              ADDS     r1,r0,#1
00000c  63e1              STR      r1,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000e  f5b07fc8          CMP      r0,#0x190
000012  d926              BLS      |L15.98|
;;;929              
;;;930              PRINT("LED channel %d, color 0x%x\n", ledID_, LEDColorList_[ledColorIdx_]);
000014  4d15              LDR      r5,|L15.108|
000016  7aa0              LDRB     r0,[r4,#0xa]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6912ledColorIdx_E
000018  7a61              LDRB     r1,[r4,#9]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da696ledID_E
00001a  f8552020          LDR      r2,[r5,r0,LSL #2]
00001e  a014              ADR      r0,|L15.112|
000020  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;931              HAL::SetLED(ledID_, LEDColorList_[ledColorIdx_]);
000024  7aa0              LDRB     r0,[r4,#0xa]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6912ledColorIdx_E
000026  f8551020          LDR      r1,[r5,r0,LSL #2]
00002a  7a60              LDRB     r0,[r4,#9]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da696ledID_E
00002c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
;;;932              
;;;933              // Increment led
;;;934              ledID_ = (LEDId)((u8)ledID_+1);
000030  7a60              LDRB     r0,[r4,#9]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da696ledID_E
000032  2100              MOVS     r1,#0
000034  1c40              ADDS     r0,r0,#1
000036  b2c0              UXTB     r0,r0
000038  7260              STRB     r0,[r4,#9]
;;;935              if (ledID_ == NUM_LEDS) {
00003a  2808              CMP      r0,#8
00003c  d110              BNE      |L15.96|
00003e  e007              B        |L15.80|
                  |L15.64|
000040  2300              MOVS     r3,#0                 ;923
000042  461a              MOV      r2,r3                 ;923
000044  4619              MOV      r1,r3                 ;923
000046  4618              MOV      r0,r3                 ;923
000048  f7fffffe          BL       _ZN4Anki5Cozmo18TestModeController5StartENS0_8TestModeEiii ; Anki::Cozmo::TestModeController::Start(Anki::Cozmo::TestMode, int, int, int)
00004c  2000              MOVS     r0,#0                 ;924
;;;936                ledID_ = (LEDId)0;
;;;937                
;;;938                // Increment color
;;;939                if (++ledColorIdx_ == LED_COLOR_LIST_SIZE) {
;;;940                  ledColorIdx_ = 0;
;;;941                }
;;;942              }
;;;943              
;;;944              ticCnt_ = 0;
;;;945            }
;;;946            
;;;947            return RESULT_OK;
;;;948          }
00004e  bd70              POP      {r4-r6,pc}
                  |L15.80|
000050  7261              STRB     r1,[r4,#9]            ;936
000052  7aa0              LDRB     r0,[r4,#0xa]          ;939  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6912ledColorIdx_E
000054  1c40              ADDS     r0,r0,#1              ;939
000056  b2c0              UXTB     r0,r0                 ;939
000058  72a0              STRB     r0,[r4,#0xa]          ;939
00005a  2803              CMP      r0,#3                 ;939
00005c  bf08              IT       EQ                    ;940
00005e  72a1              STRBEQ   r1,[r4,#0xa]          ;940
                  |L15.96|
000060  63e1              STR      r1,[r4,#0x3c]         ;944  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L15.98|
000062  2000              MOVS     r0,#0                 ;947
000064  bd70              POP      {r4-r6,pc}
;;;949    
                          ENDP

000066  0000              DCW      0x0000
                  |L15.104|
                          DCD      ||.data||
                  |L15.108|
                          DCD      ||.constdata||
                  |L15.112|
000070  4c454420          DCB      "LED channel %d, color 0x%x\n",0
000074  6368616e
000078  6e656c20
00007c  25642c20
000080  636f6c6f
000084  72203078
000088  25780a00

                          AREA ||i._ZN4Anki5Cozmo18TestModeController16DockPathTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController16DockPathTestInitEv PROC ; Anki::Cozmo::TestModeController::DockPathTestInit()
;;;329          // Commands a path and executes it
;;;330          Result DockPathTestInit()
000000  b510              PUSH     {r4,lr}
;;;331          {
;;;332            PRINT("\n==== Starting DockPathTest =====\n");
000002  a004              ADR      r0,|L16.20|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;333            ticCnt_ = 0;
000008  480b              LDR      r0,|L16.56|
00000a  2100              MOVS     r1,#0
;;;334            dockPathState_ = DT_STOP;
00000c  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000e  7101              STRB     r1,[r0,#4]
;;;335            return RESULT_OK;
000010  4608              MOV      r0,r1
;;;336          }
000012  bd10              POP      {r4,pc}
;;;337          
                          ENDP

                  |L16.20|
000014  0a3d3d3d          DCB      "\n==== Starting DockPathTest =====\n",0
000018  3d205374
00001c  61727469
000020  6e672044
000024  6f636b50
000028  61746854
00002c  65737420
000030  3d3d3d3d
000034  3d0a00  
000037  00                DCB      0
                  |L16.56|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController16MaxPowerTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController16MaxPowerTestInitEv PROC ; Anki::Cozmo::TestModeController::MaxPowerTestInit()
;;;1002   
;;;1003         Result MaxPowerTestInit()
000000  4904              LDR      r1,|L17.20|
;;;1004         {
000002  b510              PUSH     {r4,lr}
;;;1005           ticCnt_ = 0;
000004  2000              MOVS     r0,#0
;;;1006           
;;;1007           // Disable all controllers so that they can be overriden with HAL power commands
;;;1008           WheelController::Disable();
000006  63c8              STR      r0,[r1,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000008  f7fffffe          BL       _ZN4Anki5Cozmo15WheelController7DisableEv ; Anki::Cozmo::WheelController::Disable()
;;;1009           LiftController::Disable();
00000c  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController7DisableEv ; Anki::Cozmo::LiftController::Disable()
;;;1010           
;;;1011           return RESULT_OK;
000010  2000              MOVS     r0,#0
;;;1012         }
000012  bd10              POP      {r4,pc}
;;;1013         
                          ENDP

                  |L17.20|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController17FaceTrackTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController17FaceTrackTestInitEv PROC ; Anki::Cozmo::TestModeController::FaceTrackTestInit()
;;;1031         
;;;1032         Result FaceTrackTestInit()
000000  b510              PUSH     {r4,lr}
;;;1033         {
;;;1034           HeadController::SetDesiredAngle(0.1f);
000002  ed9f0a05          VLDR     s0,|L18.24|
000006  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController15SetDesiredAngleEf ; Anki::Cozmo::HeadController::SetDesiredAngle(float)
;;;1035           return FaceTrackingController::StartTracking(FaceTrackingController::CENTERED, 500);
00000a  e8bd4010          POP      {r4,lr}
00000e  f44f71fa          MOV      r1,#0x1f4
000012  2001              MOVS     r0,#1
000014  f7ffbffe          B.W      _ZN4Anki5Cozmo22FaceTrackingController13StartTrackingENS1_19FaceSelectionMethodEj ; Anki::Cozmo::FaceTrackingController::StartTracking(Anki::Cozmo::FaceTrackingController::FaceSelectionMethod, unsigned)
;;;1036         }
;;;1037         
                          ENDP

                  |L18.24|
000018  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612

                          AREA ||i._ZN4Anki5Cozmo18TestModeController17GripperTestUpdateEv||, CODE, READONLY, ALIGN=1

                  _ZN4Anki5Cozmo18TestModeController17GripperTestUpdateEv PROC ; Anki::Cozmo::TestModeController::GripperTestUpdate()
;;;875          
;;;876          Result GripperTestUpdate()
000000  2000              MOVS     r0,#0
;;;877          {
;;;878    #if defined(HAVE_ACTIVE_GRIPPER) && HAVE_ACTIVE_GRIPPER
;;;879            static bool up = false;
;;;880            
;;;881            // Change direction
;;;882            if (ticCnt_++ >= 4000 / TIME_STEP) {
;;;883              
;;;884              up = !up;
;;;885              if (up) {
;;;886                PRINT("Gripper ENGAGED\n");
;;;887                GripController::EngageGripper();
;;;888              } else {
;;;889                PRINT("Gripper DISENGAGED\n");
;;;890                GripController::DisengageGripper();
;;;891              }
;;;892              
;;;893              ticCnt_ = 0;
;;;894            }
;;;895    #endif
;;;896            return RESULT_OK;
;;;897          }
000002  4770              BX       lr
;;;898          
                          ENDP


                          AREA ||i._ZN4Anki5Cozmo18TestModeController18DockPathTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController18DockPathTestUpdateEv PROC ; Anki::Cozmo::TestModeController::DockPathTestUpdate()
;;;337          
;;;338          Result DockPathTestUpdate()
000000  b570              PUSH     {r4-r6,lr}
;;;339          {
;;;340            
;;;341            // Toggle dock path state
;;;342            if (ticCnt_++ >= DOCK_PATH_TOGGLE_TIME_S * ONE_OVER_CONTROL_DT ) {
000002  4c18              LDR      r4,|L20.100|
000004  6be0              LDR      r0,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000006  ee000a10          VMOV     s0,r0
00000a  1c41              ADDS     r1,r0,#1
00000c  63e1              STR      r1,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000e  eeb80a40          VCVT.F32.U32 s0,s0
000012  4915              LDR      r1,|L20.104|
000014  ee100a10          VMOV     r0,s0
000018  4288              CMP      r0,r1
00001a  db0b              BLT      |L20.52|
;;;343              if (dockPathState_ == DT_RIGHT) {
00001c  7920              LDRB     r0,[r4,#4]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914dockPathState_E
00001e  2500              MOVS     r5,#0
000020  2804              CMP      r0,#4
000022  bf1a              ITTE     NE
000024  1c40              ADDNE    r0,r0,#1
;;;344                dockPathState_ = DT_STOP;
;;;345              } else {
;;;346                dockPathState_++;
000026  7120              STRBNE   r0,[r4,#4]
000028  7125              STRBEQ   r5,[r4,#4]            ;344
;;;347              }
;;;348              PRINT("DOCKING TEST STATE: %d\n", dockPathState_);
00002a  7921              LDRB     r1,[r4,#4]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914dockPathState_E
00002c  a00f              ADR      r0,|L20.108|
00002e  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;349              ticCnt_ = 0;
000032  63e5              STR      r5,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L20.52|
;;;350            }
;;;351            
;;;352            switch(dockPathState_)
000034  7920              LDRB     r0,[r4,#4]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914dockPathState_E
;;;353            {
;;;354              case DT_STOP:
;;;355                break;
;;;356              case DT_STRAIGHT:
;;;357                DockingController::SetRelDockPose(200, 0, 0);
000036  eddf0a13          VLDR     s1,|L20.132|
00003a  ed9f0a13          VLDR     s0,|L20.136|
00003e  2805              CMP      r0,#5                 ;352
000040  d20e              BCS      |L20.96|
000042  e8dff000          TBB      [pc,r0]               ;352
000046  0d03              DCB      0x0d,0x03
000048  06030900          DCB      0x06,0x03,0x09,0x00
00004c  eeb01a60          VMOV.F32 s2,s1
;;;358                break;
000050  e004              B        |L20.92|
;;;359              case DT_LEFT:
;;;360                //DockingController::SetRelDockPose(200, 50, 0);
;;;361                DockingController::SetRelDockPose(200, 0, -0.1);
000052  ed9f1a0e          VLDR     s2,|L20.140|
;;;362                break;
000056  e001              B        |L20.92|
;;;363              case DT_STRAIGHT2:
;;;364                DockingController::SetRelDockPose(200, 0, 0);
;;;365                break;
;;;366              case DT_RIGHT:
;;;367                //DockingController::SetRelDockPose(200, -50, 0);
;;;368                DockingController::SetRelDockPose(200, 0, 0.1);
000058  ed9f1a0d          VLDR     s2,|L20.144|
                  |L20.92|
00005c  f7fffffe          BL       _ZN4Anki5Cozmo17DockingController14SetRelDockPoseEfff ; Anki::Cozmo::DockingController::SetRelDockPose(float, float, float)
                  |L20.96|
;;;369                break;
;;;370              default:
;;;371                break;
;;;372            }
;;;373            
;;;374            return RESULT_OK;
000060  2000              MOVS     r0,#0
;;;375          }
000062  bd70              POP      {r4-r6,pc}
;;;376    
                          ENDP

                  |L20.100|
                          DCD      ||.data||
                  |L20.104|
                          DCD      0x4415ffff
                  |L20.108|
00006c  444f434b          DCB      "DOCKING TEST STATE: %d\n",0
000070  494e4720
000074  54455354
000078  20535441
00007c  54453a20
000080  25640a00
                  |L20.132|
000084  00000000          DCFS     0x00000000 ; 0
                  |L20.136|
000088  43480000          DCFS     0x43480000 ; 200
                  |L20.140|
00008c  bdcccccd          DCFS     0xbdcccccd ; -0.10000000149011612
                  |L20.144|
000090  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612

                          AREA ||i._ZN4Anki5Cozmo18TestModeController18LiftToggleTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController18LiftToggleTestInitEv PROC ; Anki::Cozmo::TestModeController::LiftToggleTestInit()
;;;670          
;;;671          Result LiftToggleTestInit()
000000  b510              PUSH     {r4,lr}
;;;672          {
;;;673            PRINT("\n==== Starting LiftToggleTest =====\n");
000002  a004              ADR      r0,|L21.20|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;674            PRINT("!!! REMOVE JTAG CABLE !!!\n");
000008  480c              LDR      r0,|L21.60|
00000a  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;675            return RESULT_OK;
00000e  2000              MOVS     r0,#0
;;;676          }
000010  bd10              POP      {r4,pc}
;;;677          
                          ENDP

000012  0000              DCW      0x0000
                  |L21.20|
000014  0a3d3d3d          DCB      "\n==== Starting LiftToggleTest =====\n",0
000018  3d205374
00001c  61727469
000020  6e67204c
000024  69667454
000028  6f67676c
00002c  65546573
000030  74203d3d
000034  3d3d3d0a
000038  00      
000039  00                DCB      0
00003a  00                DCB      0
00003b  00                DCB      0
                  |L21.60|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController12LiftTestInitEv||+0x44

                          AREA ||i._ZN4Anki5Cozmo18TestModeController18MaxPowerTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController18MaxPowerTestUpdateEv PROC ; Anki::Cozmo::TestModeController::MaxPowerTestUpdate()
;;;1014         
;;;1015         Result MaxPowerTestUpdate()
000000  b510              PUSH     {r4,lr}
;;;1016         {
;;;1017           static f32 pwr = 1.0;
;;;1018           if (ticCnt_++ > 5000 / TIME_STEP) {
000002  4c12              LDR      r4,|L22.76|
000004  6be0              LDR      r0,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000006  1c41              ADDS     r1,r0,#1
000008  63e1              STR      r1,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000a  f5b07f7a          CMP      r0,#0x3e8
00000e  d91b              BLS      |L22.72|
;;;1019             PRINT("SWITCHING POWER: %f\n", pwr);
000010  6ba0              LDR      r0,[r4,#0x38]  ; pwr
000012  f7fffffe          BL       __aeabi_f2d
000016  ec410b10          VMOV     d0,r0,r1
00001a  a00d              ADR      r0,|L22.80|
00001c  ec532b10          VMOV     r2,r3,d0
000020  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;1020             HAL::MotorSetPower(HAL::MOTOR_LEFT_WHEEL, 1.0);
000024  eeb70a00          VMOV.F32 s0,#1.00000000
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorSetPowerENS1_7MotorIDEf ; Anki::Cozmo::HAL::MotorSetPower(Anki::Cozmo::HAL::MotorID, float)
;;;1021             HAL::MotorSetPower(HAL::MOTOR_RIGHT_WHEEL, 1.0);
00002e  eeb70a00          VMOV.F32 s0,#1.00000000
000032  2001              MOVS     r0,#1
000034  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorSetPowerENS1_7MotorIDEf ; Anki::Cozmo::HAL::MotorSetPower(Anki::Cozmo::HAL::MotorID, float)
;;;1022             //HAL::MotorSetPower(HAL::MOTOR_LIFT, pwr);
;;;1023             //HAL::MotorSetPower(HAL::MOTOR_HEAD, pwr);
;;;1024             //HAL::MotorSetPower(HAL::MOTOR_GRIP, pwr);
;;;1025             pwr *= -1;
000038  ed940a0e          VLDR     s0,[r4,#0x38]
;;;1026             ticCnt_ = 0;
00003c  2000              MOVS     r0,#0
00003e  eeb10a40          VNEG.F32 s0,s0                 ;1025
000042  ed840a0e          VSTR     s0,[r4,#0x38]         ;1025
000046  63e0              STR      r0,[r4,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
                  |L22.72|
;;;1027           }
;;;1028           return RESULT_OK;
000048  2000              MOVS     r0,#0
;;;1029         }
00004a  bd10              POP      {r4,pc}
;;;1030         
                          ENDP

                  |L22.76|
                          DCD      ||.data||
                  |L22.80|
000050  53574954          DCB      "SWITCHING POWER: %f\n",0
000054  4348494e
000058  4720504f
00005c  5745523a
000060  2025660a
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController18PathFollowTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController18PathFollowTestInitEv PROC ; Anki::Cozmo::TestModeController::PathFollowTestInit()
;;;379          // Commands a path and executes it
;;;380          Result PathFollowTestInit()
000000  b500              PUSH     {lr}
;;;381          {
000002  b083              SUB      sp,sp,#0xc
;;;382            PRINT("\n=== Starting PathFollowTest ===\n");
000004  a009              ADR      r0,|L23.44|
000006  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;383            pathStarted_ = false;
00000a  4911              LDR      r1,|L23.80|
00000c  2000              MOVS     r0,#0
;;;384            Localization::SetCurrentMatPose(0, 0, Radians(-PIDIV2_F));
00000e  ed9f0a11          VLDR     s0,|L23.84|
000012  7408              STRB     r0,[r1,#0x10]         ;383
000014  4668              MOV      r0,sp
000016  f7fffffe          BL       _ZN4Anki7RadiansC1Ef ; Anki::Radians::Radians(float)
00001a  ed9f0a0f          VLDR     s0,|L23.88|
00001e  eef00a40          VMOV.F32 s1,s0
000022  f7fffffe          BL       _ZN4Anki5Cozmo12Localization17SetCurrentMatPoseEffNS_7RadiansE ; Anki::Cozmo::Localization::SetCurrentMatPose(float, float, Anki::Radians)
;;;385            return RESULT_OK;
;;;386          }
000026  b003              ADD      sp,sp,#0xc
000028  2000              MOVS     r0,#0                 ;385
00002a  bd00              POP      {pc}
;;;387          
                          ENDP

                  |L23.44|
00002c  0a3d3d3d          DCB      "\n=== Starting PathFollowTest ===\n",0
000030  20537461
000034  7274696e
000038  67205061
00003c  7468466f
000040  6c6c6f77
000044  54657374
000048  203d3d3d
00004c  0a00    
00004e  00                DCB      0
00004f  00                DCB      0
                  |L23.80|
                          DCD      ||.data||
                  |L23.84|
000054  bfc90fdb          DCFS     0xbfc90fdb ; -1.5707963705062866
                  |L23.88|
000058  00000000          DCFS     0x00000000 ; 0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController19FaceTrackTestUpdateEv||, CODE, READONLY, ALIGN=1

                  _ZN4Anki5Cozmo18TestModeController19FaceTrackTestUpdateEv PROC ; Anki::Cozmo::TestModeController::FaceTrackTestUpdate()
;;;1037         
;;;1038         Result FaceTrackTestUpdate()
000000  2000              MOVS     r0,#0
;;;1039         {
;;;1040           return RESULT_OK;
;;;1041         }
000002  4770              BX       lr
;;;1042         
                          ENDP


                          AREA ||i._ZN4Anki5Cozmo18TestModeController20LiftToggleTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController20LiftToggleTestUpdateEv PROC ; Anki::Cozmo::TestModeController::LiftToggleTestUpdate()
;;;678          
;;;679          Result LiftToggleTestUpdate()
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;680          {
000004  b082              SUB      sp,sp,#8
;;;681    
;;;682            static f32 liftHeight = LIFT_HEIGHT_LOWDOCK;
;;;683            static u32 inPositionCycles = 0;
;;;684            
;;;685            if (LiftController::IsInPosition()) {
000006  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController12IsInPositionEv ; Anki::Cozmo::LiftController::IsInPosition()
00000a  2700              MOVS     r7,#0
;;;686              if (inPositionCycles++ > 500) {
00000c  4e2b              LDR      r6,|L25.188|
00000e  2800              CMP      r0,#0                 ;685
000010  d031              BEQ      |L25.118|
000012  6b70              LDR      r0,[r6,#0x34]  ; inPositionCycles
000014  1c41              ADDS     r1,r0,#1
000016  6371              STR      r1,[r6,#0x34]  ; inPositionCycles
000018  f5b07ffa          CMP      r0,#0x1f4
00001c  d92b              BLS      |L25.118|
;;;687                
;;;688                if(liftHeight == LIFT_HEIGHT_LOWDOCK) {
00001e  6b30              LDR      r0,[r6,#0x30]  ; liftHeight
000020  f1a04180          SUB      r1,r0,#0x40000000
000024  f1b171dc          SUBS     r1,r1,#0x1b80000
;;;689                  liftHeight = LIFT_HEIGHT_CARRY;
000028  bf04              ITT      EQ
00002a  ed9f0a25          VLDREQ   s0,|L25.192|
00002e  ed860a0c          VSTREQ   s0,[r6,#0x30]
000032  d011              BEQ      |L25.88|
;;;690                } else if (liftHeight == LIFT_HEIGHT_CARRY) {
000034  f1a04184          SUB      r1,r0,#0x42000000
000038  f5b1013e          SUBS     r1,r1,#0xbe0000
;;;691                  liftHeight = LIFT_HEIGHT_HIGHDOCK;
00003c  bf08              IT       EQ
00003e  ed9f0a21          VLDREQ   s0,|L25.196|
000042  d007              BEQ      |L25.84|
;;;692                } else if (liftHeight == LIFT_HEIGHT_HIGHDOCK) {
000044  f1a04184          SUB      r1,r0,#0x42000000
000048  f5b10116          SUBS     r1,r1,#0x960000
;;;693                  liftHeight = LIFT_HEIGHT_LOWDOCK;
00004c  bf08              IT       EQ
00004e  eeb30a07          VMOVEQ.F32 s0,#23.00000000
000052  d101              BNE      |L25.88|
                  |L25.84|
000054  ed860a0c          VSTR     s0,[r6,#0x30]
                  |L25.88|
;;;694                }
;;;695              
;;;696                PRINT("SET LIFT TO %f mm\n", liftHeight);
000058  6b30              LDR      r0,[r6,#0x30]  ; liftHeight
00005a  f7fffffe          BL       __aeabi_f2d
00005e  ec410b10          VMOV     d0,r0,r1
000062  a019              ADR      r0,|L25.200|
000064  ec532b10          VMOV     r2,r3,d0
000068  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;697                LiftController::SetDesiredHeight(liftHeight);
00006c  ed960a0c          VLDR     s0,[r6,#0x30]
000070  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController16SetDesiredHeightEf ; Anki::Cozmo::LiftController::SetDesiredHeight(float)
;;;698                inPositionCycles = 0;
000074  6377              STR      r7,[r6,#0x34]  ; inPositionCycles
                  |L25.118|
;;;699              }
;;;700            }
;;;701    
;;;702    
;;;703            // Print height and speed
;;;704            if (ticCnt2_++ >= 200 / TIME_STEP) {
000076  6c30              LDR      r0,[r6,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
000078  1c41              ADDS     r1,r0,#1
00007a  6431              STR      r1,[r6,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
00007c  2828              CMP      r0,#0x28
00007e  d319              BCC      |L25.180|
;;;705              f32 lSpeed = HAL::MotorGetSpeed(HAL::MOTOR_LIFT);
000080  2002              MOVS     r0,#2
000082  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13MotorGetSpeedENS1_7MotorIDE ; Anki::Cozmo::HAL::MotorGetSpeed(Anki::Cozmo::HAL::MotorID)
000086  ee108a10          VMOV     r8,s0
;;;706              f32 lPos = LiftController::GetHeightMM();
00008a  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController11GetHeightMMEv ; Anki::Cozmo::LiftController::GetHeightMM()
00008e  ee100a10          VMOV     r0,s0
;;;707              
;;;708              PRINT("Lift speed %f rad/s, height %f mm\n", lSpeed, lPos);
000092  f7fffffe          BL       __aeabi_f2d
000096  4604              MOV      r4,r0
000098  460d              MOV      r5,r1
00009a  4640              MOV      r0,r8
00009c  f7fffffe          BL       __aeabi_f2d
0000a0  ec410b10          VMOV     d0,r0,r1
0000a4  a00d              ADR      r0,|L25.220|
0000a6  ec532b10          VMOV     r2,r3,d0
0000aa  e9cd4500          STRD     r4,r5,[sp,#0]
0000ae  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;709              ticCnt2_ = 0;
0000b2  6437              STR      r7,[r6,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
                  |L25.180|
;;;710            }
;;;711    
;;;712    
;;;713            
;;;714            return RESULT_OK;
;;;715          }
0000b4  b002              ADD      sp,sp,#8
0000b6  2000              MOVS     r0,#0                 ;714
0000b8  e8bd81f0          POP      {r4-r8,pc}
;;;716          
                          ENDP

                  |L25.188|
                          DCD      ||.data||
                  |L25.192|
0000c0  42be0000          DCFS     0x42be0000 ; 95
                  |L25.196|
0000c4  42960000          DCFS     0x42960000 ; 75
                  |L25.200|
0000c8  53455420          DCB      "SET LIFT TO %f mm\n",0
0000cc  4c494654
0000d0  20544f20
0000d4  2566206d
0000d8  6d0a00  
0000db  00                DCB      0
                  |L25.220|
0000dc  4c696674          DCB      "Lift speed %f rad/s, height %f mm\n",0
0000e0  20737065
0000e4  65642025
0000e8  66207261
0000ec  642f732c
0000f0  20686569
0000f4  67687420
0000f8  2566206d
0000fc  6d0a00  
0000ff  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController20PathFollowTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController20PathFollowTestUpdateEv PROC ; Anki::Cozmo::TestModeController::PathFollowTestUpdate()
;;;387          
;;;388          Result PathFollowTestUpdate()
000000  b530              PUSH     {r4,r5,lr}
;;;389          {
;;;390            const u32 startDriveTime_us = 500000;
;;;391            if (!pathStarted_ && HAL::GetMicroCounter() > startDriveTime_us) {
000002  4c75              LDR      r4,|L26.472|
000004  4d73              LDR      r5,|L26.468|
000006  ed2d8b0c          VPUSH    {d8-d13}              ;389
00000a  b083              SUB      sp,sp,#0xc            ;389
00000c  7c20              LDRB     r0,[r4,#0x10]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6912pathStarted_E
00000e  2800              CMP      r0,#0
000010  d17e              BNE      |L26.272|
000012  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15GetMicroCounterEv ; Anki::Cozmo::HAL::GetMicroCounter()
000016  42a8              CMP      r0,r5
000018  d97a              BLS      |L26.272|
;;;392              
;;;393              // Create a path and follow it
;;;394              PathFollower::ClearPath();
00001a  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower9ClearPathEv ; Anki::Cozmo::PathFollower::ClearPath()
;;;395    #if(PATH_FOLLOW_ALIGNED_START)
;;;396              Localization::SetCurrentMatPose(0, 0, PIDIV2_F * (PATH_FOLLOW_BACKWARDS ? 1 : -1));
00001e  ed9f0a6f          VLDR     s0,|L26.476|
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       _ZN4Anki7RadiansC1Ef ; Anki::Radians::Radians(float)
000028  ed9fba6d          VLDR     s22,|L26.480|
00002c  eeb00a4b          VMOV.F32 s0,s22
000030  eef00a40          VMOV.F32 s1,s0
000034  f7fffffe          BL       _ZN4Anki5Cozmo12Localization17SetCurrentMatPoseEffNS_7RadiansE ; Anki::Cozmo::Localization::SetCurrentMatPose(float, float, Anki::Radians)
000038  eddf8a6a          VLDR     s17,|L26.484|
;;;397              
;;;398              //PathFollower::AppendPathSegment_PointTurn(0, 0, 0, -PIDIV2_F, -1.5f, 2.f, 2.f);
;;;399              
;;;400              float arc1_radius = sqrt((float)5000);  // Radius of sqrt(50^2 + 50^2)
;;;401              f32 sweepAng = atan_fast((350-arc1_radius)/250);
00003c  ed9fda6a          VLDR     s26,|L26.488|
000040  ed9fca6a          VLDR     s24,|L26.492|
000044  eddfca6a          VLDR     s25,|L26.496|
000048  ed9f0a6a          VLDR     s0,|L26.500|
00004c  f7fffffe          BL       _Z9atan_fastf ; atan_fast(float)
000050  eeb08a40          VMOV.F32 s16,s0
;;;402              
;;;403              PathFollower::AppendPathSegment_Arc(0, arc1_radius, 0, arc1_radius, -PI, sweepAng,
000054  ed9faa68          VLDR     s20,|L26.504|
000058  eef03a4a          VMOV.F32 s7,s20
00005c  eddf9a67          VLDR     s19,|L26.508|
000060  eeb03a69          VMOV.F32 s6,s19
000064  eddfaa66          VLDR     s21,|L26.512|
000068  eeb02a48          VMOV.F32 s4,s16
00006c  eef02a6a          VMOV.F32 s5,s21
000070  eddfba64          VLDR     s23,|L26.516|
000074  eeb01a68          VMOV.F32 s2,s17
000078  eef00a4b          VMOV.F32 s1,s22
00007c  eef01a6b          VMOV.F32 s3,s23
000080  eeb00a68          VMOV.F32 s0,s17
000084  2000              MOVS     r0,#0
000086  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower21AppendPathSegment_ArcEjffffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Arc(unsigned, float, float, float, float, float, float, float, float)
;;;404                                                  PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;405              
;;;406              f32 firstConnectionPt_x = arc1_radius - arc1_radius*cos(sweepAng);
00008a  eeb00a48          VMOV.F32 s0,s16
00008e  f7fffffe          BL       __hardfp_cosf
000092  eeb09a68          VMOV.F32 s18,s17
000096  ee089ac0          VMLS.F32 s18,s17,s0
;;;407              f32 firstConnectionPt_y = - arc1_radius*sin(sweepAng);
00009a  eeb00a48          VMOV.F32 s0,s16
00009e  f7fffffe          BL       __hardfp_sinf
0000a2  eddf0a59          VLDR     s1,|L26.520|
;;;408              f32 secondConnectionPt_x = firstConnectionPt_x + (350 - arc1_radius);
0000a6  ee3c1a09          VADD.F32 s2,s24,s18
;;;409              f32 secondConnectionPt_y = firstConnectionPt_y - 250;
;;;410              
;;;411              PathFollower::AppendPathSegment_Line(0, firstConnectionPt_x, firstConnectionPt_y, secondConnectionPt_x, secondConnectionPt_y,
0000aa  eeb03a4a          VMOV.F32 s6,s20
0000ae  ee600a20          VMUL.F32 s1,s0,s1              ;407
0000b2  eef02a69          VMOV.F32 s5,s19
0000b6  eeb02a6a          VMOV.F32 s4,s21
0000ba  eeb00a49          VMOV.F32 s0,s18
0000be  ee701aec          VSUB.F32 s3,s1,s25             ;409
0000c2  2000              MOVS     r0,#0
0000c4  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower22AppendPathSegment_LineEjfffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Line(unsigned, float, float, float, float, float, float, float)
;;;412                                                   PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;413              
;;;414              PathFollower::AppendPathSegment_Arc(0, 350, -250, arc1_radius, -PI + sweepAng, PI - sweepAng,
0000c8  ed9f9a50          VLDR     s18,|L26.524|
0000cc  ee781a2b          VADD.F32 s3,s16,s23
0000d0  eef03a4a          VMOV.F32 s7,s20
0000d4  ee392a48          VSUB.F32 s4,s18,s16
0000d8  eeb03a69          VMOV.F32 s6,s19
0000dc  eef02a6a          VMOV.F32 s5,s21
0000e0  eeb01a68          VMOV.F32 s2,s17
0000e4  ed9f8a4a          VLDR     s16,|L26.528|
0000e8  eeb00a4d          VMOV.F32 s0,s26
0000ec  2000              MOVS     r0,#0
0000ee  eef00a48          VMOV.F32 s1,s16
0000f2  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower21AppendPathSegment_ArcEjffffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Arc(unsigned, float, float, float, float, float, float, float, float)
;;;415                                                  PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;416    #else
;;;417              PathFollower::AppendPathSegment_Line(0, 0.0, 0.0, 300, -300,
;;;418                                                   PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;419              float arc1_radius = sqrt((float)5000);  // Radius of sqrt(50^2 + 50^2)
;;;420              PathFollower::AppendPathSegment_Arc(0, 350, -250, arc1_radius, -0.75f*PI, 0.75f*PI,
;;;421                                                  PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;422    #endif
;;;423              PathFollower::AppendPathSegment_Line(0, 350 + arc1_radius, -250, 350 + arc1_radius, 200,
0000f6  ed9f0a47          VLDR     s0,|L26.532|
0000fa  eeb03a4a          VMOV.F32 s6,s20
0000fe  eef02a69          VMOV.F32 s5,s19
000102  eeb02a6a          VMOV.F32 s4,s21
000106  eef01a69          VMOV.F32 s3,s19
00010a  eeb01a40          VMOV.F32 s2,s0
00010e  e000              B        |L26.274|
                  |L26.272|
000110  e05a              B        |L26.456|
                  |L26.274|
000112  eef00a48          VMOV.F32 s1,s16
000116  2000              MOVS     r0,#0
000118  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower22AppendPathSegment_LineEjfffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Line(unsigned, float, float, float, float, float, float, float)
00011c  ed9f8a3e          VLDR     s16,|L26.536|
;;;424                                                   PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;425              float arc2_radius = sqrt((float)20000); // Radius of sqrt(100^2 + 100^2)
;;;426              //PathFollower::AppendPathSegment_Arc(0, 0.35 + arc1_radius - arc2_radius, 0.2, arc2_radius, 0, PIDIV2);
;;;427              PathFollower::AppendPathSegment_Arc(0, 350 + arc1_radius - arc2_radius, 200, arc2_radius, 0, 3*PIDIV2,
000120  eddfba3e          VLDR     s23,|L26.540|
000124  eef03a4a          VMOV.F32 s7,s20
000128  eeb03a69          VMOV.F32 s6,s19
00012c  eeb00a6b          VMOV.F32 s0,s23
000130  eef02a6a          VMOV.F32 s5,s21
000134  ed9f2a3a          VLDR     s4,|L26.544|
000138  eef01a4b          VMOV.F32 s3,s22
00013c  eeb01a48          VMOV.F32 s2,s16
000140  eef00a69          VMOV.F32 s1,s19
000144  2000              MOVS     r0,#0
000146  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower21AppendPathSegment_ArcEjffffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Arc(unsigned, float, float, float, float, float, float, float, float)
;;;428                                                  PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;429              PathFollower::AppendPathSegment_Arc(0, 350 + arc1_radius - arc2_radius, 200 - 2*arc2_radius, arc2_radius, PIDIV2, -3*PIDIV2,
00014a  eddf8a36          VLDR     s17,|L26.548|
00014e  eeb00a6b          VMOV.F32 s0,s23
000152  eef03a4a          VMOV.F32 s7,s20
000156  eef00a68          VMOV.F32 s1,s17
00015a  eeb03a69          VMOV.F32 s6,s19
00015e  eef02a6a          VMOV.F32 s5,s21
000162  ed9f2a31          VLDR     s4,|L26.552|
000166  eddf1a31          VLDR     s3,|L26.556|
00016a  eeb01a48          VMOV.F32 s2,s16
00016e  2000              MOVS     r0,#0
000170  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower21AppendPathSegment_ArcEjffffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Arc(unsigned, float, float, float, float, float, float, float, float)
;;;430                                                  PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;431              
;;;432              PathFollower::AppendPathSegment_Line(0, 350 + arc1_radius - 2*arc2_radius, 200 - 2*arc2_radius, 350 + arc1_radius - 2*arc2_radius, 0,
000174  ed9f0a2e          VLDR     s0,|L26.560|
000178  eef00a68          VMOV.F32 s1,s17
00017c  eeb03a4a          VMOV.F32 s6,s20
000180  eef02a69          VMOV.F32 s5,s19
000184  eeb02a6a          VMOV.F32 s4,s21
000188  eef01a4b          VMOV.F32 s3,s22
00018c  eeb01a40          VMOV.F32 s2,s0
000190  2000              MOVS     r0,#0
000192  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower22AppendPathSegment_LineEjfffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Line(unsigned, float, float, float, float, float, float, float)
;;;433                                                   PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;434              float arc3_radius = 0.5f * (350 + arc1_radius - 2*arc2_radius);
000196  ed9f0a27          VLDR     s0,|L26.564|
;;;435              PathFollower::AppendPathSegment_Arc(0, arc3_radius, 0, arc3_radius, 0, PI_F,
00019a  eef03a4a          VMOV.F32 s7,s20
00019e  eeb03a69          VMOV.F32 s6,s19
0001a2  eef02a6a          VMOV.F32 s5,s21
0001a6  eeb02a49          VMOV.F32 s4,s18
0001aa  eef01a4b          VMOV.F32 s3,s22
0001ae  eeb01a40          VMOV.F32 s2,s0
0001b2  eef00a4b          VMOV.F32 s1,s22
0001b6  2000              MOVS     r0,#0
0001b8  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower21AppendPathSegment_ArcEjffffffff ; Anki::Cozmo::PathFollower::AppendPathSegment_Arc(unsigned, float, float, float, float, float, float, float, float)
;;;436                                                  PF_TARGET_SPEED_MMPS, PF_ACCEL_MMPS2, PF_DECEL_MMPS2);
;;;437              
;;;438              
;;;439              PathFollower::StartPathTraversal();
0001bc  2100              MOVS     r1,#0
0001be  4608              MOV      r0,r1
0001c0  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower18StartPathTraversalEtb ; Anki::Cozmo::PathFollower::StartPathTraversal(unsigned short, bool)
;;;440              pathStarted_ = true;
0001c4  2001              MOVS     r0,#1
0001c6  7420              STRB     r0,[r4,#0x10]
                  |L26.456|
;;;441            }
;;;442            
;;;443            return RESULT_OK;
;;;444          }
0001c8  b003              ADD      sp,sp,#0xc
0001ca  2000              MOVS     r0,#0                 ;443
0001cc  ecbd8b0c          VPOP     {d8-d13}
0001d0  bd30              POP      {r4,r5,pc}
;;;445          
                          ENDP

0001d2  0000              DCW      0x0000
                  |L26.468|
                          DCD      0x0007a120
                  |L26.472|
                          DCD      ||.data||
                  |L26.476|
0001dc  bfc90fdb          DCFS     0xbfc90fdb ; -1.5707963705062866
                  |L26.480|
0001e0  00000000          DCFS     0x00000000 ; 0
                  |L26.484|
0001e4  428d6bde          DCFS     0x428d6bde ; 70.710678100585938
                  |L26.488|
0001e8  43af0000          DCFS     0x43af0000 ; 350
                  |L26.492|
0001ec  438ba508          DCFS     0x438ba508 ; 279.289306640625
                  |L26.496|
0001f0  437a0000          DCFS     0x437a0000 ; 250
                  |L26.500|
0001f4  3f8eff02          DCFS     0x3f8eff02 ; 1.1171572208404541
                  |L26.504|
0001f8  43fa0000          DCFS     0x43fa0000 ; 500
                  |L26.508|
0001fc  43480000          DCFS     0x43480000 ; 200
                  |L26.512|
000200  42c80000          DCFS     0x42c80000 ; 100
                  |L26.516|
000204  c0490fdb          DCFS     0xc0490fdb ; -3.1415927410125732
                  |L26.520|
000208  c28d6bde          DCFS     0xc28d6bde ; -70.710678100585938
                  |L26.524|
00020c  40490fdb          DCFS     0x40490fdb ; 3.1415927410125732
                  |L26.528|
000210  c37a0000          DCFS     0xc37a0000 ; -250
                  |L26.532|
000214  43d25af8          DCFS     0x43d25af8 ; 420.710693359375
                  |L26.536|
000218  430d6bde          DCFS     0x430d6bde ; 141.42135620117188
                  |L26.540|
00021c  438ba509          DCFS     0x438ba509 ; 279.28933715820312
                  |L26.544|
000220  4096cbe4          DCFS     0x4096cbe4 ; 4.7123889923095703
                  |L26.548|
000224  c2a5af78          DCFS     0xc2a5af78 ; -82.84271240234375
                  |L26.552|
000228  c096cbe4          DCFS     0xc096cbe4 ; -4.7123889923095703
                  |L26.556|
00022c  3fc90fdb          DCFS     0x3fc90fdb ; 1.5707963705062866
                  |L26.560|
000230  4309de34          DCFS     0x4309de34 ; 137.86798095703125
                  |L26.564|
000234  4289de34          DCFS     0x4289de34 ; 68.933990478515625

                          AREA ||i._ZN4Anki5Cozmo18TestModeController20PickAndPlaceTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController20PickAndPlaceTestInitEv PROC ; Anki::Cozmo::TestModeController::PickAndPlaceTestInit()
;;;268          
;;;269          Result PickAndPlaceTestInit()
000000  b510              PUSH     {r4,lr}
;;;270          {
;;;271            PRINT("\n==== Starting PickAndPlaceTest =====\n");
000002  a004              ADR      r0,|L27.20|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;272            ticCnt_ = 0;
000008  480c              LDR      r0,|L27.60|
00000a  2100              MOVS     r1,#0
;;;273            pickAndPlaceState_ = PAP_WAITING_FOR_PICKUP_BLOCK;
00000c  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00000e  7181              STRB     r1,[r0,#6]
;;;274            return RESULT_OK;
000010  4608              MOV      r0,r1
;;;275          }
000012  bd10              POP      {r4,pc}
;;;276          
                          ENDP

                  |L27.20|
000014  0a3d3d3d          DCB      "\n==== Starting PickAndPlaceTest =====\n",0
000018  3d205374
00001c  61727469
000020  6e672050
000024  69636b41
000028  6e64506c
00002c  61636554
000030  65737420
000034  3d3d3d3d
000038  3d0a00  
00003b  00                DCB      0
                  |L27.60|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController22PickAndPlaceTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController22PickAndPlaceTestUpdateEv PROC ; Anki::Cozmo::TestModeController::PickAndPlaceTestUpdate()
;;;276          
;;;277          Result PickAndPlaceTestUpdate()
000000  b570              PUSH     {r4-r6,lr}
;;;278          {
;;;279            switch(pickAndPlaceState_)
000002  4c29              LDR      r4,|L28.168|
000004  ed2d8b02          VPUSH    {d8}                  ;278
000008  79a0              LDRB     r0,[r4,#6]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6918pickAndPlaceState_E
00000a  b178              CBZ      r0,|L28.44|
00000c  2500              MOVS     r5,#0                 ;278
;;;280            {
;;;281              case PAP_WAITING_FOR_PICKUP_BLOCK:
;;;282              {
;;;283                PRINT("PAPT: Docking to block %d\n", BLOCK_TO_PICK_UP);
;;;284                PickAndPlaceController::DockToBlock(BLOCK_TO_PICK_UP, Vision::MARKER_UNKNOWN, BLOCK_MARKER_WIDTH, useManualSpeed_, PICKUP_ACTION);
;;;285                pickAndPlaceState_ = PAP_DOCKING;
;;;286                break;
;;;287              }
;;;288              case PAP_DOCKING:
;;;289                if (!PickAndPlaceController::IsBusy()) {
;;;290                  if (PickAndPlaceController::DidLastActionSucceed()) {
;;;291                    if (PICKUP_ACTION == DA_PICKUP_LOW) {
;;;292                      PRINT("PAPT: Placing on other block %d\n", BLOCK_TO_PLACE_ON);
;;;293                      PickAndPlaceController::DockToBlock(BLOCK_TO_PLACE_ON, Vision::MARKER_UNKNOWN, BLOCK_MARKER_WIDTH, useManualSpeed_, DA_PLACE_HIGH);
;;;294                    } else {
;;;295                      PRINT("PAPT: Placing on ground\n");
;;;296                      PickAndPlaceController::PlaceOnGround(PLACE_ON_GROUND_DIST_X, PLACE_ON_GROUND_DIST_Y, PLACE_ON_GROUND_DIST_ANG, false);
00000e  ed9f8a27          VLDR     s16,|L28.172|
000012  eddf8a27          VLDR     s17,|L28.176|
000016  2802              CMP      r0,#2                 ;279
000018  d016              BEQ      |L28.72|
00001a  2803              CMP      r0,#3                 ;279
00001c  d02d              BEQ      |L28.122|
;;;297                    }
;;;298                    pickAndPlaceState_ = PAP_PLACING;
;;;299                  } else {
;;;300                    pickAndPlaceState_ = PAP_WAITING_FOR_PICKUP_BLOCK;
;;;301                  }
;;;302                }
;;;303                break;
;;;304              case PAP_PLACING:
;;;305                if (!PickAndPlaceController::IsBusy()) {
;;;306                  if (PickAndPlaceController::DidLastActionSucceed()) {
;;;307                    PRINT("PAPT: Success\n");
;;;308                    pickAndPlaceState_ = PAP_WAITING_FOR_PICKUP_BLOCK;
;;;309                  } else {
;;;310                    if (PICKUP_ACTION == DA_PICKUP_LOW) {
;;;311                      PickAndPlaceController::DockToBlock(BLOCK_TO_PLACE_ON, Vision::MARKER_UNKNOWN, BLOCK_MARKER_WIDTH, useManualSpeed_, DA_PLACE_HIGH);
;;;312                      //pickAndPlaceState_ = PAP_PLACING;
;;;313                    } else {
;;;314                      PickAndPlaceController::PlaceOnGround(PLACE_ON_GROUND_DIST_X, PLACE_ON_GROUND_DIST_Y, PLACE_ON_GROUND_DIST_ANG, false);
;;;315                    }
;;;316                  }
;;;317                }
;;;318                break;
;;;319              default:
;;;320                PRINT("WTF?\n");
00001e  a025              ADR      r0,|L28.180|
000020  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
                  |L28.36|
;;;321                break;
;;;322            }
;;;323            return RESULT_OK;
;;;324          }
000024  ecbd8b02          VPOP     {d8}
000028  2000              MOVS     r0,#0                 ;323
00002a  bd70              POP      {r4-r6,pc}
                  |L28.44|
00002c  2162              MOVS     r1,#0x62              ;283
00002e  a023              ADR      r0,|L28.188|
000030  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000034  2301              MOVS     r3,#1                 ;284
000036  79e2              LDRB     r2,[r4,#7]            ;284  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915useManualSpeed_E
000038  eeb30a09          VMOV.F32 s0,#25.00000000       ;284
00003c  21fd              MOVS     r1,#0xfd              ;284
00003e  2062              MOVS     r0,#0x62              ;284
000040  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController11DockToBlockENS_6Vision10MarkerTypeES3_fbNS0_12DockAction_tE ; Anki::Cozmo::PickAndPlaceController::DockToBlock(Anki::Vision::MarkerType, Anki::Vision::MarkerType, float, bool, Anki::Cozmo::DockAction_t)
000044  2002              MOVS     r0,#2                 ;285
000046  e016              B        |L28.118|
                  |L28.72|
000048  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController6IsBusyEv ; Anki::Cozmo::PickAndPlaceController::IsBusy()
00004c  2800              CMP      r0,#0                 ;289
00004e  d1e9              BNE      |L28.36|
000050  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController20DidLastActionSucceedEv ; Anki::Cozmo::PickAndPlaceController::DidLastActionSucceed()
000054  2800              CMP      r0,#0                 ;290
000056  bf08              IT       EQ                    ;300
000058  71a5              STRBEQ   r5,[r4,#6]            ;300
00005a  d0e3              BEQ      |L28.36|
00005c  a01e              ADR      r0,|L28.216|
00005e  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000062  2000              MOVS     r0,#0                 ;296
000064  eeb01a48          VMOV.F32 s2,s16                ;296
000068  eefa0a04          VMOV.F32 s1,#-10.00000000      ;296
00006c  eeb00a68          VMOV.F32 s0,s17                ;296
000070  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController13PlaceOnGroundEfffb ; Anki::Cozmo::PickAndPlaceController::PlaceOnGround(float, float, float, bool)
000074  2003              MOVS     r0,#3                 ;298
                  |L28.118|
000076  71a0              STRB     r0,[r4,#6]            ;298
000078  e7d4              B        |L28.36|
                  |L28.122|
00007a  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController6IsBusyEv ; Anki::Cozmo::PickAndPlaceController::IsBusy()
00007e  2800              CMP      r0,#0                 ;305
000080  d1d0              BNE      |L28.36|
000082  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController20DidLastActionSucceedEv ; Anki::Cozmo::PickAndPlaceController::DidLastActionSucceed()
000086  b120              CBZ      r0,|L28.146|
000088  a01a              ADR      r0,|L28.244|
00008a  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
00008e  71a5              STRB     r5,[r4,#6]            ;308
000090  e7c8              B        |L28.36|
                  |L28.146|
000092  2000              MOVS     r0,#0                 ;314
000094  eeb01a48          VMOV.F32 s2,s16                ;314
000098  eefa0a04          VMOV.F32 s1,#-10.00000000      ;314
00009c  eeb00a68          VMOV.F32 s0,s17                ;314
0000a0  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController13PlaceOnGroundEfffb ; Anki::Cozmo::PickAndPlaceController::PlaceOnGround(float, float, float, bool)
0000a4  e7be              B        |L28.36|
;;;325    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L28.168|
                          DCD      ||.data||
                  |L28.172|
0000ac  00000000          DCFS     0x00000000 ; 0
                  |L28.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L28.180|
0000b4  5754463f          DCB      "WTF?\n",0
0000b8  0a00    
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L28.188|
0000bc  50415054          DCB      "PAPT: Docking to block %d\n",0
0000c0  3a20446f
0000c4  636b696e
0000c8  6720746f
0000cc  20626c6f
0000d0  636b2025
0000d4  640a00  
0000d7  00                DCB      0
                  |L28.216|
0000d8  50415054          DCB      "PAPT: Placing on ground\n",0
0000dc  3a20506c
0000e0  6163696e
0000e4  67206f6e
0000e8  2067726f
0000ec  756e640a
0000f0  00      
0000f1  00                DCB      0
0000f2  00                DCB      0
0000f3  00                DCB      0
                  |L28.244|
0000f4  50415054          DCB      "PAPT: Success\n",0
0000f8  3a205375
0000fc  63636573
000100  730a00  
000103  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController33PathFollowConvenienceFuncTestInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController33PathFollowConvenienceFuncTestInitEv PROC ; Anki::Cozmo::TestModeController::PathFollowConvenienceFuncTestInit()
;;;448          
;;;449          Result PathFollowConvenienceFuncTestInit()
000000  b510              PUSH     {r4,lr}
;;;450          {
;;;451            PRINT("\n=== Starting PathFollowConvenienceFuncTest ===\n");
000002  a004              ADR      r0,|L29.20|
000004  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;452            PathFollower::ClearPath();
000008  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower9ClearPathEv ; Anki::Cozmo::PathFollower::ClearPath()
;;;453            pfcfState_ = PFCF_DRIVE_STRAIGHT;
00000c  490e              LDR      r1,|L29.72|
00000e  2000              MOVS     r0,#0
000010  7148              STRB     r0,[r1,#5]
;;;454            return RESULT_OK;
;;;455          }
000012  bd10              POP      {r4,pc}
;;;456          
                          ENDP

                  |L29.20|
000014  0a3d3d3d          DCB      "\n=== Starting PathFollowConvenienceFuncTest ===\n",0
000018  20537461
00001c  7274696e
000020  67205061
000024  7468466f
000028  6c6c6f77
00002c  436f6e76
000030  656e6965
000034  6e636546
000038  756e6354
00003c  65737420
000040  3d3d3d0a
000044  00      
000045  00                DCB      0
000046  00                DCB      0
000047  00                DCB      0
                  |L29.72|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController35PathFollowConvenienceFuncTestUpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController35PathFollowConvenienceFuncTestUpdateEv PROC ; Anki::Cozmo::TestModeController::PathFollowConvenienceFuncTestUpdate()
;;;456          
;;;457          Result PathFollowConvenienceFuncTestUpdate()
000000  b510              PUSH     {r4,lr}
;;;458          {
000002  ed2d8b02          VPUSH    {d8}
;;;459    
;;;460            
;;;461            // Cycle through DriveStraight, DriveArc, and PointTurn
;;;462            if (!PathFollower::IsTraversingPath()) {
000006  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower16IsTraversingPathEv ; Anki::Cozmo::PathFollower::IsTraversingPath()
00000a  2800              CMP      r0,#0
00000c  d14c              BNE      |L30.168|
;;;463              
;;;464              switch(pfcfState_) {
00000e  4c2c              LDR      r4,|L30.192|
000010  7960              LDRB     r0,[r4,#5]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910pfcfState_E
000012  b130              CBZ      r0,|L30.34|
;;;465                case PFCF_DRIVE_STRAIGHT:
;;;466                  PRINT("TM: DriveStraight\n");
;;;467                  if (!PathFollower::DriveStraight(100, 0.25, 0.25, 2)) {
;;;468                    PRINT("TM: DriveStraight failed\n");
;;;469                    return RESULT_FAIL;
;;;470                  }
;;;471                  break;
;;;472                  
;;;473                case PFCF_DRIVE_ARC:
;;;474                  PRINT("TM: DriveArc\n");
;;;475                  if (!PathFollower::DriveArc(-PIDIV2_F, 40, 0.25, 0.25, 1)) {
000014  ed9f8a2b          VLDR     s16,|L30.196|
000018  2801              CMP      r0,#1                 ;464
00001a  d018              BEQ      |L30.78|
00001c  2802              CMP      r0,#2                 ;464
00001e  d02d              BEQ      |L30.124|
000020  e03a              B        |L30.152|
                  |L30.34|
000022  a029              ADR      r0,|L30.200|
000024  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000028  eef01a00          VMOV.F32 s3,#2.00000000        ;467
00002c  eeb51a00          VMOV.F32 s2,#0.25000000        ;467
000030  eef50a00          VMOV.F32 s1,#0.25000000        ;467
000034  ed9f0a29          VLDR     s0,|L30.220|
000038  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower13DriveStraightEffff ; Anki::Cozmo::PathFollower::DriveStraight(float, float, float, float)
00003c  2800              CMP      r0,#0                 ;467
00003e  d12b              BNE      |L30.152|
000040  a027              ADR      r0,|L30.224|
000042  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;476                    PRINT("TM: DriveArc failed\n");
;;;477                    return RESULT_FAIL;
;;;478                  }
;;;479    
;;;480                  
;;;481                  break;
;;;482                case PFCF_DRIVE_POINT_TURN:
;;;483                  PRINT("TM: DrivePointTurn\n");
;;;484                  if (!PathFollower::DrivePointTurn(-PIDIV2_F, 0.25, 0.25, 1)) {
;;;485                    PRINT("TM: DrivePointTurn failed\n");
;;;486                    return RESULT_FAIL;
;;;487                  }
;;;488                  break;
;;;489                default:
;;;490                  break;
;;;491              }
;;;492    
;;;493              if (++pfcfState_ == PFCF_NUM_STATES) {
;;;494                pfcfState_ = PFCF_DRIVE_STRAIGHT;
;;;495              }
;;;496              
;;;497            }
;;;498            
;;;499            return RESULT_OK;
;;;500          }
000046  ecbd8b02          VPOP     {d8}
00004a  2001              MOVS     r0,#1                 ;469
00004c  bd10              POP      {r4,pc}
                  |L30.78|
00004e  a02b              ADR      r0,|L30.252|
000050  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000054  eeb72a00          VMOV.F32 s4,#1.00000000        ;475
000058  eef51a00          VMOV.F32 s3,#0.25000000        ;475
00005c  eeb51a00          VMOV.F32 s2,#0.25000000        ;475
000060  eddf0a2a          VLDR     s1,|L30.268|
000064  eeb00a48          VMOV.F32 s0,s16                ;475
000068  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower8DriveArcEfffff ; Anki::Cozmo::PathFollower::DriveArc(float, float, float, float, float)
00006c  b9a0              CBNZ     r0,|L30.152|
00006e  a028              ADR      r0,|L30.272|
000070  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000074  ecbd8b02          VPOP     {d8}
000078  2001              MOVS     r0,#1                 ;477
00007a  bd10              POP      {r4,pc}
                  |L30.124|
00007c  a02a              ADR      r0,|L30.296|
00007e  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000082  eef71a00          VMOV.F32 s3,#1.00000000        ;484
000086  eeb51a00          VMOV.F32 s2,#0.25000000        ;484
00008a  eef50a00          VMOV.F32 s1,#0.25000000        ;484
00008e  eeb00a48          VMOV.F32 s0,s16                ;484
000092  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower14DrivePointTurnEffff ; Anki::Cozmo::PathFollower::DrivePointTurn(float, float, float, float)
000096  b158              CBZ      r0,|L30.176|
                  |L30.152|
000098  7960              LDRB     r0,[r4,#5]            ;493  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910pfcfState_E
00009a  1c40              ADDS     r0,r0,#1              ;493
00009c  b2c0              UXTB     r0,r0                 ;493
00009e  7160              STRB     r0,[r4,#5]            ;493
0000a0  2803              CMP      r0,#3                 ;493
0000a2  bf04              ITT      EQ                    ;494
0000a4  2000              MOVEQ    r0,#0                 ;494
0000a6  7160              STRBEQ   r0,[r4,#5]            ;494
                  |L30.168|
0000a8  2000              MOVS     r0,#0                 ;499
0000aa  ecbd8b02          VPOP     {d8}
0000ae  bd10              POP      {r4,pc}
                  |L30.176|
0000b0  a022              ADR      r0,|L30.316|
0000b2  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
0000b6  ecbd8b02          VPOP     {d8}
0000ba  2001              MOVS     r0,#1                 ;486
0000bc  bd10              POP      {r4,pc}
;;;501          
                          ENDP

0000be  0000              DCW      0x0000
                  |L30.192|
                          DCD      ||.data||
                  |L30.196|
0000c4  bfc90fdb          DCFS     0xbfc90fdb ; -1.5707963705062866
                  |L30.200|
0000c8  544d3a20          DCB      "TM: DriveStraight\n",0
0000cc  44726976
0000d0  65537472
0000d4  61696768
0000d8  740a00  
0000db  00                DCB      0
                  |L30.220|
0000dc  42c80000          DCFS     0x42c80000 ; 100
                  |L30.224|
0000e0  544d3a20          DCB      "TM: DriveStraight failed\n",0
0000e4  44726976
0000e8  65537472
0000ec  61696768
0000f0  74206661
0000f4  696c6564
0000f8  0a00    
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L30.252|
0000fc  544d3a20          DCB      "TM: DriveArc\n",0
000100  44726976
000104  65417263
000108  0a00    
00010a  00                DCB      0
00010b  00                DCB      0
                  |L30.268|
00010c  42200000          DCFS     0x42200000 ; 40
                  |L30.272|
000110  544d3a20          DCB      "TM: DriveArc failed\n",0
000114  44726976
000118  65417263
00011c  20666169
000120  6c65640a
000124  00      
000125  00                DCB      0
000126  00                DCB      0
000127  00                DCB      0
                  |L30.296|
000128  544d3a20          DCB      "TM: DrivePointTurn\n",0
00012c  44726976
000130  65506f69
000134  6e745475
000138  726e0a00
                  |L30.316|
00013c  544d3a20          DCB      "TM: DrivePointTurn failed\n",0
000140  44726976
000144  65506f69
000148  6e745475
00014c  726e2066
000150  61696c65
000154  640a00  
000157  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController5ResetEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController5ResetEv PROC ; Anki::Cozmo::TestModeController::Reset()
;;;247          // Bring robot to normal state and stops all motors
;;;248          Result Reset()
000000  b510              PUSH     {r4,lr}
;;;249          {
;;;250            PRINT("TestMode reset\n");
000002  a00e              ADR      r0,|L31.60|
000004  ed2d8b02          VPUSH    {d8}                  ;249
000008  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;251            
;;;252            // Stop animations that might be playing
;;;253            AnimationController::Stop();
00000c  f7fffffe          BL       _ZN4Anki5Cozmo19AnimationController4StopEv ; Anki::Cozmo::AnimationController::Stop()
;;;254            
;;;255            // Stop wheels and vision system
;;;256            WheelController::Enable();
000010  f7fffffe          BL       _ZN4Anki5Cozmo15WheelController6EnableEv ; Anki::Cozmo::WheelController::Enable()
;;;257            PickAndPlaceController::Reset();
000014  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController5ResetEv ; Anki::Cozmo::PickAndPlaceController::Reset()
;;;258            
;;;259            // Stop lift and head
;;;260            LiftController::Enable();
000018  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController6EnableEv ; Anki::Cozmo::LiftController::Enable()
;;;261            LiftController::SetAngularVelocity(0);
00001c  ed9f8a0b          VLDR     s16,|L31.76|
000020  eeb00a48          VMOV.F32 s0,s16
000024  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController18SetAngularVelocityEf ; Anki::Cozmo::LiftController::SetAngularVelocity(float)
;;;262            HeadController::Enable();
000028  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController6EnableEv ; Anki::Cozmo::HeadController::Enable()
;;;263            HeadController::SetAngularVelocity(0);
00002c  eeb00a48          VMOV.F32 s0,s16
000030  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController18SetAngularVelocityEf ; Anki::Cozmo::HeadController::SetAngularVelocity(float)
;;;264            
;;;265            return RESULT_OK;
;;;266          }
000034  ecbd8b02          VPOP     {d8}
000038  2000              MOVS     r0,#0                 ;265
00003a  bd10              POP      {r4,pc}
;;;267          
                          ENDP

                  |L31.60|
00003c  54657374          DCB      "TestMode reset\n",0
000040  4d6f6465
000044  20726573
000048  65740a00
                  |L31.76|
00004c  00000000          DCFS     0x00000000 ; 0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController5StartENS0_8TestModeEiii||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController5StartENS0_8TestModeEiii PROC ; Anki::Cozmo::TestModeController::Start(Anki::Cozmo::TestMode, int, int, int)
;;;1043         
;;;1044         Result Start(const TestMode mode, s32 p1, s32 p2, s32 p3)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1045         {
000002  468c              MOV      r12,r1
;;;1046           Result ret = RESULT_OK;
;;;1047   #if(!FREE_DRIVE_DUBINS_TEST)
;;;1048           testMode_ = mode;
000004  497c              LDR      r1,|L32.504|
000006  2400              MOVS     r4,#0                 ;1046
000008  ed2d8b02          VPUSH    {d8}                  ;1045
00000c  b083              SUB      sp,sp,#0xc            ;1045
00000e  461f              MOV      r7,r3                 ;1045
000010  4615              MOV      r5,r2                 ;1045
000012  7308              STRB     r0,[r1,#0xc]
;;;1049           
;;;1050           switch(testMode_) {
000014  280f              CMP      r0,#0xf
000016  f08080e3          BCS.W    |L32.480|
00001a  e8dff000          TBB      [pc,r0]
00001e  0824              DCB      0x08,0x24
000020  2e384c56          DCB      0x2e,0x38,0x4c,0x56
000024  61717b88          DCB      0x61,0x71,0x7b,0x88
000028  96a3bac9          DCB      0x96,0xa3,0xba,0xc9
00002c  d300              DCB      0xd3,0x00
00002e  4873              LDR      r0,|L32.508|
000030  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000034  f7fffffe          BL       _ZN4Anki5Cozmo19AnimationController4StopEv ; Anki::Cozmo::AnimationController::Stop()
000038  f7fffffe          BL       _ZN4Anki5Cozmo15WheelController6EnableEv ; Anki::Cozmo::WheelController::Enable()
00003c  f7fffffe          BL       _ZN4Anki5Cozmo22PickAndPlaceController5ResetEv ; Anki::Cozmo::PickAndPlaceController::Reset()
000040  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController6EnableEv ; Anki::Cozmo::LiftController::Enable()
000044  ed9f8a6e          VLDR     s16,|L32.512|
000048  eeb00a48          VMOV.F32 s0,s16
00004c  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController18SetAngularVelocityEf ; Anki::Cozmo::LiftController::SetAngularVelocity(float)
000050  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController6EnableEv ; Anki::Cozmo::HeadController::Enable()
000054  eeb00a48          VMOV.F32 s0,s16
000058  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController18SetAngularVelocityEf ; Anki::Cozmo::HeadController::SetAngularVelocity(float)
;;;1051             case TM_NONE:
;;;1052               ret = Reset();
;;;1053               updateFunc = NULL;
00005c  4966              LDR      r1,|L32.504|
00005e  2000              MOVS     r0,#0
;;;1054               break;
000060  62c8              STR      r0,[r1,#0x2c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
000062  f000b8c3          B.W      |L32.492|
000066  4867              LDR      r0,|L32.516|
000068  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
00006c  4862              LDR      r0,|L32.504|
00006e  2100              MOVS     r1,#0
000070  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000072  7181              STRB     r1,[r0,#6]
;;;1055             case TM_PICK_AND_PLACE:
;;;1056               ret = PickAndPlaceTestInit();
;;;1057               updateFunc = PickAndPlaceTestUpdate;
000074  4964              LDR      r1,|L32.520|
;;;1058               break;
000076  f000b866          B.W      |L32.326|
00007a  4864              LDR      r0,|L32.524|
00007c  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000080  485d              LDR      r0,|L32.504|
000082  2100              MOVS     r1,#0
000084  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000086  7101              STRB     r1,[r0,#4]
;;;1059             case TM_DOCK_PATH:
;;;1060               ret = DockPathTestInit();
;;;1061               updateFunc = DockPathTestUpdate;
000088  4961              LDR      r1,|L32.528|
;;;1062               break;
00008a  f000b85c          B.W      |L32.326|
00008e  4861              LDR      r0,|L32.532|
000090  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000094  4d58              LDR      r5,|L32.504|
000096  2000              MOVS     r0,#0
000098  7428              STRB     r0,[r5,#0x10]
00009a  ed9f0a5f          VLDR     s0,|L32.536|
00009e  4668              MOV      r0,sp
0000a0  f7fffffe          BL       _ZN4Anki7RadiansC1Ef ; Anki::Radians::Radians(float)
0000a4  ed9f0a56          VLDR     s0,|L32.512|
0000a8  eef00a40          VMOV.F32 s1,s0
0000ac  f7fffffe          BL       _ZN4Anki5Cozmo12Localization17SetCurrentMatPoseEffNS_7RadiansE ; Anki::Cozmo::Localization::SetCurrentMatPose(float, float, Anki::Radians)
;;;1063             case TM_PATH_FOLLOW:
;;;1064               ret = PathFollowTestInit();
;;;1065               updateFunc = PathFollowTestUpdate;
0000b0  485a              LDR      r0,|L32.540|
;;;1066               break;
0000b2  f000b885          B.W      |L32.448|
0000b6  485a              LDR      r0,|L32.544|
0000b8  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
0000bc  f7fffffe          BL       _ZN4Anki5Cozmo12PathFollower9ClearPathEv ; Anki::Cozmo::PathFollower::ClearPath()
0000c0  484d              LDR      r0,|L32.504|
0000c2  2100              MOVS     r1,#0
0000c4  7141              STRB     r1,[r0,#5]
;;;1067             case TM_PATH_FOLLOW_CONVENIENCE_FUNCTIONS:
;;;1068               ret = PathFollowConvenienceFuncTestInit();
;;;1069               updateFunc = PathFollowConvenienceFuncTestUpdate;
0000c6  4957              LDR      r1,|L32.548|
;;;1070               break;
0000c8  e03d              B        |L32.326|
;;;1071             case TM_DIRECT_DRIVE:
;;;1072               ret = DriveTestInit(p1,p2,p3);
0000ca  461a              MOV      r2,r3
0000cc  4629              MOV      r1,r5
0000ce  4660              MOV      r0,r12
0000d0  f7fffffe          BL       _ZN4Anki5Cozmo18TestModeController13DriveTestInitEiii ; Anki::Cozmo::TestModeController::DriveTestInit(int, int, int)
;;;1073               updateFunc = DriveTestUpdate;
0000d4  4948              LDR      r1,|L32.504|
0000d6  4604              MOV      r4,r0                 ;1072
0000d8  4853              LDR      r0,|L32.552|
;;;1074               break;
0000da  62c8              STR      r0,[r1,#0x2c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
0000dc  f000b886          B.W      |L32.492|
0000e0  4852              LDR      r0,|L32.556|
0000e2  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
0000e6  4852              LDR      r0,|L32.560|
0000e8  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
0000ec  4842              LDR      r0,|L32.504|
0000ee  2100              MOVS     r1,#0
0000f0  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
0000f2  ed9f0a50          VLDR     s0,|L32.564|
0000f6  6401              STR      r1,[r0,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
0000f8  ed800a09          VSTR     s0,[r0,#0x24]
;;;1075             case TM_LIFT:
;;;1076               ret = LiftTestInit();
;;;1077               updateFunc = LiftTestUpdate;
0000fc  494e              LDR      r1,|L32.568|
;;;1078               break;
0000fe  e022              B        |L32.326|
000100  484e              LDR      r0,|L32.572|
000102  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000106  484a              LDR      r0,|L32.560|
000108  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;1079             case TM_LIFT_TOGGLE:
;;;1080               ret = LiftToggleTestInit();
;;;1081               updateFunc = LiftToggleTestUpdate;
00010c  493a              LDR      r1,|L32.504|
00010e  484c              LDR      r0,|L32.576|
;;;1082               break;
000110  62c8              STR      r0,[r1,#0x2c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
000112  e06b              B        |L32.492|
000114  484b              LDR      r0,|L32.580|
000116  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
00011a  4837              LDR      r0,|L32.504|
00011c  2100              MOVS     r1,#0
00011e  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000120  ed9f0a44          VLDR     s0,|L32.564|
000124  6401              STR      r1,[r0,#0x40]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E
000126  ed800a0a          VSTR     s0,[r0,#0x28]
;;;1083             case TM_HEAD:
;;;1084               ret = HeadTestInit();
;;;1085               updateFunc = HeadTestUpdate;
00012a  4947              LDR      r1,|L32.584|
;;;1086               break;
00012c  e00b              B        |L32.326|
;;;1087             case TM_IMU:
;;;1088               ret = IMUTestInit(p1);
00012e  4665              MOV      r5,r12
000130  4846              LDR      r0,|L32.588|
000132  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000136  4830              LDR      r0,|L32.504|
000138  f0050101          AND      r1,r5,#1
00013c  7201              STRB     r1,[r0,#8]
00013e  2100              MOVS     r1,#0
000140  63c1              STR      r1,[r0,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000142  74c1              STRB     r1,[r0,#0x13]
;;;1089               updateFunc = IMUTestUpdate;
000144  4942              LDR      r1,|L32.592|
                  |L32.326|
000146  62c1              STR      r1,[r0,#0x2c]         ;1085  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
000148  e050              B        |L32.492|
00014a  4842              LDR      r0,|L32.596|
00014c  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000150  2500              MOVS     r5,#0                 ;1085
000152  4e29              LDR      r6,|L32.504|
000154  4629              MOV      r1,r5                 ;1085
000156  4628              MOV      r0,r5                 ;1085
000158  6535              STR      r5,[r6,#0x50]         ;1085  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE
00015a  f7fffffe          BL       _ZN4Anki5Cozmo19AnimationController4PlayEij ; Anki::Cozmo::AnimationController::Play(int, unsigned)
;;;1090               break;
;;;1091             case TM_ANIMATION:
;;;1092               ret = AnimTestInit();
;;;1093               updateFunc = AnimTestUpdate;
00015e  483e              LDR      r0,|L32.600|
;;;1094               break;
000160  63f5              STR      r5,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
000162  e014              B        |L32.398|
;;;1095   #if defined(HAVE_ACTIVE_GRIPPER) && HAVE_ACTIVE_GRIPPER
;;;1096             case TM_GRIPPER:
;;;1097               ret = GripperTestInit();
;;;1098               updateFunc = GripperTestUpdate;
;;;1099               break;
;;;1100   #endif
;;;1101             case TM_LIGHTS:
;;;1102               ret = LightTestInit(p1,p2,p3);
000164  4666              MOV      r6,r12
000166  4661              MOV      r1,r12
000168  483c              LDR      r0,|L32.604|
00016a  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
00016e  f0160001          ANDS     r0,r6,#1
000172  4e21              LDR      r6,|L32.504|
000174  72f0              STRB     r0,[r6,#0xb]
000176  d003              BEQ      |L32.384|
000178  2000              MOVS     r0,#0
00017a  7270              STRB     r0,[r6,#9]
00017c  72b0              STRB     r0,[r6,#0xa]
00017e  e003              B        |L32.392|
                  |L32.384|
000180  b2e8              UXTB     r0,r5
000182  4639              MOV      r1,r7
000184  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS0_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::LEDId, unsigned)
                  |L32.392|
000188  2000              MOVS     r0,#0
;;;1103               updateFunc = LightTestUpdate;
00018a  63f0              STR      r0,[r6,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
00018c  4834              LDR      r0,|L32.608|
                  |L32.398|
00018e  62f0              STR      r0,[r6,#0x2c]         ;1093  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
000190  e02c              B        |L32.492|
000192  4834              LDR      r0,|L32.612|
000194  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
000198  4817              LDR      r0,|L32.504|
00019a  2100              MOVS     r1,#0                 ;1093
00019c  ed9f0a18          VLDR     s0,|L32.512|
0001a0  63c1              STR      r1,[r0,#0x3c]         ;1093  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
0001a2  7441              STRB     r1,[r0,#0x11]         ;1093
0001a4  ed800a11          VSTR     s0,[r0,#0x44]         ;1093
0001a8  7481              STRB     r1,[r0,#0x12]         ;1093
;;;1104               break;
;;;1105             case TM_STOP_TEST:
;;;1106               ret = StopTestInit();
;;;1107               updateFunc = StopTestUpdate;
0001aa  492f              LDR      r1,|L32.616|
;;;1108               break;
0001ac  62c1              STR      r1,[r0,#0x2c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
0001ae  e01d              B        |L32.492|
0001b0  4d11              LDR      r5,|L32.504|
0001b2  2000              MOVS     r0,#0
0001b4  63e8              STR      r0,[r5,#0x3c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E
0001b6  f7fffffe          BL       _ZN4Anki5Cozmo15WheelController7DisableEv ; Anki::Cozmo::WheelController::Disable()
0001ba  f7fffffe          BL       _ZN4Anki5Cozmo14LiftController7DisableEv ; Anki::Cozmo::LiftController::Disable()
;;;1109             case TM_MAX_POWER_TEST:
;;;1110               ret = MaxPowerTestInit();
;;;1111               updateFunc = MaxPowerTestUpdate;
0001be  482b              LDR      r0,|L32.620|
                  |L32.448|
0001c0  62e8              STR      r0,[r5,#0x2c]         ;1065  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
0001c2  e013              B        |L32.492|
0001c4  ed9f0a2a          VLDR     s0,|L32.624|
0001c8  f7fffffe          BL       _ZN4Anki5Cozmo14HeadController15SetDesiredAngleEf ; Anki::Cozmo::HeadController::SetDesiredAngle(float)
0001cc  f44f71fa          MOV      r1,#0x1f4             ;1065
0001d0  2001              MOVS     r0,#1                 ;1065
0001d2  f7fffffe          BL       _ZN4Anki5Cozmo22FaceTrackingController13StartTrackingENS1_19FaceSelectionMethodEj ; Anki::Cozmo::FaceTrackingController::StartTracking(Anki::Cozmo::FaceTrackingController::FaceSelectionMethod, unsigned)
;;;1112               break;
;;;1113             case TM_FACE_TRACKING:
;;;1114               ret = FaceTrackTestInit();
;;;1115               updateFunc = FaceTrackTestUpdate;
0001d6  4908              LDR      r1,|L32.504|
0001d8  4604              MOV      r4,r0                 ;1114
0001da  4826              LDR      r0,|L32.628|
;;;1116               break;
0001dc  62c8              STR      r0,[r1,#0x2c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
0001de  e005              B        |L32.492|
                  |L32.480|
;;;1117             default:
;;;1118               PRINT("ERROR (TestModeController): Undefined mode %d\n", testMode_);
0001e0  4805              LDR      r0,|L32.504|
0001e2  7b01              LDRB     r1,[r0,#0xc]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da699testMode_E
0001e4  a024              ADR      r0,|L32.632|
0001e6  f7fffffe          BL       _ZN4Anki5Cozmo8Messages8SendTextEPKcz ; Anki::Cozmo::Messages::SendText(const char*, ...)
;;;1119               ret = RESULT_FAIL;
0001ea  2401              MOVS     r4,#1
                  |L32.492|
;;;1120               break;
;;;1121           }
;;;1122   #endif
;;;1123           return ret;
;;;1124           
;;;1125         }
0001ec  b003              ADD      sp,sp,#0xc
0001ee  4620              MOV      r0,r4                 ;1123
0001f0  ecbd8b02          VPOP     {d8}
0001f4  bdf0              POP      {r4-r7,pc}
;;;1126         
                          ENDP

0001f6  0000              DCW      0x0000
                  |L32.504|
                          DCD      ||.data||
                  |L32.508|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController5ResetEv||+0x3c
                  |L32.512|
000200  00000000          DCFS     0x00000000 ; 0
                  |L32.516|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController20PickAndPlaceTestInitEv||+0x14
                  |L32.520|
                          DCD      _ZN4Anki5Cozmo18TestModeController22PickAndPlaceTestUpdateEv ; Anki::Cozmo::TestModeController::PickAndPlaceTestUpdate()
                  |L32.524|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController16DockPathTestInitEv||+0x14
                  |L32.528|
                          DCD      _ZN4Anki5Cozmo18TestModeController18DockPathTestUpdateEv ; Anki::Cozmo::TestModeController::DockPathTestUpdate()
                  |L32.532|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController18PathFollowTestInitEv||+0x2c
                  |L32.536|
000218  bfc90fdb          DCFS     0xbfc90fdb ; -1.5707963705062866
                  |L32.540|
                          DCD      _ZN4Anki5Cozmo18TestModeController20PathFollowTestUpdateEv ; Anki::Cozmo::TestModeController::PathFollowTestUpdate()
                  |L32.544|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController33PathFollowConvenienceFuncTestInitEv||+0x14
                  |L32.548|
                          DCD      _ZN4Anki5Cozmo18TestModeController35PathFollowConvenienceFuncTestUpdateEv ; Anki::Cozmo::TestModeController::PathFollowConvenienceFuncTestUpdate()
                  |L32.552|
                          DCD      _ZN4Anki5Cozmo18TestModeController15DriveTestUpdateEv ; Anki::Cozmo::TestModeController::DriveTestUpdate()
                  |L32.556|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController12LiftTestInitEv||+0x24
                  |L32.560|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController12LiftTestInitEv||+0x44
                  |L32.564|
000234  3e4ccccd          DCFS     0x3e4ccccd ; 0.20000000298023224
                  |L32.568|
                          DCD      _ZN4Anki5Cozmo18TestModeController14LiftTestUpdateEv ; Anki::Cozmo::TestModeController::LiftTestUpdate()
                  |L32.572|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController18LiftToggleTestInitEv||+0x14
                  |L32.576|
                          DCD      _ZN4Anki5Cozmo18TestModeController20LiftToggleTestUpdateEv ; Anki::Cozmo::TestModeController::LiftToggleTestUpdate()
                  |L32.580|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController12HeadTestInitEv||+0x1c
                  |L32.584|
                          DCD      _ZN4Anki5Cozmo18TestModeController14HeadTestUpdateEv ; Anki::Cozmo::TestModeController::HeadTestUpdate()
                  |L32.588|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController11IMUTestInitEi||+0x1c
                  |L32.592|
                          DCD      _ZN4Anki5Cozmo18TestModeController13IMUTestUpdateEv ; Anki::Cozmo::TestModeController::IMUTestUpdate()
                  |L32.596|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController12AnimTestInitEv||+0x1c
                  |L32.600|
                          DCD      _ZN4Anki5Cozmo18TestModeController14AnimTestUpdateEv ; Anki::Cozmo::TestModeController::AnimTestUpdate()
                  |L32.604|
                          DCD      ||.conststring||+0x44
                  |L32.608|
                          DCD      _ZN4Anki5Cozmo18TestModeController15LightTestUpdateEv ; Anki::Cozmo::TestModeController::LightTestUpdate()
                  |L32.612|
                          DCD      ||i._ZN4Anki5Cozmo18TestModeController12StopTestInitEv||+0x20
                  |L32.616|
                          DCD      _ZN4Anki5Cozmo18TestModeController14StopTestUpdateEv ; Anki::Cozmo::TestModeController::StopTestUpdate()
                  |L32.620|
                          DCD      _ZN4Anki5Cozmo18TestModeController18MaxPowerTestUpdateEv ; Anki::Cozmo::TestModeController::MaxPowerTestUpdate()
                  |L32.624|
000270  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612
                  |L32.628|
                          DCD      _ZN4Anki5Cozmo18TestModeController19FaceTrackTestUpdateEv ; Anki::Cozmo::TestModeController::FaceTrackTestUpdate()
                  |L32.632|
000278  4552524f          DCB      "ERROR (TestModeController): Undefined mode %d\n",0
00027c  52202854
000280  6573744d
000284  6f646543
000288  6f6e7472
00028c  6f6c6c65
000290  72293a20
000294  556e6465
000298  66696e65
00029c  64206d6f
0002a0  64652025
0002a4  640a00  
0002a7  00                DCB      0

                          AREA ||i._ZN4Anki5Cozmo18TestModeController6UpdateEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController6UpdateEv PROC ; Anki::Cozmo::TestModeController::Update()
;;;1127         
;;;1128         Result Update()
000000  b510              PUSH     {r4,lr}
;;;1129         {
;;;1130   #if(!FREE_DRIVE_DUBINS_TEST)
;;;1131           // Don't run Update until robot is finished initializing
;;;1132           if (Robot::GetOperationMode() == Robot::WAITING) {
000002  f7fffffe          BL       _ZN4Anki5Cozmo5Robot16GetOperationModeEv ; Anki::Cozmo::Robot::GetOperationMode()
000006  2801              CMP      r0,#1
000008  d105              BNE      |L33.22|
;;;1133             if (updateFunc) {
00000a  4804              LDR      r0,|L33.28|
00000c  6ac0              LDR      r0,[r0,#0x2c]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE
00000e  b110              CBZ      r0,|L33.22|
;;;1134               return updateFunc();
000010  e8bd4010          POP      {r4,lr}
000014  4700              BX       r0
                  |L33.22|
;;;1135             }
;;;1136           }
;;;1137   #endif
;;;1138           return RESULT_OK;
000016  2000              MOVS     r0,#0
;;;1139         }
000018  bd10              POP      {r4,pc}
;;;1140         
                          ENDP

00001a  0000              DCW      0x0000
                  |L33.28|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo18TestModeController7GetModeEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController7GetModeEv PROC ; Anki::Cozmo::TestModeController::GetMode()
;;;241    
;;;242          TestMode GetMode()
000000  4801              LDR      r0,|L34.8|
;;;243          {
;;;244            return testMode_;
000002  7b00              LDRB     r0,[r0,#0xc]  ; _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da699testMode_E
;;;245          }
000004  4770              BX       lr
;;;246          
                          ENDP

000006  0000              DCW      0x0000
                  |L34.8|
                          DCD      ||.data||

                          AREA ||i.__sti___22_testModeController_cpp_d0b2da69||, CODE, READONLY, ALIGN=2

                  __sti___22_testModeController_cpp_d0b2da69 PROC
000000  4803              LDR      r0,|L35.16|
000002  ed9f0a02          VLDR     s0,|L35.12|
000006  ed800a15          VSTR     s0,[r0,#0x54]
00000a  4770              BX       lr
                          ENDP

                  |L35.12|
00000c  423df6f2          DCFS     0x423df6f2 ; 47.491157531738281
                  |L35.16|
                          DCD      ||.data||

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController7GetModeEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController7GetModeEv||
                          DCD      0x00000001

                          AREA ||area_number.37||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController5ResetEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.37||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController5ResetEv||
                          DCD      0x00000001

                          AREA ||area_number.38||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController20PickAndPlaceTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.38||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController20PickAndPlaceTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.39||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController22PickAndPlaceTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.39||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController22PickAndPlaceTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.40||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController16DockPathTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.40||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController16DockPathTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.41||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController18DockPathTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.41||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController18DockPathTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.42||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController18PathFollowTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.42||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController18PathFollowTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.43||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController20PathFollowTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.43||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController20PathFollowTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.44||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController33PathFollowConvenienceFuncTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.44||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController33PathFollowConvenienceFuncTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.45||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController35PathFollowConvenienceFuncTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.45||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController35PathFollowConvenienceFuncTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.46||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController13DriveTestInitEiii||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.46||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController13DriveTestInitEiii||
                          DCD      0x00000001

                          AREA ||area_number.47||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController15DriveTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.47||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController15DriveTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.48||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController12LiftTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.48||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController12LiftTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.49||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController14LiftTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.49||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController14LiftTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.50||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController18LiftToggleTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.50||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController18LiftToggleTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.51||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController20LiftToggleTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.51||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController20LiftToggleTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.52||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController12HeadTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.52||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController12HeadTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.53||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController14HeadTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.53||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController14HeadTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.54||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController11IMUTestInitEi||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.54||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController11IMUTestInitEi||
                          DCD      0x00000001

                          AREA ||area_number.55||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController13IMUTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.55||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController13IMUTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.56||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController12AnimTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.56||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController12AnimTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.57||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController14AnimTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.57||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController14AnimTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.58||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController15GripperTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.58||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController15GripperTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.59||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController17GripperTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.59||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController17GripperTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.60||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController13LightTestInitEiii||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.60||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController13LightTestInitEiii||
                          DCD      0x00000001

                          AREA ||area_number.61||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController19FaceTrackTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.61||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController19FaceTrackTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.62||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController17FaceTrackTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.62||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController17FaceTrackTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.63||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController18MaxPowerTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.63||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController18MaxPowerTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.64||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController16MaxPowerTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.64||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController16MaxPowerTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.65||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController14StopTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.65||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController14StopTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.66||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController12StopTestInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.66||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController12StopTestInitEv||
                          DCD      0x00000001

                          AREA ||area_number.67||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController5StartENS0_8TestModeEiii||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.67||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController5StartENS0_8TestModeEiii||
                          DCD      0x00000001

                          AREA ||area_number.68||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController15LightTestUpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.68||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController15LightTestUpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.69||, LINKORDER=||i._ZN4Anki5Cozmo18TestModeController6UpdateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.69||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo18TestModeController6UpdateEv||
                          DCD      0x00000001

                          AREA ||area_number.70||, LINKORDER=||i.__sti___22_testModeController_cpp_d0b2da69||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.70||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___22_testModeController_cpp_d0b2da69||
                          DCD      0x00000001

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6913LEDColorList_E ; Anki::Cozmo::TestModeController::<unnamed>::LEDColorList_
                          DCD      0x00ff0000
                          DCD      0x0000ff00
                          DCD      0x000000ff

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  4c696674          DCB      "Lift speed %f rad/s, filt_speed %f rad/s, position %f r"
000004  20737065
000008  65642025
00000c  66207261
000010  642f732c
000014  2066696c
000018  745f7370
00001c  65656420
000020  25662072
000024  61642f73
000028  2c20706f
00002c  73697469
000030  6f6e2025
000034  662072  
000037  61642c20          DCB      "ad, %f mm\n",0
00003b  2566206d
00003f  6d0a00  
000042  00                DCB      0
000043  00                DCB      0
000044  0a3d3d3d          DCB      "\n==== Starting LightTest  (flags = %x, ledID = %d, col"
000048  3d205374
00004c  61727469
000050  6e67204c
000054  69676874
000058  54657374
00005c  20202866
000060  6c616773
000064  203d2025
000068  782c206c
00006c  65644944
000070  203d2025
000074  642c2063
000078  6f6c    
00007a  6f72203d          DCB      "or = %x) =====\n",0
00007e  20257829
000082  203d3d3d
000086  3d3d0a00

                          AREA ||.data||, DATA, ALIGN=2

                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6916enableToggleDir_E ; Anki::Cozmo::TestModeController::<unnamed>::enableToggleDir_
000000  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6920enableDirectHALTest_E ; Anki::Cozmo::TestModeController::<unnamed>::enableDirectHALTest_
000001  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6922enableCycleSpeedsTest_E ; Anki::Cozmo::TestModeController::<unnamed>::enableCycleSpeedsTest_
000002  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6920firstSpeedCommanded_E ; Anki::Cozmo::TestModeController::<unnamed>::firstSpeedCommanded_
000003  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914dockPathState_E ; Anki::Cozmo::TestModeController::<unnamed>::dockPathState_
000004  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910pfcfState_E ; Anki::Cozmo::TestModeController::<unnamed>::pfcfState_
000005  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6918pickAndPlaceState_E ; Anki::Cozmo::TestModeController::<unnamed>::pickAndPlaceState_
000006  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915useManualSpeed_E ; Anki::Cozmo::TestModeController::<unnamed>::useManualSpeed_
000007  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915imuTestDoTurns_E ; Anki::Cozmo::TestModeController::<unnamed>::imuTestDoTurns_
000008  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da696ledID_E ; Anki::Cozmo::TestModeController::<unnamed>::ledID_
000009  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6912ledColorIdx_E ; Anki::Cozmo::TestModeController::<unnamed>::ledColorIdx_
00000a  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6913ledCycleTest_E ; Anki::Cozmo::TestModeController::<unnamed>::ledCycleTest_
00000b  01                DCB      0x01
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da699testMode_E ; Anki::Cozmo::TestModeController::<unnamed>::testMode_
00000c  00                DCB      0x00
                  ||fwd||
00000d  01                DCB      0x01
                  ||up||
00000e  00                DCB      0x00
                  |symbol_number.130|
00000f  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6912pathStarted_E ; Anki::Cozmo::TestModeController::<unnamed>::pathStarted_
000010  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da695ST_goE ; Anki::Cozmo::TestModeController::<unnamed>::ST_go
000011  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914ST_slowingDownE ; Anki::Cozmo::TestModeController::<unnamed>::ST_slowingDown
000012  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911IT_turnLeftE ; Anki::Cozmo::TestModeController::<unnamed>::IT_turnLeft
000013  00                DCB      0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915ST_slowDownTicsE ; Anki::Cozmo::TestModeController::<unnamed>::ST_slowDownTics
000014  00000000          DCB      0x00,0x00,0x00,0x00
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911wheelPower_E ; Anki::Cozmo::TestModeController::<unnamed>::wheelPower_
000018  00000000          DCFS     0x00000000 ; 0
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915wheelPowerStep_E ; Anki::Cozmo::TestModeController::<unnamed>::wheelPowerStep_
00001c  3d4ccccd          DCFS     0x3d4ccccd ; 0.05000000074505806
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6916wheelSpeed_mmps_E ; Anki::Cozmo::TestModeController::<unnamed>::wheelSpeed_mmps_
000020  42700000          DCFS     0x42700000 ; 60
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910liftPower_E ; Anki::Cozmo::TestModeController::<unnamed>::liftPower_
000024  3f800000          DCFS     0x3f800000 ; 1
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910headPower_E ; Anki::Cozmo::TestModeController::<unnamed>::headPower_
000028  00000000          DCFS     0x00000000 ; 0
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6910updateFuncE ; Anki::Cozmo::TestModeController::<unnamed>::updateFunc
                          DCD      0x00000000
                  liftHeight
000030  41b80000          DCFS     0x41b80000 ; 23
                  inPositionCycles
                          DCD      0x00000000
                  pwr
000038  3f800000          DCFS     0x3f800000 ; 1
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da697ticCnt_E ; Anki::Cozmo::TestModeController::<unnamed>::ticCnt_
                          DCD      0x00000000
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ticCnt2_E ; Anki::Cozmo::TestModeController::<unnamed>::ticCnt2_
                          DCD      0x00000000
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da698ST_speedE ; Anki::Cozmo::TestModeController::<unnamed>::ST_speed
                          DCD      0x00000000
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6914ST_prevLeftPosE ; Anki::Cozmo::TestModeController::<unnamed>::ST_prevLeftPos
                          DCD      0x00000000
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6915ST_prevRightPosE ; Anki::Cozmo::TestModeController::<unnamed>::ST_prevRightPos
                          DCD      0x00000000
                  _ZN4Anki5Cozmo18TestModeController46_GLOBAL__N__22_testModeController_cpp_d0b2da6911AT_currAnimE ; Anki::Cozmo::TestModeController::<unnamed>::AT_currAnim
                          DCD      0x00000000
                  _ZN4Anki5Cozmo21ROBOT_BOUNDING_RADIUSE ; Anki::Cozmo::ROBOT_BOUNDING_RADIUS
                          DCD      0x00000000

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___22_testModeController_cpp_d0b2da69
