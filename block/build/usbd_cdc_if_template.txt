; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\build\usbd_cdc_if_template.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\usbd_cdc_if_template.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F429X -DUSE_STDPERIPH_DRIVER -DSTM32F429_439xx -DUSE_DEFAULT_TIMEOUT_CALLBACK -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_FS -DCOZMO_ROBOT -DROBOT_HARDWARE -DANKICORETECH_EMBEDDED_USE_HEATSHRINK -DCORETECH_ROBOT -DSTM32F429X --omf_browse=.\build\usbd_cdc_if_template.crf arm_hal\lib\usb\usbd_cdc_if_template.c]
                          THUMB

                          AREA ||i.TEMPLATE_Ctrl||, CODE, READONLY, ALIGN=1

                  TEMPLATE_Ctrl PROC
;;;102      */
;;;103    static uint16_t TEMPLATE_Ctrl (uint32_t Cmd, uint8_t* Buf, uint32_t Len)
000000  2000              MOVS     r0,#0
;;;104    { 
;;;105      switch (Cmd)
;;;106      {
;;;107      case SEND_ENCAPSULATED_COMMAND:
;;;108        /* Add your code here */
;;;109        break;
;;;110    
;;;111      case GET_ENCAPSULATED_RESPONSE:
;;;112        /* Add your code here */
;;;113        break;
;;;114    
;;;115      case SET_COMM_FEATURE:
;;;116        /* Add your code here */
;;;117        break;
;;;118    
;;;119      case GET_COMM_FEATURE:
;;;120        /* Add your code here */
;;;121        break;
;;;122    
;;;123      case CLEAR_COMM_FEATURE:
;;;124        /* Add your code here */
;;;125        break;
;;;126    
;;;127      case SET_LINE_CODING:
;;;128        /* Add your code here */
;;;129        break;
;;;130    
;;;131      case GET_LINE_CODING:
;;;132        /* Add your code here */
;;;133        break;
;;;134    
;;;135      case SET_CONTROL_LINE_STATE:
;;;136        /* Add your code here */
;;;137        break;
;;;138    
;;;139      case SEND_BREAK:
;;;140         /* Add your code here */
;;;141        break;    
;;;142        
;;;143      default:
;;;144        break;
;;;145      }
;;;146    
;;;147      return USBD_OK;
;;;148    }
000002  4770              BX       lr
;;;149    
                          ENDP


                          AREA ||i.TEMPLATE_DataRx||, CODE, READONLY, ALIGN=1

                  TEMPLATE_DataRx PROC
;;;194      */
;;;195    static uint16_t TEMPLATE_DataRx (uint8_t* Buf, uint32_t Len)
000000  2000              MOVS     r0,#0
                  |L2.2|
;;;196    {
;;;197      uint32_t i;
;;;198      
;;;199      /* Send the received buffer */
;;;200      for (i = 0; i < Len; i++)
000002  4288              CMP      r0,r1
000004  bf38              IT       CC
000006  1c40              ADDCC    r0,r0,#1
000008  d3fb              BCC      |L2.2|
;;;201      {
;;;202        /* XXXX_SendData(XXXX, *(Buf + i) ); */
;;;203      } 
;;;204     
;;;205      return USBD_OK;
00000a  2000              MOVS     r0,#0
;;;206    }
00000c  4770              BX       lr
;;;207    
                          ENDP


                          AREA ||i.TEMPLATE_DataTx||, CODE, READONLY, ALIGN=2

                  TEMPLATE_DataTx PROC
;;;157      */
;;;158    static uint16_t TEMPLATE_DataTx (uint8_t* Buf, uint32_t Len)
000000  2000              MOVS     r0,#0
                  |L3.2|
;;;159    {
;;;160      uint32_t i;
;;;161      
;;;162      /* Get the data to be sent */
;;;163      for (i = 0; i < Len; i++)
000002  4288              CMP      r0,r1
000004  bf38              IT       CC
000006  1c40              ADDCC    r0,r0,#1
000008  d3fb              BCC      |L3.2|
;;;164      {
;;;165        /* APP_Rx_Buffer[APP_Rx_ptr_in] = XXX_ReceiveData(XXX); */
;;;166      }
;;;167    
;;;168      /* Increment the in pointer */
;;;169      APP_Rx_ptr_in++;
00000a  4905              LDR      r1,|L3.32|
00000c  6808              LDR      r0,[r1,#0]  ; APP_Rx_ptr_in
00000e  1c40              ADDS     r0,r0,#1
;;;170      
;;;171      /* To avoid buffer overflow */
;;;172      if(APP_Rx_ptr_in == APP_RX_DATA_SIZE)
000010  6008              STR      r0,[r1,#0]  ; APP_Rx_ptr_in
000012  f5b06f00          CMP      r0,#0x800
;;;173      {
;;;174        APP_Rx_ptr_in = 0;
000016  bf04              ITT      EQ
000018  2000              MOVEQ    r0,#0
00001a  6008              STREQ    r0,[r1,#0]  ; APP_Rx_ptr_in
;;;175      }  
;;;176      
;;;177      return USBD_OK;
00001c  2000              MOVS     r0,#0
;;;178    }
00001e  4770              BX       lr
;;;179    
                          ENDP

                  |L3.32|
                          DCD      APP_Rx_ptr_in

                          AREA ||i.TEMPLATE_DeInit||, CODE, READONLY, ALIGN=1

                  TEMPLATE_DeInit PROC
;;;85       */
;;;86     static uint16_t TEMPLATE_DeInit(void)
000000  2000              MOVS     r0,#0
;;;87     {
;;;88       /*
;;;89          Add your deinitialization code here 
;;;90       */  
;;;91       return USBD_OK;
;;;92     }
000002  4770              BX       lr
;;;93     
                          ENDP


                          AREA ||i.TEMPLATE_Init||, CODE, READONLY, ALIGN=1

                  TEMPLATE_Init PROC
;;;71       */
;;;72     static uint16_t TEMPLATE_Init(void)
000000  2000              MOVS     r0,#0
;;;73     {
;;;74       /*
;;;75          Add your initialization code here 
;;;76       */  
;;;77       return USBD_OK;
;;;78     }
000002  4770              BX       lr
;;;79     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  TEMPLATE_fops
                          DCD      TEMPLATE_Init
                          DCD      TEMPLATE_DeInit
                          DCD      TEMPLATE_Ctrl
                          DCD      TEMPLATE_DataTx
                          DCD      TEMPLATE_DataRx

;*** Start embedded assembler ***

#line 1 "arm_hal\\lib\\usb\\usbd_cdc_if_template.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___22_usbd_cdc_if_template_c_9e674896____REV16|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___22_usbd_cdc_if_template_c_9e674896____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___22_usbd_cdc_if_template_c_9e674896____REVSH|
#line 144
|__asm___22_usbd_cdc_if_template_c_9e674896____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
