; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\build\usbd_req.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\usbd_req.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F429X -DUSE_STDPERIPH_DRIVER -DSTM32F429_439xx -DUSE_DEFAULT_TIMEOUT_CALLBACK -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_FS -DCOZMO_ROBOT -DROBOT_HARDWARE -DANKICORETECH_EMBEDDED_USE_HEATSHRINK -DCORETECH_ROBOT -DSTM32F429X --omf_browse=.\build\usbd_req.crf arm_hal\lib\usb\usbd_req.c]
                          THUMB

                          AREA ||i.USBD_CtlError||, CODE, READONLY, ALIGN=1

                  USBD_CtlError PROC
;;;799    
;;;800    void USBD_CtlError( USB_OTG_CORE_HANDLE  *pdev,
000000  b510              PUSH     {r4,lr}
;;;801                                USB_SETUP_REQ *req)
;;;802    {
000002  4604              MOV      r4,r0
;;;803      
;;;804      DCD_EP_Stall(pdev , 0x80);
000004  2180              MOVS     r1,#0x80
000006  f7fffffe          BL       DCD_EP_Stall
;;;805      DCD_EP_Stall(pdev , 0);
00000a  2100              MOVS     r1,#0
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       DCD_EP_Stall
;;;806      USB_OTG_EP0_OutStart(pdev);  
000012  4620              MOV      r0,r4
000014  e8bd4010          POP      {r4,lr}
000018  f7ffbffe          B.W      USB_OTG_EP0_OutStart
;;;807    }
;;;808    
                          ENDP


                          AREA ||i.USBD_GetString||, CODE, READONLY, ALIGN=1

                  USBD_GetString PROC
;;;817      */
;;;818    void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
000000  b430              PUSH     {r4,r5}
;;;819    {
;;;820      uint8_t idx = 0;
000002  2500              MOVS     r5,#0
000004  2800              CMP      r0,#0                 ;819
;;;821      
;;;822      if (desc != NULL) 
;;;823      {
;;;824        *len =  USBD_GetLen(desc) * 2 + 2;    
;;;825        unicode[idx++] = *len;
;;;826        unicode[idx++] =  USB_DESC_TYPE_STRING;
;;;827        
;;;828        while (*desc != NULL) 
;;;829        {
;;;830          unicode[idx++] = *desc++;
;;;831          unicode[idx++] =  0x00;
;;;832        }
;;;833      } 
;;;834    }
000006  bf04              ITT      EQ
000008  bc30              POPEQ    {r4,r5}
00000a  4770              BXEQ     lr
00000c  4603              MOV      r3,r0                 ;824
00000e  7804              LDRB     r4,[r0,#0]            ;824
000010  f04f0c00          MOV      r12,#0                ;824
000014  b13c              CBZ      r4,|L2.38|
                  |L2.22|
000016  f8134f01          LDRB     r4,[r3,#1]!           ;824
00001a  f10c0c01          ADD      r12,r12,#1            ;824
00001e  f00c0cff          AND      r12,r12,#0xff         ;824
000022  2c00              CMP      r4,#0                 ;824
000024  d1f7              BNE      |L2.22|
                  |L2.38|
000026  2302              MOVS     r3,#2                 ;824
000028  eb03034c          ADD      r3,r3,r12,LSL #1      ;824
00002c  8013              STRH     r3,[r2,#0]            ;824
00002e  554b              STRB     r3,[r1,r5]            ;825
000030  1c6a              ADDS     r2,r5,#1              ;825
000032  2303              MOVS     r3,#3                 ;826
000034  548b              STRB     r3,[r1,r2]            ;826
000036  7803              LDRB     r3,[r0,#0]            ;828
000038  1caa              ADDS     r2,r5,#2              ;826
00003a  2b00              CMP      r3,#0                 ;828
00003c  bf12              ITEE     NE                    ;828
00003e  2300              MOVNE    r3,#0                 ;828
000040  bc30              POPEQ    {r4,r5}
000042  4770              BXEQ     lr
                  |L2.68|
000044  f890c000          LDRB     r12,[r0,#0]           ;830
000048  f801c002          STRB     r12,[r1,r2]           ;830
00004c  1c52              ADDS     r2,r2,#1              ;830
00004e  b2d2              UXTB     r2,r2                 ;830
000050  548b              STRB     r3,[r1,r2]            ;831
000052  1c52              ADDS     r2,r2,#1              ;831
000054  f810cf01          LDRB     r12,[r0,#1]!          ;828
000058  b2d2              UXTB     r2,r2                 ;831
00005a  f1bc0f00          CMP      r12,#0                ;828
00005e  d1f1              BNE      |L2.68|
000060  bc30              POP      {r4,r5}
000062  4770              BX       lr
;;;835    
                          ENDP


                          AREA ||i.USBD_ParseSetupRequest||, CODE, READONLY, ALIGN=1

                  USBD_ParseSetupRequest PROC
;;;778    
;;;779    void USBD_ParseSetupRequest( USB_OTG_CORE_HANDLE  *pdev,
000000  f89025cc          LDRB     r2,[r0,#0x5cc]
;;;780                                USB_SETUP_REQ *req)
;;;781    {
;;;782      req->bmRequest     = *(uint8_t *)  (pdev->dev.setup_packet);
000004  700a              STRB     r2,[r1,#0]
;;;783      req->bRequest      = *(uint8_t *)  (pdev->dev.setup_packet +  1);
000006  f89025cd          LDRB     r2,[r0,#0x5cd]
00000a  704a              STRB     r2,[r1,#1]
;;;784      req->wValue        = SWAPBYTE      (pdev->dev.setup_packet +  2);
00000c  f89025ce          LDRB     r2,[r0,#0x5ce]
000010  f89035cf          LDRB     r3,[r0,#0x5cf]
000014  eb022203          ADD      r2,r2,r3,LSL #8
000018  804a              STRH     r2,[r1,#2]
;;;785      req->wIndex        = SWAPBYTE      (pdev->dev.setup_packet +  4);
00001a  f89025d0          LDRB     r2,[r0,#0x5d0]
00001e  f89035d1          LDRB     r3,[r0,#0x5d1]
000022  eb022203          ADD      r2,r2,r3,LSL #8
000026  808a              STRH     r2,[r1,#4]
;;;786      req->wLength       = SWAPBYTE      (pdev->dev.setup_packet +  6);
000028  f89025d2          LDRB     r2,[r0,#0x5d2]
00002c  f89035d3          LDRB     r3,[r0,#0x5d3]
000030  eb022203          ADD      r2,r2,r3,LSL #8
000034  b292              UXTH     r2,r2
000036  80ca              STRH     r2,[r1,#6]
;;;787      
;;;788      pdev->dev.in_ep[0].ctl_data_len = req->wLength  ;
;;;789      pdev->dev.device_state = USB_OTG_EP0_SETUP;
000038  2101              MOVS     r1,#1
00003a  f8c02140          STR      r2,[r0,#0x140]
00003e  f8801111          STRB     r1,[r0,#0x111]
;;;790    }
000042  4770              BX       lr
;;;791    
                          ENDP


                          AREA ||i.USBD_StdDevReq||, CODE, READONLY, ALIGN=2

                  USBD_StdDevReq PROC
;;;147    */
;;;148    USBD_Status  USBD_StdDevReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
000000  b5f8              PUSH     {r3-r7,lr}
;;;149    {
000002  460d              MOV      r5,r1
;;;150      USBD_Status ret = USBD_OK;  
;;;151      
;;;152      switch (req->bRequest) 
000004  7849              LDRB     r1,[r1,#1]
000006  2600              MOVS     r6,#0                 ;150
000008  290a              CMP      r1,#0xa
00000a  f0808120          BCS.W    |L4.590|
00000e  e8dff001          TBB      [pc,r1]
000012  eeed              DCB      0xee,0xed
000014  ecebeca0          DCB      0xec,0xeb,0xec,0xa0
000018  05eceac0          DCB      0x05,0xec,0xea,0xc0
;;;153      {
;;;154      case USB_REQ_GET_DESCRIPTOR: 
;;;155        
;;;156        USBD_GetDescriptor (pdev, req) ;
00001c  4604              MOV      r4,r0
00001e  8868              LDRH     r0,[r5,#2]
000020  0a01              LSRS     r1,r0,#8
000022  2908              CMP      r1,#8
000024  f08080c1          BCS.W    |L4.426|
000028  e8dff001          TBB      [pc,r1]
00002c  bf04142c          DCB      0xbf,0x04,0x14,0x2c
000030  bfbf6477          DCB      0xbf,0xbf,0x64,0x77
000034  f8d415ec          LDR      r1,[r4,#0x5ec]
000038  78a0              LDRB     r0,[r4,#2]
00003a  680a              LDR      r2,[r1,#0]
00003c  4669              MOV      r1,sp
00003e  4790              BLX      r2
000040  4601              MOV      r1,r0
000042  88e8              LDRH     r0,[r5,#6]
000044  2840              CMP      r0,#0x40
000046  bf1a              ITTE     NE
000048  f8940112          LDRBNE   r0,[r4,#0x112]
00004c  2801              CMPNE    r0,#1
00004e  2008              MOVEQ    r0,#8
000050  d060              BEQ      |L4.276|
000052  e06d              B        |L4.304|
000054  f8d415e4          LDR      r1,[r4,#0x5e4]
000058  78a0              LDRB     r0,[r4,#2]
00005a  6a8a              LDR      r2,[r1,#0x28]
00005c  4669              MOV      r1,sp
00005e  4790              BLX      r2
000060  4601              MOV      r1,r0
000062  78a0              LDRB     r0,[r4,#2]
000064  2801              CMP      r0,#1
000066  bf04              ITT      EQ
000068  7a22              LDRBEQ   r2,[r4,#8]
00006a  2a01              CMPEQ    r2,#1
00006c  d105              BNE      |L4.122|
00006e  f8d415e4          LDR      r1,[r4,#0x5e4]
000072  6aca              LDR      r2,[r1,#0x2c]
000074  4669              MOV      r1,sp
000076  4790              BLX      r2
000078  4601              MOV      r1,r0
                  |L4.122|
00007a  2002              MOVS     r0,#2
00007c  7048              STRB     r0,[r1,#1]
00007e  f8c415f0          STR      r1,[r4,#0x5f0]
000082  e055              B        |L4.304|
000084  b2c0              UXTB     r0,r0
000086  2806              CMP      r0,#6
000088  d27c              BCS      |L4.388|
00008a  e8dff000          TBB      [pc,r0]
00008e  030b              DCB      0x03,0x0b
000090  131b232b          DCB      0x13,0x1b,0x23,0x2b
000094  f8d415ec          LDR      r1,[r4,#0x5ec]
000098  78a0              LDRB     r0,[r4,#2]
00009a  684a              LDR      r2,[r1,#4]
00009c  4669              MOV      r1,sp
00009e  4790              BLX      r2
0000a0  4601              MOV      r1,r0
0000a2  e045              B        |L4.304|
0000a4  f8d415ec          LDR      r1,[r4,#0x5ec]
0000a8  78a0              LDRB     r0,[r4,#2]
0000aa  688a              LDR      r2,[r1,#8]
0000ac  4669              MOV      r1,sp
0000ae  4790              BLX      r2
0000b0  4601              MOV      r1,r0
0000b2  e03d              B        |L4.304|
0000b4  f8d415ec          LDR      r1,[r4,#0x5ec]
0000b8  78a0              LDRB     r0,[r4,#2]
0000ba  68ca              LDR      r2,[r1,#0xc]
0000bc  4669              MOV      r1,sp
0000be  4790              BLX      r2
0000c0  4601              MOV      r1,r0
0000c2  e035              B        |L4.304|
0000c4  f8d415ec          LDR      r1,[r4,#0x5ec]
0000c8  78a0              LDRB     r0,[r4,#2]
0000ca  690a              LDR      r2,[r1,#0x10]
0000cc  4669              MOV      r1,sp
0000ce  4790              BLX      r2
0000d0  4601              MOV      r1,r0
0000d2  e02d              B        |L4.304|
0000d4  f8d415ec          LDR      r1,[r4,#0x5ec]
0000d8  78a0              LDRB     r0,[r4,#2]
0000da  694a              LDR      r2,[r1,#0x14]
0000dc  4669              MOV      r1,sp
0000de  4790              BLX      r2
0000e0  4601              MOV      r1,r0
0000e2  e025              B        |L4.304|
0000e4  f8d415ec          LDR      r1,[r4,#0x5ec]
0000e8  78a0              LDRB     r0,[r4,#2]
0000ea  698a              LDR      r2,[r1,#0x18]
0000ec  4669              MOV      r1,sp
0000ee  4790              BLX      r2
0000f0  4601              MOV      r1,r0
0000f2  e01d              B        |L4.304|
0000f4  78a0              LDRB     r0,[r4,#2]
0000f6  2800              CMP      r0,#0
0000f8  d157              BNE      |L4.426|
0000fa  f8d415e4          LDR      r1,[r4,#0x5e4]
0000fe  6a8a              LDR      r2,[r1,#0x28]
000100  4669              MOV      r1,sp
000102  4790              BLX      r2
000104  498d              LDR      r1,|L4.828|
000106  7b82              LDRB     r2,[r0,#0xe]
000108  710a              STRB     r2,[r1,#4]
00010a  7bc2              LDRB     r2,[r0,#0xf]
00010c  714a              STRB     r2,[r1,#5]
00010e  7c00              LDRB     r0,[r0,#0x10]
000110  7188              STRB     r0,[r1,#6]
000112  200a              MOVS     r0,#0xa
                  |L4.276|
000114  f8ad0000          STRH     r0,[sp,#0]
000118  e00e              B        |L4.312|
00011a  78a0              LDRB     r0,[r4,#2]
00011c  2800              CMP      r0,#0
00011e  d144              BNE      |L4.426|
000120  f8d415e4          LDR      r1,[r4,#0x5e4]
000124  6aca              LDR      r2,[r1,#0x2c]
000126  4669              MOV      r1,sp
000128  4790              BLX      r2
00012a  4601              MOV      r1,r0
00012c  2007              MOVS     r0,#7
00012e  7048              STRB     r0,[r1,#1]
                  |L4.304|
000130  f8bd0000          LDRH     r0,[sp,#0]
000134  2800              CMP      r0,#0
000136  d043              BEQ      |L4.448|
                  |L4.312|
000138  88e8              LDRH     r0,[r5,#6]
00013a  2800              CMP      r0,#0
00013c  d040              BEQ      |L4.448|
00013e  f8bd2000          LDRH     r2,[sp,#0]
000142  4290              CMP      r0,r2
000144  bf88              IT       HI
000146  4610              MOVHI    r0,r2
000148  f8ad0000          STRH     r0,[sp,#0]
00014c  b282              UXTH     r2,r0
00014e  4620              MOV      r0,r4
000150  e089              B        |L4.614|
;;;157        break;
;;;158        
;;;159      case USB_REQ_SET_ADDRESS:                      
;;;160        USBD_SetAddress(pdev, req);
000152  4604              MOV      r4,r0
000154  88a8              LDRH     r0,[r5,#4]
000156  2800              CMP      r0,#0
000158  bf04              ITT      EQ
00015a  88e8              LDRHEQ   r0,[r5,#6]
00015c  2800              CMPEQ    r0,#0
00015e  d124              BNE      |L4.426|
000160  78a8              LDRB     r0,[r5,#2]
000162  f000057f          AND      r5,r0,#0x7f
000166  f8940112          LDRB     r0,[r4,#0x112]
00016a  2803              CMP      r0,#3
00016c  d01d              BEQ      |L4.426|
00016e  f8845114          STRB     r5,[r4,#0x114]
000172  4629              MOV      r1,r5
000174  4620              MOV      r0,r4
000176  f7fffffe          BL       DCD_EP_SetAddress
00017a  4620              MOV      r0,r4
00017c  f7fffffe          BL       USBD_CtlSendStatus
000180  2d00              CMP      r5,#0
000182  e000              B        |L4.390|
                  |L4.388|
000184  e011              B        |L4.426|
                  |L4.390|
000186  bf0c              ITE      EQ
000188  2001              MOVEQ    r0,#1
00018a  2002              MOVNE    r0,#2
00018c  f8840112          STRB     r0,[r4,#0x112]
000190  e016              B        |L4.448|
000192  78a9              LDRB     r1,[r5,#2]
000194  4d6a              LDR      r5,|L4.832|
;;;161        break;
;;;162        
;;;163      case USB_REQ_SET_CONFIGURATION:                    
;;;164        USBD_SetConfig (pdev , req);
000196  4604              MOV      r4,r0
000198  2901              CMP      r1,#1
00019a  7029              STRB     r1,[r5,#0]
00019c  d805              BHI      |L4.426|
00019e  f8940112          LDRB     r0,[r4,#0x112]
0001a2  2802              CMP      r0,#2
0001a4  d00e              BEQ      |L4.452|
0001a6  2803              CMP      r0,#3
0001a8  d022              BEQ      |L4.496|
                  |L4.426|
0001aa  2180              MOVS     r1,#0x80
0001ac  4620              MOV      r0,r4
0001ae  f7fffffe          BL       DCD_EP_Stall
0001b2  2100              MOVS     r1,#0
0001b4  4620              MOV      r0,r4
0001b6  f7fffffe          BL       DCD_EP_Stall
0001ba  4620              MOV      r0,r4
0001bc  f7fffffe          BL       USB_OTG_EP0_OutStart
                  |L4.448|
;;;165        break;
;;;166        
;;;167      case USB_REQ_GET_CONFIGURATION:                 
;;;168        USBD_GetConfig (pdev , req);
;;;169        break;
;;;170        
;;;171      case USB_REQ_GET_STATUS:                                  
;;;172        USBD_GetStatus (pdev , req);
;;;173        break;
;;;174        
;;;175        
;;;176      case USB_REQ_SET_FEATURE:   
;;;177        USBD_SetFeature (pdev , req);    
;;;178        break;
;;;179        
;;;180      case USB_REQ_CLEAR_FEATURE:                                   
;;;181        USBD_ClrFeature (pdev , req);
;;;182        break;
;;;183        
;;;184      default:  
;;;185        USBD_CtlError(pdev , req);
;;;186        break;
;;;187      }
;;;188      
;;;189      return ret;
0001c0  4630              MOV      r0,r6
;;;190    }
0001c2  bdf8              POP      {r3-r7,pc}
                  |L4.452|
0001c4  b159              CBZ      r1,|L4.478|
0001c6  f8841110          STRB     r1,[r4,#0x110]
0001ca  2003              MOVS     r0,#3
0001cc  f8840112          STRB     r0,[r4,#0x112]
0001d0  4620              MOV      r0,r4
0001d2  f7fffffe          BL       USBD_SetCfg
0001d6  4620              MOV      r0,r4
0001d8  f7fffffe          BL       USBD_CtlSendStatus
0001dc  e7f0              B        |L4.448|
                  |L4.478|
0001de  4620              MOV      r0,r4
0001e0  f7fffffe          BL       USBD_CtlSendStatus
0001e4  e7ec              B        |L4.448|
0001e6  e022              B        |L4.558|
0001e8  e052              B        |L4.656|
0001ea  e030              B        |L4.590|
0001ec  e08d              B        |L4.778|
0001ee  e03d              B        |L4.620|
                  |L4.496|
0001f0  b189              CBZ      r1,|L4.534|
0001f2  f8940110          LDRB     r0,[r4,#0x110]
0001f6  4288              CMP      r0,r1
0001f8  d0f1              BEQ      |L4.478|
0001fa  4601              MOV      r1,r0
0001fc  4620              MOV      r0,r4
0001fe  f7fffffe          BL       USBD_ClrCfg
000202  7829              LDRB     r1,[r5,#0]  ; cfgidx
000204  f8841110          STRB     r1,[r4,#0x110]
000208  4620              MOV      r0,r4
00020a  f7fffffe          BL       USBD_SetCfg
00020e  4620              MOV      r0,r4
000210  f7fffffe          BL       USBD_CtlSendStatus
000214  e7d4              B        |L4.448|
                  |L4.534|
000216  2002              MOVS     r0,#2
000218  f8840112          STRB     r0,[r4,#0x112]
00021c  f8841110          STRB     r1,[r4,#0x110]
000220  4620              MOV      r0,r4
000222  f7fffffe          BL       USBD_ClrCfg
000226  4620              MOV      r0,r4
000228  f7fffffe          BL       USBD_CtlSendStatus
00022c  e7c8              B        |L4.448|
                  |L4.558|
00022e  88e9              LDRH     r1,[r5,#6]
000230  2901              CMP      r1,#1
000232  d10c              BNE      |L4.590|
000234  f8901112          LDRB     r1,[r0,#0x112]
000238  2902              CMP      r1,#2
00023a  bf04              ITT      EQ
00023c  2201              MOVEQ    r2,#1
00023e  4941              LDREQ    r1,|L4.836|
000240  d011              BEQ      |L4.614|
000242  2903              CMP      r1,#3
000244  bf04              ITT      EQ
000246  2201              MOVEQ    r2,#1
000248  f5007188          ADDEQ    r1,r0,#0x110
00024c  d00b              BEQ      |L4.614|
                  |L4.590|
00024e  4604              MOV      r4,r0
000250  2180              MOVS     r1,#0x80
000252  f7fffffe          BL       DCD_EP_Stall
000256  2100              MOVS     r1,#0
000258  4620              MOV      r0,r4
00025a  f7fffffe          BL       DCD_EP_Stall
00025e  4620              MOV      r0,r4
000260  f7fffffe          BL       USB_OTG_EP0_OutStart
000264  e7ac              B        |L4.448|
                  |L4.614|
000266  f7fffffe          BL       USBD_CtlSendData
00026a  e7a9              B        |L4.448|
                  |L4.620|
00026c  f8901112          LDRB     r1,[r0,#0x112]
000270  2902              CMP      r1,#2
000272  bf18              IT       NE
000274  2903              CMPNE    r1,#3
000276  d1ea              BNE      |L4.590|
000278  4931              LDR      r1,|L4.832|
00027a  2201              MOVS     r2,#1
00027c  60ca              STR      r2,[r1,#0xc]  ; USBD_cfg_status
00027e  f8d02118          LDR      r2,[r0,#0x118]
000282  2a00              CMP      r2,#0
000284  bf1c              ITT      NE
000286  2203              MOVNE    r2,#3
000288  60ca              STRNE    r2,[r1,#0xc]  ; USBD_cfg_status
00028a  2202              MOVS     r2,#2
00028c  492e              LDR      r1,|L4.840|
00028e  e7ea              B        |L4.614|
                  |L4.656|
000290  4604              MOV      r4,r0                 ;177
000292  8868              LDRH     r0,[r5,#2]            ;177
000294  4629              MOV      r1,r5                 ;177
000296  2801              CMP      r0,#1                 ;177
000298  d00f              BEQ      |L4.698|
00029a  2802              CMP      r0,#2                 ;177
00029c  d190              BNE      |L4.448|
00029e  88a9              LDRH     r1,[r5,#4]            ;177
0002a0  f0110fff          TST      r1,#0xff              ;177
0002a4  d18c              BNE      |L4.448|
0002a6  6920              LDR      r0,[r4,#0x10]         ;177
0002a8  6840              LDR      r0,[r0,#4]            ;177
0002aa  0a09              LSRS     r1,r1,#8              ;177
0002ac  2906              CMP      r1,#6                 ;177
0002ae  d223              BCS      |L4.760|
0002b0  e8dff001          TBB      [pc,r1]               ;177
0002b4  220f1317          DCB      0x22,0x0f,0x13,0x17
0002b8  1b1f              DCB      0x1b,0x1f
                  |L4.698|
0002ba  2001              MOVS     r0,#1                 ;177
0002bc  f8c40118          STR      r0,[r4,#0x118]        ;177
0002c0  f8d405e4          LDR      r0,[r4,#0x5e4]        ;177
0002c4  6882              LDR      r2,[r0,#8]            ;177
0002c6  4620              MOV      r0,r4                 ;177
0002c8  4790              BLX      r2                    ;177
0002ca  4620              MOV      r0,r4                 ;177
0002cc  f7fffffe          BL       USBD_CtlSendStatus
0002d0  e776              B        |L4.448|
0002d2  f0200070          BIC      r0,r0,#0x70           ;177
0002d6  3010              ADDS     r0,r0,#0x10           ;177
0002d8  e00e              B        |L4.760|
0002da  f0200070          BIC      r0,r0,#0x70           ;177
0002de  3020              ADDS     r0,r0,#0x20           ;177
0002e0  e00a              B        |L4.760|
0002e2  f0200070          BIC      r0,r0,#0x70           ;177
0002e6  3030              ADDS     r0,r0,#0x30           ;177
0002e8  e006              B        |L4.760|
0002ea  f0200070          BIC      r0,r0,#0x70           ;177
0002ee  3040              ADDS     r0,r0,#0x40           ;177
0002f0  e002              B        |L4.760|
0002f2  f0200070          BIC      r0,r0,#0x70           ;177
0002f6  3050              ADDS     r0,r0,#0x50           ;177
                  |L4.760|
0002f8  4914              LDR      r1,|L4.844|
0002fa  6008              STR      r0,[r1,#0]            ;177  ; SET_TEST_MODE
0002fc  2001              MOVS     r0,#1                 ;177
0002fe  f8840116          STRB     r0,[r4,#0x116]        ;177
000302  4620              MOV      r0,r4                 ;177
000304  f7fffffe          BL       USBD_CtlSendStatus
000308  e75a              B        |L4.448|
                  |L4.778|
00030a  4604              MOV      r4,r0                 ;181
00030c  f8900112          LDRB     r0,[r0,#0x112]        ;181
000310  4629              MOV      r1,r5                 ;181
000312  2802              CMP      r0,#2                 ;181
000314  bf18              IT       NE                    ;181
000316  2803              CMPNE    r0,#3                 ;181
000318  f47faf47          BNE      |L4.426|
00031c  8848              LDRH     r0,[r1,#2]            ;181
00031e  2801              CMP      r0,#1                 ;181
000320  f47faf4e          BNE      |L4.448|
000324  2000              MOVS     r0,#0                 ;181
000326  f8c40118          STR      r0,[r4,#0x118]        ;181
00032a  f8d405e4          LDR      r0,[r4,#0x5e4]        ;181
00032e  6882              LDR      r2,[r0,#8]            ;181
000330  4620              MOV      r0,r4                 ;181
000332  4790              BLX      r2                    ;181
000334  4620              MOV      r0,r4                 ;181
000336  f7fffffe          BL       USBD_CtlSendStatus
00033a  e741              B        |L4.448|
;;;191    
                          ENDP

                  |L4.828|
                          DCD      USBD_DeviceQualifierDesc
                  |L4.832|
                          DCD      ||.data||
                  |L4.836|
                          DCD      ||.data||+0x8
                  |L4.840|
                          DCD      ||.data||+0xc
                  |L4.844|
                          DCD      SET_TEST_MODE

                          AREA ||i.USBD_StdEPReq||, CODE, READONLY, ALIGN=2

                  USBD_StdEPReq PROC
;;;235    */
;;;236    USBD_Status  USBD_StdEPReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
000000  b570              PUSH     {r4-r6,lr}
;;;237    {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;238      
;;;239      uint8_t   ep_addr;
;;;240      USBD_Status ret = USBD_OK; 
;;;241      
;;;242      ep_addr  = LOBYTE(req->wIndex);   
;;;243      
;;;244      switch (req->bRequest) 
000006  7868              LDRB     r0,[r5,#1]
000008  2600              MOVS     r6,#0                 ;240
00000a  7909              LDRB     r1,[r1,#4]            ;242
00000c  2800              CMP      r0,#0
00000e  d043              BEQ      |L5.152|
000010  2801              CMP      r0,#1
000012  d022              BEQ      |L5.90|
000014  2803              CMP      r0,#3
000016  d150              BNE      |L5.186|
;;;245      {
;;;246        
;;;247      case USB_REQ_SET_FEATURE :
;;;248        
;;;249        switch (pdev->dev.device_status) 
000018  f8940112          LDRB     r0,[r4,#0x112]
00001c  2802              CMP      r0,#2
00001e  d002              BEQ      |L5.38|
000020  2803              CMP      r0,#3
000022  d008              BEQ      |L5.54|
000024  e03e              B        |L5.164|
                  |L5.38|
;;;250        {
;;;251        case USB_OTG_ADDRESSED:          
;;;252          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
000026  2900              CMP      r1,#0
000028  bf18              IT       NE
00002a  2980              CMPNE    r1,#0x80
00002c  d045              BEQ      |L5.186|
                  |L5.46|
;;;253          {
;;;254            DCD_EP_Stall(pdev , ep_addr);
;;;255          }
;;;256          break;	
;;;257          
;;;258        case USB_OTG_CONFIGURED:   
;;;259          if (req->wValue == USB_FEATURE_EP_HALT)
;;;260          {
;;;261            if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
;;;262            { 
;;;263              DCD_EP_Stall(pdev , ep_addr);
;;;264              
;;;265            }
;;;266          }
;;;267          pdev->dev.class_cb->Setup (pdev, req);   
;;;268          USBD_CtlSendStatus(pdev);
;;;269          
;;;270          break;
;;;271          
;;;272        default:                         
;;;273          USBD_CtlError(pdev , req);
;;;274          break;    
;;;275        }
;;;276        break;
;;;277        
;;;278      case USB_REQ_CLEAR_FEATURE :
;;;279        
;;;280        switch (pdev->dev.device_status) 
;;;281        {
;;;282        case USB_OTG_ADDRESSED:          
;;;283          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
;;;284          {
;;;285            DCD_EP_Stall(pdev , ep_addr);
;;;286          }
;;;287          break;	
;;;288          
;;;289        case USB_OTG_CONFIGURED:   
;;;290          if (req->wValue == USB_FEATURE_EP_HALT)
;;;291          {
;;;292            if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
;;;293            {        
;;;294              DCD_EP_ClrStall(pdev , ep_addr);
;;;295              pdev->dev.class_cb->Setup (pdev, req);
;;;296            }
;;;297            USBD_CtlSendStatus(pdev);
;;;298          }
;;;299          break;
;;;300          
;;;301        default:                         
;;;302           USBD_CtlError(pdev , req);
;;;303          break;    
;;;304        }
;;;305        break;
;;;306        
;;;307      case USB_REQ_GET_STATUS:                  
;;;308        switch (pdev->dev.device_status) 
;;;309        {
;;;310        case USB_OTG_ADDRESSED:          
;;;311          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
;;;312          {
;;;313            DCD_EP_Stall(pdev , ep_addr);
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       DCD_EP_Stall
000034  e041              B        |L5.186|
                  |L5.54|
000036  8868              LDRH     r0,[r5,#2]            ;259
000038  b928              CBNZ     r0,|L5.70|
00003a  2900              CMP      r1,#0                 ;261
00003c  bf1e              ITTT     NE                    ;261
00003e  2980              CMPNE    r1,#0x80              ;261
000040  4620              MOVNE    r0,r4                 ;263
000042  f7fffffe          BLNE     DCD_EP_Stall
                  |L5.70|
000046  f8d405e4          LDR      r0,[r4,#0x5e4]        ;267
00004a  4629              MOV      r1,r5                 ;267
00004c  6882              LDR      r2,[r0,#8]            ;267
00004e  4620              MOV      r0,r4                 ;267
000050  4790              BLX      r2                    ;267
000052  4620              MOV      r0,r4                 ;268
000054  f7fffffe          BL       USBD_CtlSendStatus
000058  e02f              B        |L5.186|
                  |L5.90|
00005a  f8940112          LDRB     r0,[r4,#0x112]        ;280
00005e  2802              CMP      r0,#2                 ;280
000060  d002              BEQ      |L5.104|
000062  2803              CMP      r0,#3                 ;280
000064  d005              BEQ      |L5.114|
000066  e01d              B        |L5.164|
                  |L5.104|
000068  2900              CMP      r1,#0                 ;283
00006a  bf18              IT       NE                    ;283
00006c  2980              CMPNE    r1,#0x80              ;283
00006e  d1de              BNE      |L5.46|
000070  e023              B        |L5.186|
                  |L5.114|
000072  8868              LDRH     r0,[r5,#2]            ;290
000074  bb08              CBNZ     r0,|L5.186|
000076  2900              CMP      r1,#0                 ;292
000078  bf18              IT       NE                    ;292
00007a  2980              CMPNE    r1,#0x80              ;292
00007c  d008              BEQ      |L5.144|
00007e  4620              MOV      r0,r4                 ;294
000080  f7fffffe          BL       DCD_EP_ClrStall
000084  f8d405e4          LDR      r0,[r4,#0x5e4]        ;295
000088  4629              MOV      r1,r5                 ;295
00008a  6882              LDR      r2,[r0,#8]            ;295
00008c  4620              MOV      r0,r4                 ;295
00008e  4790              BLX      r2                    ;295
                  |L5.144|
000090  4620              MOV      r0,r4                 ;297
000092  f7fffffe          BL       USBD_CtlSendStatus
000096  e010              B        |L5.186|
                  |L5.152|
000098  f8940112          LDRB     r0,[r4,#0x112]        ;308
00009c  2802              CMP      r0,#2                 ;308
00009e  d00e              BEQ      |L5.190|
0000a0  2803              CMP      r0,#3                 ;308
0000a2  d011              BEQ      |L5.200|
                  |L5.164|
0000a4  2180              MOVS     r1,#0x80              ;308
0000a6  4620              MOV      r0,r4                 ;308
0000a8  f7fffffe          BL       DCD_EP_Stall
0000ac  2100              MOVS     r1,#0                 ;308
0000ae  4620              MOV      r0,r4                 ;308
0000b0  f7fffffe          BL       DCD_EP_Stall
0000b4  4620              MOV      r0,r4                 ;308
0000b6  f7fffffe          BL       USB_OTG_EP0_OutStart
                  |L5.186|
;;;314          }
;;;315          break;	
;;;316          
;;;317        case USB_OTG_CONFIGURED:         
;;;318          
;;;319          
;;;320          if ((ep_addr & 0x80)== 0x80)
;;;321          {
;;;322            if(pdev->dev.in_ep[ep_addr & 0x7F].is_stall)
;;;323            {
;;;324              USBD_ep_status = 0x0001;     
;;;325            }
;;;326            else
;;;327            {
;;;328              USBD_ep_status = 0x0000;  
;;;329            }
;;;330          }
;;;331          else if ((ep_addr & 0x80)== 0x00)
;;;332          {
;;;333            if(pdev->dev.out_ep[ep_addr].is_stall)
;;;334            {
;;;335              USBD_ep_status = 0x0001;     
;;;336            }
;;;337            
;;;338            else 
;;;339            {
;;;340              USBD_ep_status = 0x0000;     
;;;341            }      
;;;342          }
;;;343          USBD_CtlSendData (pdev,
;;;344                            (uint8_t *)&USBD_ep_status,
;;;345                            2);
;;;346          break;
;;;347          
;;;348        default:                         
;;;349           USBD_CtlError(pdev , req);
;;;350          break;
;;;351        }
;;;352        break;
;;;353        
;;;354      default:
;;;355        break;
;;;356      }
;;;357      return ret;
0000ba  4630              MOV      r0,r6
;;;358    }
0000bc  bd70              POP      {r4-r6,pc}
                  |L5.190|
0000be  2900              CMP      r1,#0                 ;311
0000c0  bf18              IT       NE                    ;311
0000c2  2980              CMPNE    r1,#0x80              ;311
0000c4  d1b3              BNE      |L5.46|
0000c6  e7f8              B        |L5.186|
                  |L5.200|
0000c8  4a11              LDR      r2,|L5.272|
0000ca  f0110f80          TST      r1,#0x80              ;320
0000ce  f04f0300          MOV      r3,#0                 ;320
0000d2  f04f0c01          MOV      r12,#1                ;244
0000d6  d009              BEQ      |L5.236|
0000d8  f001007f          AND      r0,r1,#0x7f           ;322
0000dc  eb000080          ADD      r0,r0,r0,LSL #2       ;322
0000e0  eb0400c0          ADD      r0,r4,r0,LSL #3       ;322
0000e4  f890011e          LDRB     r0,[r0,#0x11e]        ;322
0000e8  b150              CBZ      r0,|L5.256|
0000ea  e006              B        |L5.250|
                  |L5.236|
0000ec  eb010081          ADD      r0,r1,r1,LSL #2       ;333
0000f0  eb0400c0          ADD      r0,r4,r0,LSL #3       ;333
0000f4  f8900376          LDRB     r0,[r0,#0x376]        ;333
0000f8  b110              CBZ      r0,|L5.256|
                  |L5.250|
0000fa  f8c2c004          STR      r12,[r2,#4]           ;335  ; USBD_ep_status
0000fe  e000              B        |L5.258|
                  |L5.256|
000100  6053              STR      r3,[r2,#4]            ;340  ; USBD_ep_status
                  |L5.258|
000102  2202              MOVS     r2,#2                 ;343
000104  4903              LDR      r1,|L5.276|
000106  4620              MOV      r0,r4                 ;343
000108  f7fffffe          BL       USBD_CtlSendData
00010c  e7d5              B        |L5.186|
;;;359    /**
                          ENDP

00010e  0000              DCW      0x0000
                  |L5.272|
                          DCD      ||.data||
                  |L5.276|
                          DCD      ||.data||+0x4

                          AREA ||i.USBD_StdItfReq||, CODE, READONLY, ALIGN=1

                  USBD_StdItfReq PROC
;;;198    */
;;;199    USBD_Status  USBD_StdItfReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
000000  b570              PUSH     {r4-r6,lr}
;;;200    {
000002  4604              MOV      r4,r0
;;;201      USBD_Status ret = USBD_OK; 
;;;202      
;;;203      switch (pdev->dev.device_status) 
000004  f8900112          LDRB     r0,[r0,#0x112]
000008  2600              MOVS     r6,#0                 ;201
00000a  460d              MOV      r5,r1                 ;200
00000c  2803              CMP      r0,#3
00000e  d10e              BNE      |L6.46|
;;;204      {
;;;205      case USB_OTG_CONFIGURED:
;;;206        
;;;207        if (LOBYTE(req->wIndex) <= USBD_ITF_MAX_NUM) 
000010  7928              LDRB     r0,[r5,#4]
000012  2801              CMP      r0,#1
000014  d80b              BHI      |L6.46|
;;;208        {
;;;209          pdev->dev.class_cb->Setup (pdev, req); 
000016  f8d405e4          LDR      r0,[r4,#0x5e4]
00001a  6882              LDR      r2,[r0,#8]
00001c  4620              MOV      r0,r4
00001e  4790              BLX      r2
;;;210          
;;;211          if((req->wLength == 0)&& (ret == USBD_OK))
000020  88e8              LDRH     r0,[r5,#6]
000022  2800              CMP      r0,#0
;;;212          {
;;;213             USBD_CtlSendStatus(pdev);
000024  bf04              ITT      EQ
000026  4620              MOVEQ    r0,r4
000028  f7fffffe          BLEQ     USBD_CtlSendStatus
00002c  e00a              B        |L6.68|
                  |L6.46|
00002e  2180              MOVS     r1,#0x80              ;211
000030  4620              MOV      r0,r4                 ;211
000032  f7fffffe          BL       DCD_EP_Stall
000036  2100              MOVS     r1,#0                 ;211
000038  4620              MOV      r0,r4                 ;211
00003a  f7fffffe          BL       DCD_EP_Stall
00003e  4620              MOV      r0,r4                 ;211
000040  f7fffffe          BL       USB_OTG_EP0_OutStart
                  |L6.68|
;;;214          }
;;;215        } 
;;;216        else 
;;;217        {                                               
;;;218           USBD_CtlError(pdev , req);
;;;219        }
;;;220        break;
;;;221        
;;;222      default:
;;;223         USBD_CtlError(pdev , req);
;;;224        break;
;;;225      }
;;;226      return ret;
000044  4630              MOV      r0,r6
;;;227    }
000046  bd70              POP      {r4-r6,pc}
;;;228    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  USBD_StrDesc
                          %        255

                          AREA ||.data||, DATA, ALIGN=2

                  cfgidx
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  USBD_ep_status
                          DCD      0x00000000
                  USBD_default_cfg
                          DCD      0x00000000
                  USBD_cfg_status
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "arm_hal\\lib\\usb\\usbd_req.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_usbd_req_c_917e11d5____REV16|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___10_usbd_req_c_917e11d5____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_usbd_req_c_917e11d5____REVSH|
#line 144
|__asm___10_usbd_req_c_917e11d5____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
