; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\build\wifi.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\wifi.d --cpu=Cortex-M4.fp --apcs=interwork -Otime -I.\arm_hal -I.\arm_hal\lib -I..\include -I..\coretech\common\include -I..\coretech\messaging\include -I..\coretech\planning\include -I..\coretech\vision\include -I.\supervisor\src -I..\..\coretech-external\heatshrink -IC:\Keil\ARM\Pack\ARM\CMSIS\3.20.4\Device\ARM\ARMCM4\Include -I.\include -DSTM32F429X -DUSE_STDPERIPH_DRIVER -DSTM32F429_439xx -DUSE_DEFAULT_TIMEOUT_CALLBACK -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_FS -DCOZMO_ROBOT -DROBOT_HARDWARE -DCORETECH_ROBOT -DSTM32F429X --omf_browse=.\build\wifi.crf arm_hal\hal\wifi.cpp]
                          THUMB

                          AREA ||i.DMA1_Stream7_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_Stream7_IRQHandler PROC
;;;1250     // Used for SPI transfer-complete interrupt
;;;1251     void DMA1_Stream7_IRQHandler()
000000  b510              PUSH     {r4,lr}
;;;1252     {
;;;1253       using namespace Anki::Cozmo::HAL;
;;;1254       // Clear the transfer-complete interrupt flag
;;;1255       DMA_ClearFlag(DMA1_Stream7, DMA_FLAG_TCIF7);
000002  f04f5120          MOV      r1,#0x28000000
000006  4805              LDR      r0,|L1.28|
000008  f7fffffe          BL       DMA_ClearFlag
;;;1256      
;;;1257       m_isDMAComplete = true;
00000c  4904              LDR      r1,|L1.32|
00000e  2001              MOVS     r0,#1
000010  7088              STRB     r0,[r1,#2]
;;;1258       
;;;1259       // Run the state machine
;;;1260       WifiStateMachine();
000012  e8bd4010          POP      {r4,lr}
000016  f7ffbffe          B.W      _ZN4Anki5Cozmo3HAL16WifiStateMachineEv ; Anki::Cozmo::HAL::WifiStateMachine()
;;;1261     }
;;;1262   
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x400260b8
                  |L1.32|
                          DCD      ||.data||

                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI15_10_IRQHandler PROC
;;;1264     // INTERRUPT pin on rising edge
;;;1265     void EXTI15_10_IRQHandler()
000000  4902              LDR      r1,|L2.12|
;;;1266     {
;;;1267       using namespace Anki::Cozmo::HAL;
;;;1268       
;;;1269       // Clear the pending bits
;;;1270       EXTI->PR = (PIN_SPI_READY | PIN_INTERRUPT);
000002  f44f50a0          MOV      r0,#0x1400
000006  6008              STR      r0,[r1,#0]
;;;1271       
;;;1272       // Run the state machine
;;;1273       WifiStateMachine();
000008  f7ffbffe          B.W      _ZN4Anki5Cozmo3HAL16WifiStateMachineEv ; Anki::Cozmo::HAL::WifiStateMachine()
;;;1274     }
;;;1275   }
                          ENDP

                  |L2.12|
                          DCD      0x40013c14

                          AREA ||i._ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh PROC ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
;;;534          // Blocking version for initialization
;;;535          static int WifiCommand(WifiTransmitCommand commandID, u16 length, 
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;536            const u8* buffer)
;;;537          {
000004  f8dfa12c          LDR      r10,|L3.308|
000008  4605              MOV      r5,r0
00000a  f8df812c          LDR      r8,|L3.312|
00000e  f89a0000          LDRB     r0,[r10,#0]  ; _ZN4Anki5Cozmo3HAL14m_moduleStatusE
000012  4e4a              LDR      r6,|L3.316|
000014  b083              SUB      sp,sp,#0xc
000016  4693              MOV      r11,r2
000018  460f              MOV      r7,r1
;;;538            int status = WifiSendHeader(commandID, length, buffer);
00001a  460c              MOV      r4,r1
00001c  f0100f01          TST      r0,#1
000020  f04f0900          MOV      r9,#0
000024  bf18              IT       NE
000026  f04f30ff          MOVNE    r0,#0xffffffff
00002a  d14b              BNE      |L3.196|
                  |L3.44|
00002c  6830              LDR      r0,[r6,#0]            ;537
00002e  f4105f80          TST      r0,#0x1000            ;537
000032  d1fb              BNE      |L3.44|
000034  f88d4000          STRB     r4,[sp,#0]            ;537
000038  4a3f              LDR      r2,|L3.312|
00003a  4669              MOV      r1,sp                 ;537
00003c  2001              MOVS     r0,#1                 ;537
00003e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000042  2d00              CMP      r5,#0                 ;537
000044  bf14              ITE      NE                    ;537
000046  2000              MOVNE    r0,#0                 ;537
000048  2001              MOVEQ    r0,#1                 ;537
00004a  f3c42103          UBFX     r1,r4,#8,#4           ;537
00004e  ea411040          ORR      r0,r1,r0,LSL #5       ;537
000052  f88d0000          STRB     r0,[sp,#0]            ;537
000056  f1080201          ADD      r2,r8,#1              ;537
00005a  4669              MOV      r1,sp                 ;537
00005c  2001              MOVS     r0,#1                 ;537
00005e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000062  f88d9000          STRB     r9,[sp,#0]            ;537
000066  f1080202          ADD      r2,r8,#2              ;537
00006a  4669              MOV      r1,sp                 ;537
00006c  2001              MOVS     r0,#1                 ;537
00006e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000072  f1080203          ADD      r2,r8,#3              ;537
000076  4669              MOV      r1,sp                 ;537
000078  2001              MOVS     r0,#1                 ;537
00007a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
                  |L3.126|
00007e  6830              LDR      r0,[r6,#0]            ;537
000080  f4105f80          TST      r0,#0x1000            ;537
000084  d0fb              BEQ      |L3.126|
000086  f88d5004          STRB     r5,[sp,#4]            ;537
00008a  f88d9000          STRB     r9,[sp,#0]            ;537
00008e  2400              MOVS     r4,#0                 ;537
                  |L3.144|
000090  eb080204          ADD      r2,r8,r4              ;537
000094  4669              MOV      r1,sp                 ;537
000096  2001              MOVS     r0,#1                 ;537
000098  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
00009c  1c64              ADDS     r4,r4,#1              ;537
00009e  2c0a              CMP      r4,#0xa               ;537
0000a0  dbf6              BLT      |L3.144|
0000a2  f108020a          ADD      r2,r8,#0xa            ;537
0000a6  a901              ADD      r1,sp,#4              ;537
0000a8  2001              MOVS     r0,#1                 ;537
0000aa  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0000ae  f108020b          ADD      r2,r8,#0xb            ;537
0000b2  4669              MOV      r1,sp                 ;537
0000b4  2001              MOVS     r0,#1                 ;537
0000b6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0000ba  f8980003          LDRB     r0,[r8,#3]            ;537  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
0000be  f88a0000          STRB     r0,[r10,#0]           ;537
0000c2  2000              MOVS     r0,#0                 ;537
                  |L3.196|
;;;539            if (status)
0000c4  2800              CMP      r0,#0
;;;540              return status;
;;;541            
;;;542            if (length)
;;;543              SPI_SendReceive(length, buffer, m_payloadRead);
;;;544            
;;;545            // Read response packet
;;;546            return WifiReceive();
;;;547          }
0000c6  bf1c              ITT      NE
0000c8  b003              ADDNE    sp,sp,#0xc
0000ca  e8bd8ff0          POPNE    {r4-r11,pc}
0000ce  b127              CBZ      r7,|L3.218|
0000d0  4a19              LDR      r2,|L3.312|
0000d2  4659              MOV      r1,r11                ;543
0000d4  4638              MOV      r0,r7                 ;543
0000d6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
                  |L3.218|
0000da  6830              LDR      r0,[r6,#0]            ;543
0000dc  f4106f80          TST      r0,#0x400             ;543
0000e0  d0fb              BEQ      |L3.218|
                  |L3.226|
0000e2  6830              LDR      r0,[r6,#0]            ;543
0000e4  f4105f80          TST      r0,#0x1000            ;543
0000e8  d1fb              BNE      |L3.226|
0000ea  2001              MOVS     r0,#1                 ;543
0000ec  f88d9000          STRB     r9,[sp,#0]            ;543
0000f0  f88d0004          STRB     r0,[sp,#4]            ;543
0000f4  4a10              LDR      r2,|L3.312|
0000f6  4669              MOV      r1,sp                 ;543
0000f8  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0000fc  f1080201          ADD      r2,r8,#1              ;543
000100  4669              MOV      r1,sp                 ;543
000102  2001              MOVS     r0,#1                 ;543
000104  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000108  f1080202          ADD      r2,r8,#2              ;543
00010c  4669              MOV      r1,sp                 ;543
00010e  2001              MOVS     r0,#1                 ;543
000110  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000114  f1080203          ADD      r2,r8,#3              ;543
000118  a901              ADD      r1,sp,#4              ;543
00011a  2001              MOVS     r0,#1                 ;543
00011c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
                  |L3.288|
000120  6830              LDR      r0,[r6,#0]            ;543
000122  f4105f80          TST      r0,#0x1000            ;543
000126  d0fb              BEQ      |L3.288|
000128  b003              ADD      sp,sp,#0xc            ;543
00012a  e8bd4ff0          POP      {r4-r11,lr}           ;543
00012e  f7ffbffe          B.W      _ZN4Anki5Cozmo3HAL15WifiRxSpiReady1Ev ; Anki::Cozmo::HAL::WifiRxSpiReady1()
;;;548    
                          ENDP

000132  0000              DCW      0x0000
                  |L3.308|
                          DCD      ||.data||
                  |L3.312|
                          DCD      OFFCHIP
                  |L3.316|
                          DCD      0x40020810

                          AREA ||i._ZN4Anki5Cozmo3HAL13WifiConfigureEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL13WifiConfigureEv PROC ; Anki::Cozmo::HAL::WifiConfigure()
;;;1126         
;;;1127         static int WifiConfigure()
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1128         {
;;;1129           m_writeHead = m_writeTail = m_readTail = m_readHead = 0;
000004  48fe              LDR      r0,|L4.1024|
000006  b0a9              SUB      sp,sp,#0xa4           ;1128
000008  2600              MOVS     r6,#0
00000a  6006              STR      r6,[r0,#0]  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
00000c  48fd              LDR      r0,|L4.1028|
00000e  6006              STR      r6,[r0,#0]  ; _ZN4Anki5Cozmo3HAL10m_readTailE
000010  48fd              LDR      r0,|L4.1032|
000012  6006              STR      r6,[r0,#0]  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
000014  48fd              LDR      r0,|L4.1036|
000016  6006              STR      r6,[r0,#0]  ; _ZN4Anki5Cozmo3HAL11m_writeHeadE
;;;1130           
;;;1131           StartTransfer = WifiStateMachine;
000018  49fe              LDR      r1,|L4.1044|
00001a  48fd              LDR      r0,|L4.1040|
;;;1132           GetChar = WifiGetCharacter;
00001c  6008              STR      r0,[r1,#0]  ; _ZN4Anki5Cozmo3HAL13StartTransferE
00001e  49ff              LDR      r1,|L4.1052|
000020  48fd              LDR      r0,|L4.1048|
000022  6008              STR      r0,[r1,#0]  ; _ZN4Anki5Cozmo3HAL7GetCharE
000024  2101              MOVS     r1,#1
000026  0548              LSLS     r0,r1,#21
000028  f7fffffe          BL       RCC_AHB1PeriphClockCmd
00002c  2101              MOVS     r1,#1
00002e  4608              MOV      r0,r1
000030  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000034  2101              MOVS     r1,#1
000036  2002              MOVS     r0,#2
000038  f7fffffe          BL       RCC_AHB1PeriphClockCmd
00003c  2101              MOVS     r1,#1
00003e  2004              MOVS     r0,#4
000040  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000044  2101              MOVS     r1,#1
000046  03c8              LSLS     r0,r1,#15
000048  f7fffffe          BL       RCC_APB1PeriphClockCmd
00004c  2101              MOVS     r1,#1
00004e  0388              LSLS     r0,r1,#14
000050  f7fffffe          BL       RCC_APB2PeriphClockCmd
000054  2701              MOVS     r7,#1
000056  f88d7004          STRB     r7,[sp,#4]
00005a  f04f0a03          MOV      r10,#3
00005e  f88da005          STRB     r10,[sp,#5]
000062  4cef              LDR      r4,|L4.1056|
000064  f88d6006          STRB     r6,[sp,#6]
000068  f88d6007          STRB     r6,[sp,#7]
00006c  2206              MOVS     r2,#6
00006e  210a              MOVS     r1,#0xa
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       GPIO_PinAFConfig
000076  2206              MOVS     r2,#6
000078  210b              MOVS     r1,#0xb
00007a  4620              MOV      r0,r4
00007c  f7fffffe          BL       GPIO_PinAFConfig
000080  2206              MOVS     r2,#6
000082  210c              MOVS     r1,#0xc
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       GPIO_PinAFConfig
00008a  f44f50e0          MOV      r0,#0x1c00
00008e  9000              STR      r0,[sp,#0]
000090  2002              MOVS     r0,#2
000092  f88d0004          STRB     r0,[sp,#4]
000096  4669              MOV      r1,sp
000098  4620              MOV      r0,r4
00009a  f7fffffe          BL       GPIO_Init
00009e  f8df8384          LDR      r8,|L4.1060|
0000a2  15a5              ASRS     r5,r4,#22
0000a4  f8a85018          STRH     r5,[r8,#0x18]
0000a8  9500              STR      r5,[sp,#0]
0000aa  f88d7004          STRB     r7,[sp,#4]
0000ae  4669              MOV      r1,sp
0000b0  4640              MOV      r0,r8
0000b2  f7fffffe          BL       GPIO_Init
0000b6  1520              ASRS     r0,r4,#20
0000b8  9000              STR      r0,[sp,#0]
0000ba  f88d6004          STRB     r6,[sp,#4]
0000be  4669              MOV      r1,sp
0000c0  4620              MOV      r0,r4
0000c2  f7fffffe          BL       GPIO_Init
0000c6  14a0              ASRS     r0,r4,#18
0000c8  9000              STR      r0,[sp,#0]
0000ca  4669              MOV      r1,sp
0000cc  4620              MOV      r0,r4
0000ce  f7fffffe          BL       GPIO_Init
0000d2  f8df9354          LDR      r9,|L4.1064|
0000d6  4648              MOV      r0,r9
0000d8  f7fffffe          BL       SPI_I2S_DeInit
0000dc  f8ad6008          STRH     r6,[sp,#8]
0000e0  1d28              ADDS     r0,r5,#4
0000e2  f8ad000a          STRH     r0,[sp,#0xa]
0000e6  f8ad6010          STRH     r6,[sp,#0x10]
0000ea  1560              ASRS     r0,r4,#21
0000ec  f8ad0012          STRH     r0,[sp,#0x12]
0000f0  2008              MOVS     r0,#8
0000f2  f8ad0014          STRH     r0,[sp,#0x14]
0000f6  2007              MOVS     r0,#7
0000f8  f8ad600c          STRH     r6,[sp,#0xc]
0000fc  f8ad0018          STRH     r0,[sp,#0x18]
000100  f8ad600e          STRH     r6,[sp,#0xe]
000104  f8ad6016          STRH     r6,[sp,#0x16]
000108  a902              ADD      r1,sp,#8
00010a  4648              MOV      r0,r9
00010c  f7fffffe          BL       SPI_Init
000110  2101              MOVS     r1,#1
000112  4648              MOV      r0,r9
000114  f7fffffe          BL       SPI_Cmd
000118  f8a85018          STRH     r5,[r8,#0x18]
00011c  6820              LDR      r0,[r4,#0]
00011e  f0207040          BIC      r0,r0,#0x3000000
000122  6020              STR      r0,[r4,#0]
000124  6820              LDR      r0,[r4,#0]
000126  f4201040          BIC      r0,r0,#0x300000
00012a  6020              STR      r0,[r4,#0]
00012c  2001              MOVS     r0,#1
00012e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000132  f8df92f8          LDR      r9,|L4.1068|
000136  f8d90000          LDR      r0,[r9,#0]
00013a  f44050a0          ORR      r0,r0,#0x1400
00013e  f8c90000          STR      r0,[r9,#0]
;;;1133           
;;;1134           WifiConfigurePins();
;;;1135           
;;;1136           SetLED(LED_LEFT_EYE_LEFT, LED_RED);
000142  f44f017f          MOV      r1,#0xff0000
000146  2007              MOVS     r0,#7
000148  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
;;;1137           SetLED(LED_LEFT_EYE_RIGHT, LED_RED);
00014c  f44f017f          MOV      r1,#0xff0000
000150  2005              MOVS     r0,#5
000152  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000156  4db6              LDR      r5,|L4.1072|
000158  4cb6              LDR      r4,|L4.1076|
00015a  f8dfb2dc          LDR      r11,|L4.1080|
00015e  f8df82dc          LDR      r8,|L4.1084|
                  |L4.354|
000162  48b5              LDR      r0,|L4.1080|
000164  6829              LDR      r1,[r5,#0]  ; _ZN4Anki5Cozmo3HAL17BUFFER_WRITE_SIZEE
000166  f7fffffe          BL       __aeabi_memclr
                  |L4.362|
00016a  6820              LDR      r0,[r4,#0]
00016c  f4106f80          TST      r0,#0x400
000170  d0fb              BEQ      |L4.362|
                  |L4.370|
000172  6820              LDR      r0,[r4,#0]
000174  f4105f80          TST      r0,#0x1000
000178  d1fb              BNE      |L4.370|
00017a  4ab0              LDR      r2,|L4.1084|
00017c  49ae              LDR      r1,|L4.1080|
00017e  2003              MOVS     r0,#3
000180  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000184  f88b7004          STRB     r7,[r11,#4]
000188  4aac              LDR      r2,|L4.1084|
00018a  f10b0104          ADD      r1,r11,#4
00018e  2001              MOVS     r0,#1
000190  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
                  |L4.404|
000194  6820              LDR      r0,[r4,#0]
000196  f4105f80          TST      r0,#0x1000
00019a  d0fb              BEQ      |L4.404|
00019c  4aa7              LDR      r2,|L4.1084|
00019e  49a6              LDR      r1,|L4.1080|
0001a0  2004              MOVS     r0,#4
0001a2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0001a6  f8980003          LDRB     r0,[r8,#3]  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
0001aa  f0100f04          TST      r0,#4
0001ae  d0d8              BEQ      |L4.354|
0001b0  f88b6000          STRB     r6,[r11,#0]
0001b4  2400              MOVS     r4,#0
                  |L4.438|
0001b6  eb080204          ADD      r2,r8,r4
0001ba  499f              LDR      r1,|L4.1080|
0001bc  2001              MOVS     r0,#1
0001be  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0001c2  1c64              ADDS     r4,r4,#1
0001c4  2c0c              CMP      r4,#0xc
0001c6  dbf6              BLT      |L4.438|
0001c8  f898000a          LDRB     r0,[r8,#0xa]  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
0001cc  2889              CMP      r0,#0x89
0001ce  d111              BNE      |L4.500|
;;;1138           
;;;1139           WifiPutString("Trying to enter card ready...\r\n");
;;;1140           if (WifiEnterCardReadyState() < 0)
;;;1141             return -1;
;;;1142           
;;;1143           // Set operating mode to 0 - must be the first command after reset
;;;1144           WifiPutString("Set op mode 0...\r\n");
;;;1145           u8 mode = 0;
0001d0  f88d609c          STRB     r6,[sp,#0x9c]
;;;1146           if (WifiCommand(WIFI_TX_SET_OPERATING_MODE, 1, &mode) < 0)
0001d4  aa27              ADD      r2,sp,#0x9c
0001d6  2101              MOVS     r1,#1
0001d8  2010              MOVS     r0,#0x10
0001da  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
0001de  2800              CMP      r0,#0
0001e0  db08              BLT      |L4.500|
;;;1147             return -1;
;;;1148           
;;;1149           // Band == 0: 2.4 GHz
;;;1150           // Band == 1: 5 GHz
;;;1151           WifiPutString("Set 5GHz...\r\n");
;;;1152           mode = 1;
0001e2  f88d709c          STRB     r7,[sp,#0x9c]
;;;1153           if (WifiCommand(WIFI_TX_BAND, 1, &mode) < 0)
0001e6  aa27              ADD      r2,sp,#0x9c
0001e8  2101              MOVS     r1,#1
0001ea  2011              MOVS     r0,#0x11
0001ec  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
0001f0  2800              CMP      r0,#0
0001f2  da04              BGE      |L4.510|
                  |L4.500|
;;;1154             return -1;
;;;1155           
;;;1156           // Initialize internal stuff
;;;1157           // This command programs the module's baseband and RF components and
;;;1158           // returns the MAC address of the module
;;;1159           WifiPutString("Get MAC address...\r\n");
;;;1160           WifiCommand(WIFI_TX_INIT, 0, NULL);
;;;1161           
;;;1162           // Verify the MAC address
;;;1163           g_moduleIndex = -1;
;;;1164           for (int i = 0; i < sizeof(g_MACToIP) / sizeof(g_MACToIP[0]); i++)
;;;1165           {
;;;1166             const MACIP* macToIP = &g_MACToIP[i];
;;;1167             bool matches = true;
;;;1168             for (int j = 0; j < sizeof(macToIP->MAC); j++)
;;;1169             {
;;;1170               if (m_payloadRead[j] != macToIP->MAC[j])
;;;1171               {
;;;1172                 matches = false;
;;;1173                 break;
;;;1174               }
;;;1175             }
;;;1176             
;;;1177             if (matches)
;;;1178             {
;;;1179               g_moduleIndex = i;
;;;1180               break;
;;;1181             }
;;;1182           }
;;;1183           
;;;1184           // Unknown module
;;;1185           if (g_moduleIndex < 0)
;;;1186           {
;;;1187             // Force enable the LED
;;;1188             //g_wifiLEDs = true;
;;;1189             WifiPutString("Unknown module!\r\n");
;;;1190             while (1)
;;;1191             {
;;;1192               SetLED(LED_LEFT_EYE_TOP, (LEDColor)(LED_RED | LED_BLUE | LED_GREEN));
;;;1193               MicroWait(500000);
;;;1194               SetLED(LED_LEFT_EYE_TOP, LED_OFF);
;;;1195               MicroWait(500000);
;;;1196             }
;;;1197           }
;;;1198           
;;;1199           WifiPutString("Join access point...\r\n");
;;;1200           if (WifiJoinAP() < 0)
;;;1201             return -1;
;;;1202           
;;;1203           WifiPutString("Configured, prepare to run!\r\n");
;;;1204           ConfigureDMA();
;;;1205           ConfigureIRQ();
;;;1206           
;;;1207           // Enable GPIO interrupts on these pins
;;;1208           EXTI->IMR |= (PIN_INTERRUPT | PIN_SPI_READY);
;;;1209           
;;;1210           SetLED(LED_LEFT_EYE_LEFT, LED_GREEN);
;;;1211           SetLED(LED_LEFT_EYE_RIGHT, LED_OFF);
;;;1212           
;;;1213           return 0;
;;;1214         }
0001f4  b029              ADD      sp,sp,#0xa4
0001f6  f04f30ff          MOV      r0,#0xffffffff        ;1141
0001fa  e8bd8ff0          POP      {r4-r11,pc}
                  |L4.510|
0001fe  2200              MOVS     r2,#0                 ;1160
000200  4611              MOV      r1,r2                 ;1160
000202  2012              MOVS     r0,#0x12              ;1160
000204  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
000208  4c8d              LDR      r4,|L4.1088|
00020a  f04f30ff          MOV      r0,#0xffffffff        ;1163
00020e  4d8d              LDR      r5,|L4.1092|
000210  2100              MOVS     r1,#0                 ;1164
000212  6120              STR      r0,[r4,#0x10]         ;1166  ; g_moduleIndex
                  |L4.532|
000214  eb010081          ADD      r0,r1,r1,LSL #2       ;1166
000218  eb050240          ADD      r2,r5,r0,LSL #1       ;1166
00021c  f04f0c01          MOV      r12,#1                ;1167
000220  2000              MOVS     r0,#0                 ;1168
                  |L4.546|
000222  f8183000          LDRB     r3,[r8,r0]            ;1170
000226  f812e000          LDRB     lr,[r2,r0]            ;1170
00022a  4573              CMP      r3,lr                 ;1170
00022c  d107              BNE      |L4.574|
00022e  1c40              ADDS     r0,r0,#1              ;1168
000230  2806              CMP      r0,#6                 ;1168
000232  d3f6              BCC      |L4.546|
000234  f1bc0f00          CMP      r12,#0                ;1177
000238  d001              BEQ      |L4.574|
00023a  6121              STR      r1,[r4,#0x10]         ;1180  ; g_moduleIndex
00023c  e002              B        |L4.580|
                  |L4.574|
00023e  1c49              ADDS     r1,r1,#1              ;1164
000240  2907              CMP      r1,#7                 ;1164
000242  d3e7              BCC      |L4.532|
                  |L4.580|
000244  6920              LDR      r0,[r4,#0x10]         ;1185  ; g_moduleIndex
000246  2800              CMP      r0,#0                 ;1185
000248  bfb8              IT       LT                    ;1193
00024a  4c7f              LDRLT    r4,|L4.1096|
00024c  da0f              BGE      |L4.622|
                  |L4.590|
00024e  f06f417f          MVN      r1,#0xff000000        ;1192
000252  2004              MOVS     r0,#4                 ;1192
000254  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000258  4620              MOV      r0,r4                 ;1193
00025a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
00025e  2100              MOVS     r1,#0                 ;1194
000260  2004              MOVS     r0,#4                 ;1194
000262  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000266  4620              MOV      r0,r4                 ;1195
000268  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
00026c  e7ef              B        |L4.590|
                  |L4.622|
00026e  961a              STR      r6,[sp,#0x68]         ;1190
000270  961b              STR      r6,[sp,#0x6c]         ;1190
000272  961c              STR      r6,[sp,#0x70]         ;1190
000274  961d              STR      r6,[sp,#0x74]         ;1190
000276  961e              STR      r6,[sp,#0x78]         ;1190
000278  961f              STR      r6,[sp,#0x7c]         ;1190
00027a  9620              STR      r6,[sp,#0x80]         ;1190
00027c  9621              STR      r6,[sp,#0x84]         ;1190
00027e  9622              STR      r6,[sp,#0x88]         ;1190
000280  2220              MOVS     r2,#0x20              ;1190
000282  a81b              ADD      r0,sp,#0x6c           ;1190
000284  68a1              LDR      r1,[r4,#8]            ;1190  ; ssid
000286  f7fffffe          BL       strlcpy
00028a  f44f417f          MOV      r1,#0xff00            ;1190
00028e  2005              MOVS     r0,#5                 ;1190
000290  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000294  aa1a              ADD      r2,sp,#0x68           ;1190
000296  2124              MOVS     r1,#0x24              ;1190
000298  2013              MOVS     r0,#0x13              ;1190
00029a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
00029e  2800              CMP      r0,#0                 ;1190
0002a0  dba8              BLT      |L4.500|
0002a2  2168              MOVS     r1,#0x68              ;1190
0002a4  4668              MOV      r0,sp                 ;1190
0002a6  f7fffffe          BL       __aeabi_memclr4
0002aa  f04f0810          MOV      r8,#0x10              ;1190
0002ae  f88d8002          STRB     r8,[sp,#2]            ;1190
0002b2  2002              MOVS     r0,#2                 ;1190
0002b4  f88d0003          STRB     r0,[sp,#3]            ;1190
0002b8  2240              MOVS     r2,#0x40              ;1190
0002ba  a801              ADD      r0,sp,#4              ;1190
0002bc  68e1              LDR      r1,[r4,#0xc]          ;1190  ; psk
0002be  f7fffffe          BL       strlcpy
0002c2  2220              MOVS     r2,#0x20              ;1190
0002c4  a811              ADD      r0,sp,#0x44           ;1190
0002c6  68a1              LDR      r1,[r4,#8]            ;1190  ; ssid
0002c8  f7fffffe          BL       strlcpy
0002cc  68a0              LDR      r0,[r4,#8]            ;1190  ; ssid
0002ce  f7fffffe          BL       strlen
0002d2  f88d0067          STRB     r0,[sp,#0x67]         ;1190
0002d6  f04f11ff          MOV      r1,#0xff00ff          ;1190
0002da  2005              MOVS     r0,#5                 ;1190
0002dc  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
0002e0  466a              MOV      r2,sp                 ;1190
0002e2  2168              MOVS     r1,#0x68              ;1190
0002e4  2014              MOVS     r0,#0x14              ;1190
0002e6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
0002ea  2800              CMP      r0,#0                 ;1190
0002ec  db82              BLT      |L4.500|
0002ee  6920              LDR      r0,[r4,#0x10]         ;1190  ; g_moduleIndex
0002f0  a156              ADR      r1,|L4.1100|
0002f2  eb000080          ADD      r0,r0,r0,LSL #2       ;1190
0002f6  e9d12300          LDRD     r2,r3,[r1,#0]         ;1190
0002fa  e9d1c102          LDRD     r12,r1,[r1,#8]        ;1190
0002fe  e9cdc125          STRD     r12,r1,[sp,#0x94]     ;1190
000302  eb050040          ADD      r0,r5,r0,LSL #1       ;1190
000306  e9cd2323          STRD     r2,r3,[sp,#0x8c]      ;1190
00030a  7981              LDRB     r1,[r0,#6]            ;1190
00030c  f88d108d          STRB     r1,[sp,#0x8d]         ;1190
000310  79c1              LDRB     r1,[r0,#7]            ;1190
000312  f88d108e          STRB     r1,[sp,#0x8e]         ;1190
000316  7a01              LDRB     r1,[r0,#8]            ;1190
000318  f88d108f          STRB     r1,[sp,#0x8f]         ;1190
00031c  7a40              LDRB     r0,[r0,#9]            ;1190
00031e  f88d0090          STRB     r0,[sp,#0x90]         ;1190
000322  494e              LDR      r1,|L4.1116|
000324  2005              MOVS     r0,#5                 ;1190
000326  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
00032a  aa23              ADD      r2,sp,#0x8c           ;1190
00032c  210d              MOVS     r1,#0xd               ;1190
00032e  2041              MOVS     r0,#0x41              ;1190
000330  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
000334  2800              CMP      r0,#0                 ;1190
000336  f6ffaf5d          BLT      |L4.500|
00033a  f64f71ff          MOV      r1,#0xffff            ;1190
00033e  2005              MOVS     r0,#5                 ;1190
000340  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000344  4a46              LDR      r2,|L4.1120|
000346  210a              MOVS     r1,#0xa               ;1190
000348  2042              MOVS     r0,#0x42              ;1190
00034a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
00034e  2800              CMP      r0,#0                 ;1190
000350  f6ffaf50          BLT      |L4.500|
000354  7066              STRB     r6,[r4,#1]            ;1190
000356  f06f417f          MVN      r1,#0xff000000        ;1190
00035a  2005              MOVS     r0,#5                 ;1190
00035c  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000360  4c40              LDR      r4,|L4.1124|
000362  4620              MOV      r0,r4                 ;1190
000364  f7fffffe          BL       DMA_DeInit
000368  483f              LDR      r0,|L4.1128|
00036a  1525              ASRS     r5,r4,#20             ;1190
00036c  e9cd6000          STRD     r6,r0,[sp,#0]         ;1190
000370  2040              MOVS     r0,#0x40              ;1190
000372  e9cdb002          STRD     r11,r0,[sp,#8]        ;1190
000376  f64f70ff          MOV      r0,#0xffff            ;1190
00037a  e9cd0604          STRD     r0,r6,[sp,#0x10]      ;1190
00037e  e9cd5606          STRD     r5,r6,[sp,#0x18]      ;1190
000382  01e8              LSLS     r0,r5,#7              ;1190
000384  9608              STR      r6,[sp,#0x20]         ;1190
000386  e9cd6009          STRD     r6,r0,[sp,#0x24]      ;1190
00038a  e9cd6a0b          STRD     r6,r10,[sp,#0x2c]     ;1190
00038e  960d              STR      r6,[sp,#0x34]         ;1190
000390  4669              MOV      r1,sp                 ;1190
000392  4620              MOV      r0,r4                 ;1190
000394  960e              STR      r6,[sp,#0x38]         ;1190
000396  f7fffffe          BL       DMA_Init
00039a  2201              MOVS     r2,#1                 ;1190
00039c  2102              MOVS     r1,#2                 ;1190
00039e  4822              LDR      r0,|L4.1064|
0003a0  f7fffffe          BL       SPI_I2S_DMACmd
0003a4  2201              MOVS     r2,#1                 ;1190
0003a6  2110              MOVS     r1,#0x10              ;1190
0003a8  4620              MOV      r0,r4                 ;1190
0003aa  f7fffffe          BL       DMA_ITConfig
0003ae  f04f5120          MOV      r1,#0x28000000        ;1190
0003b2  4620              MOV      r0,r4                 ;1190
0003b4  f7fffffe          BL       DMA_ClearFlag
0003b8  202f              MOVS     r0,#0x2f              ;1190
0003ba  f88d0000          STRB     r0,[sp,#0]            ;1190
0003be  f88da001          STRB     r10,[sp,#1]           ;1190
0003c2  f88da002          STRB     r10,[sp,#2]           ;1190
0003c6  f88d7003          STRB     r7,[sp,#3]            ;1190
0003ca  4668              MOV      r0,sp                 ;1190
0003cc  f7fffffe          BL       NVIC_Init
0003d0  f88d600c          STRB     r6,[sp,#0xc]          ;1190
0003d4  2008              MOVS     r0,#8                 ;1190
0003d6  f88d000d          STRB     r0,[sp,#0xd]          ;1190
0003da  9502              STR      r5,[sp,#8]            ;1190
0003dc  f88d700e          STRB     r7,[sp,#0xe]          ;1190
0003e0  a802              ADD      r0,sp,#8              ;1190
0003e2  f7fffffe          BL       EXTI_Init
0003e6  14a0              ASRS     r0,r4,#18             ;1190
0003e8  9002              STR      r0,[sp,#8]            ;1190
0003ea  f88d800d          STRB     r8,[sp,#0xd]          ;1190
0003ee  a802              ADD      r0,sp,#8              ;1190
0003f0  f7fffffe          BL       EXTI_Init
0003f4  f8d90000          LDR      r0,[r9,#0]            ;1190
0003f8  f42050a0          BIC      r0,r0,#0x1400         ;1190
0003fc  e036              B        |L4.1132|
0003fe  0000              DCW      0x0000
                  |L4.1024|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readHeadE ; Anki::Cozmo::HAL::m_readHead
                  |L4.1028|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readTailE ; Anki::Cozmo::HAL::m_readTail
                  |L4.1032|
                          DCD      _ZN4Anki5Cozmo3HAL11m_writeTailE ; Anki::Cozmo::HAL::m_writeTail
                  |L4.1036|
                          DCD      _ZN4Anki5Cozmo3HAL11m_writeHeadE ; Anki::Cozmo::HAL::m_writeHead
                  |L4.1040|
                          DCD      _ZN4Anki5Cozmo3HAL16WifiStateMachineEv ; Anki::Cozmo::HAL::WifiStateMachine()
                  |L4.1044|
                          DCD      _ZN4Anki5Cozmo3HAL13StartTransferE ; Anki::Cozmo::HAL::StartTransfer
                  |L4.1048|
                          DCD      _ZN4Anki5Cozmo3HAL16WifiGetCharacterEj ; Anki::Cozmo::HAL::WifiGetCharacter(unsigned)
                  |L4.1052|
                          DCD      _ZN4Anki5Cozmo3HAL7GetCharE ; Anki::Cozmo::HAL::GetChar
                  |L4.1056|
                          DCD      0x40020800
                  |L4.1060|
                          DCD      0x40020000
                  |L4.1064|
                          DCD      0x40003c00
                  |L4.1068|
                          DCD      0x40013c00
                  |L4.1072|
                          DCD      _ZN4Anki5Cozmo3HAL17BUFFER_WRITE_SIZEE ; Anki::Cozmo::HAL::BUFFER_WRITE_SIZE
                  |L4.1076|
                          DCD      0x40020810
                  |L4.1080|
                          DCD      _ZN4Anki5Cozmo3HAL13m_bufferWriteE ; Anki::Cozmo::HAL::m_bufferWrite
                  |L4.1084|
                          DCD      OFFCHIP
                  |L4.1088|
                          DCD      ||.data||
                  |L4.1092|
                          DCD      ||.constdata||
                  |L4.1096|
                          DCD      0x0007a120
                  |L4.1100|
00044c  00                DCB      0
00044d  00                DCB      0
00044e  00                DCB      0
00044f  00                DCB      0
000450  00                DCB      0
000451  fffff800          DCB      255,255,248,0
000455  c0a80301          DCB      192,168,3,1,0
000459  00      
00045a  00                DCB      0
00045b  00                DCB      0
                  |L4.1116|
                          DCD      0x00ffff00
                  |L4.1120|
                          DCD      ||.constdata||+0x46
                  |L4.1124|
                          DCD      0x400260b8
                  |L4.1128|
                          DCD      0x40003c0c
                  |L4.1132|
00046c  f8c90000          STR      r0,[r9,#0]            ;1190
000470  2028              MOVS     r0,#0x28              ;1190
000472  f88d0000          STRB     r0,[sp,#0]            ;1190
000476  f88da001          STRB     r10,[sp,#1]           ;1190
00047a  f88da002          STRB     r10,[sp,#2]           ;1190
00047e  4668              MOV      r0,sp                 ;1190
000480  f7fffffe          BL       NVIC_Init
000484  210c              MOVS     r1,#0xc               ;1190
000486  2002              MOVS     r0,#2                 ;1190
000488  f7fffffe          BL       SYSCFG_EXTILineConfig
00048c  210a              MOVS     r1,#0xa               ;1190
00048e  2002              MOVS     r0,#2                 ;1190
000490  f7fffffe          BL       SYSCFG_EXTILineConfig
000494  f8d90000          LDR      r0,[r9,#0]            ;1208
000498  f44050a0          ORR      r0,r0,#0x1400         ;1208
00049c  f8c90000          STR      r0,[r9,#0]            ;1208
0004a0  f44f417f          MOV      r1,#0xff00            ;1210
0004a4  2007              MOVS     r0,#7                 ;1210
0004a6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
0004aa  2100              MOVS     r1,#0                 ;1211
0004ac  2005              MOVS     r0,#5                 ;1211
0004ae  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
0004b2  b029              ADD      sp,sp,#0xa4
0004b4  2000              MOVS     r0,#0                 ;1213
0004b6  e8bd8ff0          POP      {r4-r11,pc}
;;;1215         
                          ENDP


                          AREA ||i._ZN4Anki5Cozmo3HAL13WifiHasClientEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL13WifiHasClientEv PROC ; Anki::Cozmo::HAL::WifiHasClient()
;;;1239         
;;;1240         bool WifiHasClient()
000000  4801              LDR      r0,|L5.8|
;;;1241         {
;;;1242           return m_isClientConnected;
000002  7840              LDRB     r0,[r0,#1]  ; _ZN4Anki5Cozmo3HAL19m_isClientConnectedE
;;;1243         }
000004  4770              BX       lr
;;;1244       }
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      ||.data||

                          AREA ||i._ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh PROC ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
;;;373    
;;;374          static void SPI_SendReceive(u32 length, const u8* dataTX, u8* dataRX)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;375          {
000004  4f2e              LDR      r7,|L6.192|
000006  4604              MOV      r4,r0
000008  4615              MOV      r5,r2
00000a  6838              LDR      r0,[r7,#0]
00000c  460e              MOV      r6,r1
00000e  f0207040          BIC      r0,r0,#0x3000000
000012  f0407000          ORR      r0,r0,#0x2000000
000016  6038              STR      r0,[r7,#0]
000018  6838              LDR      r0,[r7,#0]
00001a  f4201040          BIC      r0,r0,#0x300000
00001e  f4401000          ORR      r0,r0,#0x200000
000022  6038              STR      r0,[r7,#0]
000024  f8dfa09c          LDR      r10,|L6.196|
000028  f44f7980          MOV      r9,#0x100
00002c  f8aa901a          STRH     r9,[r10,#0x1a]
000030  f8df8094          LDR      r8,|L6.200|
000034  f8d80000          LDR      r0,[r8,#0]
000038  f42050a0          BIC      r0,r0,#0x1400
00003c  f8c80000          STR      r0,[r8,#0]
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
;;;376            CSLow();
;;;377            
;;;378            for (int i = 0; i < length; i++)
000046  2300              MOVS     r3,#0
;;;379            {
;;;380              while (!(SPI3->SR & SPI_FLAG_TXE))
000048  4820              LDR      r0,|L6.204|
00004a  2c00              CMP      r4,#0                 ;378
;;;381                ;
;;;382              SPI3->DR = dataTX[i];
00004c  bf88              IT       HI
00004e  4a20              LDRHI    r2,|L6.208|
000050  d90f              BLS      |L6.114|
                  |L6.82|
000052  8801              LDRH     r1,[r0,#0]            ;380
000054  f0110f02          TST      r1,#2                 ;380
000058  bf1c              ITT      NE
00005a  5cf1              LDRBNE   r1,[r6,r3]
00005c  8011              STRHNE   r1,[r2,#0]
00005e  d0f8              BEQ      |L6.82|
                  |L6.96|
;;;383              
;;;384              while (!(SPI3->SR & SPI_FLAG_RXNE))
000060  8801              LDRH     r1,[r0,#0]
000062  f0110f01          TST      r1,#1
000066  d0fb              BEQ      |L6.96|
;;;385                ;
;;;386              dataRX[i] = SPI3->DR;
000068  8811              LDRH     r1,[r2,#0]
00006a  54e9              STRB     r1,[r5,r3]
00006c  1c5b              ADDS     r3,r3,#1              ;378
00006e  42a3              CMP      r3,r4                 ;378
000070  d3ef              BCC      |L6.82|
                  |L6.114|
;;;387            }
;;;388            // Wait for transfers to complete
;;;389            while (SPI3->SR & SPI_FLAG_BSY)
000072  8801              LDRH     r1,[r0,#0]
000074  f0110f80          TST      r1,#0x80
000078  d1fb              BNE      |L6.114|
00007a  f8aa9018          STRH     r9,[r10,#0x18]
00007e  6838              LDR      r0,[r7,#0]
000080  f0207040          BIC      r0,r0,#0x3000000
000084  6038              STR      r0,[r7,#0]
000086  6838              LDR      r0,[r7,#0]
000088  f4201040          BIC      r0,r0,#0x300000
00008c  6038              STR      r0,[r7,#0]
00008e  2001              MOVS     r0,#1
000090  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000094  f8d80000          LDR      r0,[r8,#0]
000098  f44050a0          ORR      r0,r0,#0x1400
00009c  f8c80000          STR      r0,[r8,#0]
;;;390              ;
;;;391            
;;;392            CSHigh();
;;;393            
;;;394            WifiPutString("\r\nCPU->WIFI: ");
;;;395            for (int i = 0; i < length; i++)
0000a0  2000              MOVS     r0,#0
0000a2  2c00              CMP      r4,#0
0000a4  d902              BLS      |L6.172|
                  |L6.166|
0000a6  1c40              ADDS     r0,r0,#1
0000a8  4284              CMP      r4,r0
0000aa  d8fc              BHI      |L6.166|
                  |L6.172|
;;;396              WifiPutHex(dataTX[i]);
;;;397            WifiPutString("\r\nWIFI->CPU: ");
;;;398            for (int i = 0; i < length; i++)
0000ac  2000              MOVS     r0,#0
0000ae  2c00              CMP      r4,#0
;;;399              WifiPutHex(dataRX[i]);
;;;400            WifiPutString("\r\n");
;;;401          }
0000b0  bf98              IT       LS
0000b2  e8bd87f0          POPLS    {r4-r10,pc}
                  |L6.182|
0000b6  1c40              ADDS     r0,r0,#1              ;398
0000b8  4284              CMP      r4,r0                 ;398
0000ba  d8fc              BHI      |L6.182|
0000bc  e8bd87f0          POP      {r4-r10,pc}
;;;402    
                          ENDP

                  |L6.192|
                          DCD      0x40020800
                  |L6.196|
                          DCD      0x40020000
                  |L6.200|
                          DCD      0x40013c00
                  |L6.204|
                          DCD      0x40003c08
                  |L6.208|
                          DCD      0x40003c0c

                          AREA ||i._ZN4Anki5Cozmo3HAL15WifiRxSpiReady1Ev||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL15WifiRxSpiReady1Ev PROC ; Anki::Cozmo::HAL::WifiRxSpiReady1()
;;;453    
;;;454          static s32 WifiRxSpiReady1()
000000  b530              PUSH     {r4,r5,lr}
;;;455          {
000002  b085              SUB      sp,sp,#0x14
;;;456            int i;
;;;457            u8 data, error, lengthLow, lengthHigh;
;;;458            
;;;459            data = 0;
000004  2000              MOVS     r0,#0
000006  f88d0000          STRB     r0,[sp,#0]
;;;460            // Send 4 null bytes to receive Rx_Data_Descriptor_Frame1-4
;;;461            SPI_SendReceive(1, &data, &lengthLow);
00000a  aa02              ADD      r2,sp,#8
00000c  4669              MOV      r1,sp
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
;;;462            SPI_SendReceive(1, &data, &lengthHigh);
000014  aa03              ADD      r2,sp,#0xc
000016  4669              MOV      r1,sp
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
;;;463            SPI_SendReceive(1, &data, &error);
00001e  aa01              ADD      r2,sp,#4
000020  4669              MOV      r1,sp
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
;;;464            SPI_SendReceive(1, &data, &m_moduleStatus);
000028  4a19              LDR      r2,|L7.144|
00002a  4669              MOV      r1,sp
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
;;;465            
;;;466            if (!(m_moduleStatus & WIFI_MODULE_PENDING_DATA))
000032  4817              LDR      r0,|L7.144|
000034  7800              LDRB     r0,[r0,#0]  ; _ZN4Anki5Cozmo3HAL14m_moduleStatusE
000036  f0100004          ANDS     r0,r0,#4
;;;467              return 0;
;;;468            
;;;469            // Check Rx_Data_Descriptor_Frame3 for SPI error and handle it
;;;470            if (error != 0 && error != 0xFF)
;;;471            {
;;;472              //DEBUG_PutString("SPI Error: ");
;;;473              //DEBUG_PutHex(error);
;;;474              //DEBUG_PutString("\r\n");
;;;475              
;;;476              return -1;
;;;477            }
;;;478            
;;;479            u16 payloadLength = lengthLow | ((lengthHigh & 0x0F) << 8);
;;;480            
;;;481            // Set Rx_Data_Read_Frame1-12 and receive Rx_Data_Read_Response_Frame1-12
;;;482            // The error argument is junk receive data (for now?)
;;;483            for (i = 0; i < 12; i++)
;;;484              SPI_SendReceive(1, &data, &error);
;;;485            
;;;486            // Send Rx_Payload_Read_Frame and receive Rx_Payload_Frame
;;;487            // The docs say we can stop after RDRRF12 if there's no response
;;;488            
;;;489            // The status variable holds the payload length
;;;490            if (payloadLength)
;;;491            {
;;;492              memset(m_payloadWrite, 0, payloadLength);
;;;493              SPI_SendReceive(payloadLength, m_payloadWrite, m_payloadRead);
;;;494            }
;;;495            
;;;496            //WifiInterrupt interruptType = 
;;;497            //  (WifiInterrupt)((m_bufferRead[2] >> 4) & 0x0F);
;;;498            
;;;499            return payloadLength;
;;;500          }
00003a  bf04              ITT      EQ
00003c  b005              ADDEQ    sp,sp,#0x14
00003e  bd30              POPEQ    {r4,r5,pc}
000040  f89d0004          LDRB     r0,[sp,#4]            ;470
000044  2800              CMP      r0,#0                 ;470
000046  bf1f              ITTTT    NE                    ;470
000048  28ff              CMPNE    r0,#0xff              ;470
00004a  f04f30ff          MOVNE    r0,#0xffffffff        ;476
00004e  b005              ADDNE    sp,sp,#0x14
000050  bd30              POPNE    {r4,r5,pc}
000052  f89d000c          LDRB     r0,[sp,#0xc]          ;479
000056  f89d1008          LDRB     r1,[sp,#8]            ;479
00005a  f000000f          AND      r0,r0,#0xf            ;479
00005e  ea412500          ORR      r5,r1,r0,LSL #8       ;479
000062  2400              MOVS     r4,#0                 ;483
                  |L7.100|
000064  aa01              ADD      r2,sp,#4              ;484
000066  4669              MOV      r1,sp                 ;484
000068  2001              MOVS     r0,#1                 ;484
00006a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
00006e  1c64              ADDS     r4,r4,#1              ;483
000070  2c0c              CMP      r4,#0xc               ;483
000072  dbf7              BLT      |L7.100|
000074  b14d              CBZ      r5,|L7.138|
000076  4629              MOV      r1,r5                 ;492
000078  4806              LDR      r0,|L7.148|
00007a  f7fffffe          BL       __aeabi_memclr
00007e  4a06              LDR      r2,|L7.152|
000080  4628              MOV      r0,r5                 ;493
000082  f20251ee          ADD      r1,r2,#0x5ee          ;493
000086  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
                  |L7.138|
00008a  b005              ADD      sp,sp,#0x14
00008c  4628              MOV      r0,r5                 ;499
00008e  bd30              POP      {r4,r5,pc}
;;;501    
                          ENDP

                  |L7.144|
                          DCD      ||.data||
                  |L7.148|
                          DCD      OFFCHIP+0x5ee
                  |L7.152|
                          DCD      OFFCHIP

                          AREA ||i._ZN4Anki5Cozmo3HAL16WifiGetCharacterEj||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL16WifiGetCharacterEj PROC ; Anki::Cozmo::HAL::WifiGetCharacter(unsigned)
;;;1106         
;;;1107         s32 WifiGetCharacter(u32 timeout)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1108         {
000004  4607              MOV      r7,r0
;;;1109           u32 startTime = GetMicroCounter();
000006  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15GetMicroCounterEv ; Anki::Cozmo::HAL::GetMicroCounter()
;;;1110   
;;;1111           do
;;;1112           {
;;;1113             // Make sure there's data in the FIFO
;;;1114             if (m_readTail != m_readHead)
00000a  4c0f              LDR      r4,|L8.72|
00000c  4e0f              LDR      r6,|L8.76|
00000e  4605              MOV      r5,r0                 ;1109
                  |L8.16|
000010  6820              LDR      r0,[r4,#0]  ; _ZN4Anki5Cozmo3HAL10m_readTailE
000012  6831              LDR      r1,[r6,#0]  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
000014  4288              CMP      r0,r1
000016  d00d              BEQ      |L8.52|
;;;1115             {
;;;1116               u8 value = m_bufferRead[m_readTail];
000018  480d              LDR      r0,|L8.80|
00001a  6821              LDR      r1,[r4,#0]  ; _ZN4Anki5Cozmo3HAL10m_readTailE
00001c  5c40              LDRB     r0,[r0,r1]
;;;1117               m_readTail = (m_readTail + 1) % BUFFER_READ_SIZE;
00001e  6821              LDR      r1,[r4,#0]  ; _ZN4Anki5Cozmo3HAL10m_readTailE
000020  4a0c              LDR      r2,|L8.84|
000022  1c49              ADDS     r1,r1,#1
000024  6812              LDR      r2,[r2,#0]  ; _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE
000026  fb91f3f2          SDIV     r3,r1,r2
00002a  fb021113          MLS      r1,r2,r3,r1
00002e  6021              STR      r1,[r4,#0]  ; _ZN4Anki5Cozmo3HAL10m_readTailE
;;;1118               return value;
;;;1119             }
;;;1120           }
;;;1121           while ((GetMicroCounter() - startTime) < timeout);
;;;1122   
;;;1123           // No data, so return with an error
;;;1124           return -1;
;;;1125         }
000030  e8bd81f0          POP      {r4-r8,pc}
                  |L8.52|
000034  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15GetMicroCounterEv ; Anki::Cozmo::HAL::GetMicroCounter()
000038  1b40              SUBS     r0,r0,r5              ;1121
00003a  42b8              CMP      r0,r7                 ;1121
00003c  d3e8              BCC      |L8.16|
00003e  f04f30ff          MOV      r0,#0xffffffff        ;1124
000042  e8bd81f0          POP      {r4-r8,pc}
;;;1126         
                          ENDP

000046  0000              DCW      0x0000
                  |L8.72|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readTailE ; Anki::Cozmo::HAL::m_readTail
                  |L8.76|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readHeadE ; Anki::Cozmo::HAL::m_readHead
                  |L8.80|
                          DCD      _ZN4Anki5Cozmo3HAL12m_bufferReadE ; Anki::Cozmo::HAL::m_bufferRead
                  |L8.84|
                          DCD      _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE ; Anki::Cozmo::HAL::BUFFER_READ_SIZE

                          AREA ||i._ZN4Anki5Cozmo3HAL16WifiStateMachineEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL16WifiStateMachineEv PROC ; Anki::Cozmo::HAL::WifiStateMachine()
;;;862          
;;;863          static void WifiStateMachine()
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;864          {
000004  b085              SUB      sp,sp,#0x14
                  |L9.6|
;;;865            // If state machine is already running, remember that we need to run it again later
;;;866            __disable_irq();
000006  b672              CPSID    i
;;;867            static volatile u8 reentry = 0;
;;;868            reentry++;
000008  f8df9424          LDR      r9,|L9.1072|
00000c  f8990004          LDRB     r0,[r9,#4]  ; reentry
000010  1c40              ADDS     r0,r0,#1
000012  f8890004          STRB     r0,[r9,#4]
;;;869            if (reentry > 1)
000016  f8990004          LDRB     r0,[r9,#4]  ; reentry
00001a  2801              CMP      r0,#1
;;;870              return;
;;;871            __enable_irq();
;;;872    
;;;873            while (1)
;;;874            {
;;;875              switch (m_waitState)
;;;876              {
;;;877                case WAIT_IDLE:
;;;878                {
;;;879                  m_isTransferring = false;
;;;880                  
;;;881                  // Check if there's data to be received
;;;882                  if (GPIO_READ(GPIO_INTERRUPT) & PIN_INTERRUPT)
;;;883                  {
;;;884                    m_waitState = WAIT_RX_SPI_READY_0;
;;;885                    m_isTransferring = true;
;;;886                    
;;;887                    SetLED(LED_LEFT_EYE_LEFT, LED_RED);
;;;888                    WifiPutString("v");
;;;889                    
;;;890                  } else if ((UARTGetFreeSpace() < BUFFER_WRITE_SIZE) 
;;;891                              && m_isClientConnected
;;;892                              && !(m_moduleStatus & WIFI_MODULE_BUFFERS_FULL))  {
;;;893                    // Send some data
;;;894                    m_waitState = WAIT_TX_SPI_READY_0;
;;;895                    m_isTransferring = true;
;;;896                    
;;;897                    SetLED(LED_LEFT_EYE_LEFT, LED_RED);
;;;898                    WifiPutString("^");
;;;899                  } else {
;;;900                    // Nothing to do
;;;901                    
;;;902                    if (m_isClientConnected)
;;;903                      SetLED(LED_LEFT_EYE_LEFT, LED_BLUE);
;;;904                    else
;;;905                      SetLED(LED_LEFT_EYE_LEFT, LED_GREEN);
;;;906    
;;;907                    if (UARTGetFreeSpace() < BUFFER_WRITE_SIZE)
;;;908                      WifiPutString("o");
;;;909                    else
;;;910                      WifiPutString(".");
;;;911                    
;;;912                    goto ret;
;;;913                  }
;;;914                  
;;;915                  break;
;;;916                }
;;;917                
;;;918                case WAIT_TX_SPI_READY_0:
;;;919                {
;;;920                  // Some other interrupt may have fired and triggered this, so verify
;;;921                  if ((GPIO_READ(GPIO_SPI_READY) & PIN_SPI_READY))
;;;922                    goto ret;
;;;923                  
;;;924                  // Set the correct length to send
;;;925                  int tail = m_writeTail;
;;;926                  int length = m_writeHead - tail;
;;;927                  if (length < 0)
;;;928                    length = BUFFER_WRITE_SIZE - tail;
;;;929                  if (length > MAX_DATA_LENGTH)
;;;930                    length = MAX_DATA_LENGTH;
;;;931                  
;;;932                  m_writeLength = length;
;;;933                  
;;;934                  // We need to set the length of the entire payload, not just the data
;;;935                  // portion. However, we split DMA into two chunks and only want to set
;;;936                  // m_writeLength to the actual data length.
;;;937                  WifiTxSpiReady0(WIFI_TX_SEND_DATA, m_writeLength + sizeof(m_bufferSocket));
;;;938                  
;;;939                  // Set the next wait state
;;;940                  m_waitState = WAIT_TX_SPI_READY_1;
;;;941                  break;
;;;942                }
;;;943                
;;;944                case WAIT_TX_SPI_READY_1:
;;;945                {
;;;946                  if (!(GPIO_READ(GPIO_SPI_READY) & PIN_SPI_READY))
;;;947                    goto ret;
;;;948    
;;;949                  WifiTxSpiReady1(WIFI_TX_SEND_DATA);
;;;950                  
;;;951                  // Set the next wait state
;;;952                  m_waitState = WAIT_TX_DESCRIPTOR_DMA;
;;;953                  
;;;954                  // Configure DMA for transferring the socket descriptor and reserved bytes
;;;955                  m_isDMAComplete = false;
;;;956                  CSLow();
;;;957                  
;;;958                  DMA1_Stream7->M0AR = (u32)m_bufferSocket;
;;;959                  DMA1_Stream7->NDTR = sizeof(m_bufferSocket);
;;;960                  DMA_Cmd(DMA1_Stream7, ENABLE);
;;;961                  break;
;;;962                }
;;;963                
;;;964                case WAIT_TX_DESCRIPTOR_DMA:
;;;965                {
;;;966                  if (!m_isDMAComplete)
;;;967                    goto ret;
;;;968                  
;;;969                  // Set the next wait state
;;;970                  m_waitState = WAIT_TX_DMA;
;;;971                  
;;;972                  // Configure DMA for the actual data transfer
;;;973                  m_isDMAComplete = false;
;;;974                  
;;;975                  DMA1_Stream7->M0AR = (u32)&m_bufferWrite[m_writeTail];
;;;976                  DMA1_Stream7->NDTR = m_writeLength;
;;;977                  DMA_Cmd(DMA1_Stream7, ENABLE);
;;;978                  break;
;;;979                }
;;;980                
;;;981                case WAIT_TX_DMA:
;;;982                {
;;;983                  volatile u32 v;
;;;984                  
;;;985                  if (!m_isDMAComplete)
;;;986                    goto ret;
;;;987                  
;;;988                  // Clear out the receive buffer
;;;989                  while (SPI3->SR & SPI_FLAG_RXNE)
;;;990                    v = SPI3->DR;
;;;991                  // Wait until not busy
;;;992                  while (SPI3->SR & SPI_FLAG_BSY)
;;;993                    ;
;;;994                  // Clear receive overrun bit by reading DR then SR.
;;;995                  // We do this, because receive DMA was not setup, nor does it matter.
;;;996                  // The receive data during this stage should always be zeros.
;;;997                  v = SPI3->DR;
;;;998                  v = SPI3->SR;
;;;999                  // We're done with the transfer, so de-assert chip select
;;;1000                 CSHigh();
;;;1001                 
;;;1002                 m_writeTail += m_writeLength;
;;;1003                 if (m_writeTail >= BUFFER_WRITE_SIZE)
;;;1004                   m_writeTail = 0;
;;;1005                 
;;;1006                 // Set the next wait state for figuring out whether to send more data or read the received data
;;;1007                 m_waitState = WAIT_IDLE;
;;;1008                 break;
;;;1009               }
;;;1010               
;;;1011               case WAIT_RX_INTERRUPT:
;;;1012               {
;;;1013                 if (!(GPIO_READ(GPIO_INTERRUPT) & PIN_INTERRUPT))
;;;1014                   goto ret;
;;;1015                 
;;;1016                 // Nothing else to do here, just wait for SPI_READY == 0
;;;1017                 m_waitState = WAIT_RX_SPI_READY_0;
;;;1018                 break;
;;;1019               }
;;;1020               
;;;1021               case WAIT_RX_SPI_READY_0:
;;;1022               {
;;;1023                 if ((GPIO_READ(GPIO_SPI_READY) & PIN_SPI_READY) != 0)
;;;1024                   goto ret;
;;;1025   
;;;1026                 WifiRxSpiReady0();
;;;1027                 
;;;1028                 m_waitState = WAIT_RX_SPI_READY_1;
;;;1029                 break;
;;;1030               }
;;;1031               
;;;1032               case WAIT_RX_SPI_READY_1:
;;;1033               {
;;;1034                 if ((GPIO_READ(GPIO_SPI_READY) & PIN_SPI_READY) == 0)
;;;1035                   goto ret;
;;;1036                 
;;;1037                 // Don't modify interrupts, just wait for all data to be received
;;;1038                 int result = WifiRxSpiReady1();
;;;1039                 
;;;1040                 // Check for a connection and disconnection
;;;1041                 if (!m_isClientConnected && result == 8 )
;;;1042                 {
;;;1043                   m_bufferSocket[0] = m_payloadRead[0];
;;;1044                   m_bufferSocket[1] = m_payloadRead[1];
;;;1045                   m_isClientConnected = true;
;;;1046                   
;;;1047                   // Dump the buffer on connection
;;;1048                   //
;;;1049                   // TODO: Make this optional, depending on a command. 
;;;1050                   // Perhaps connecting to one socket should flush the buffer, and connecting to another doesn't?
;;;1051                   m_writeTail = m_writeHead;   
;;;1052                 } else if (result == 2 && m_isClientConnected) {
;;;1053                   if (m_bufferSocket[0] == m_payloadRead[0] &&
;;;1054                       m_bufferSocket[1] == m_payloadRead[1])
;;;1055                   {
;;;1056                     // Never call this command... It breaks being able to reconnect
;;;1057                     //WifiCommand(WIFI_TX_SOCKET_CLOSE, sizeof(m_socket), m_socket);
;;;1058                     WifiCreateSocket();
;;;1059                   }
;;;1060                 } else if (result >= TCP_SIZE_WITHOUT_PAYLOAD) {
;;;1061                   // Handle an actual TCP payload
;;;1062                   int length, bytesLeft;
;;;1063                   TCPPayload* payload = (TCPPayload*)m_payloadRead;
;;;1064                   
;;;1065                   length = payload->recvBufferLength[0] | (payload->recvBufferLength[1] << 8);
;;;1066                   
;;;1067                   // TODO: Should probably notify there is a dropped packet
;;;1068                   if (UARTGetFreeReceiveSpace() >= (length + 1))
;;;1069                   {
;;;1070                     bytesLeft = BUFFER_READ_SIZE - m_readHead;
;;;1071                     if (length <= bytesLeft)
;;;1072                     {
;;;1073                       memcpy(&m_bufferRead[m_readHead], payload->recvDataBuffer, length);
;;;1074                       m_readHead += length;
;;;1075                       
;;;1076                       if (m_readHead >= BUFFER_READ_SIZE)
;;;1077                       {
;;;1078                         m_readHead = 0;
;;;1079                       }
;;;1080                     } else {
;;;1081                       // Copy to the end of the buffer, then wrap around for the rest
;;;1082                       int lengthFirst = bytesLeft;
;;;1083                       memcpy(&m_bufferRead[m_readHead], payload->recvDataBuffer, lengthFirst);
;;;1084                       
;;;1085                       bytesLeft = length - lengthFirst;
;;;1086                       memcpy(m_bufferRead, &payload->recvDataBuffer[lengthFirst], bytesLeft);
;;;1087                       
;;;1088                       m_readHead = bytesLeft;
;;;1089                     }
;;;1090                   }
;;;1091                 }
;;;1092                 
;;;1093                 m_waitState = WAIT_IDLE;
;;;1094                 break;
;;;1095               }
;;;1096             }
;;;1097           }
;;;1098         ret:
;;;1099           __disable_irq();
;;;1100           u8 oldreentry = reentry;
;;;1101           reentry = 0;
;;;1102           __enable_irq();
;;;1103           if (oldreentry > 1)
;;;1104             WifiStateMachine();
;;;1105         }
00001c  bf84              ITT      HI
00001e  b005              ADDHI    sp,sp,#0x14
000020  e8bd8ff0          POPHI    {r4-r11,pc}
000024  b662              CPSIE    i                     ;871
000026  2600              MOVS     r6,#0                 ;871
000028  f8df8408          LDR      r8,|L9.1076|
00002c  f8dfa408          LDR      r10,|L9.1080|
                  |L9.48|
000030  f8990003          LDRB     r0,[r9,#3]            ;875  ; _ZN4Anki5Cozmo3HAL11m_waitStateE
000034  2808              CMP      r0,#8                 ;875
000036  d2fb              BCS      |L9.48|
000038  e8dff000          TBB      [pc,r0]               ;875
00003c  043f7cc7          DCB      0x04,0x3f,0x7c,0xc7
000040  dffefdfc          DCB      0xdf,0xfe,0xfd,0xfc
000044  4cfd              LDR      r4,|L9.1084|
000046  7026              STRB     r6,[r4,#0]            ;879
000048  f8d80000          LDR      r0,[r8,#0]            ;882
00004c  f4106f80          TST      r0,#0x400             ;882
000050  d00a              BEQ      |L9.104|
000052  2006              MOVS     r0,#6                 ;884
000054  f8890003          STRB     r0,[r9,#3]            ;884
000058  2001              MOVS     r0,#1                 ;885
00005a  7020              STRB     r0,[r4,#0]            ;885
00005c  f44f017f          MOV      r1,#0xff0000          ;887
000060  2007              MOVS     r0,#7                 ;887
000062  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000066  e7e3              B        |L9.48|
                  |L9.104|
000068  f7fffffe          BL       _ZN4Anki5Cozmo3HAL16UARTGetFreeSpaceEv ; Anki::Cozmo::HAL::UARTGetFreeSpace()
00006c  49f4              LDR      r1,|L9.1088|
00006e  6809              LDR      r1,[r1,#0]            ;890  ; _ZN4Anki5Cozmo3HAL17BUFFER_WRITE_SIZEE
000070  4288              CMP      r0,r1                 ;890
000072  da07              BGE      |L9.132|
000074  f8990001          LDRB     r0,[r9,#1]            ;891  ; _ZN4Anki5Cozmo3HAL19m_isClientConnectedE
000078  b120              CBZ      r0,|L9.132|
00007a  f8990000          LDRB     r0,[r9,#0]            ;892  ; _ZN4Anki5Cozmo3HAL14m_moduleStatusE
00007e  f0100f01          TST      r0,#1                 ;892
000082  d007              BEQ      |L9.148|
                  |L9.132|
000084  f8990001          LDRB     r0,[r9,#1]            ;902  ; _ZN4Anki5Cozmo3HAL19m_isClientConnectedE
000088  b170              CBZ      r0,|L9.168|
00008a  21ff              MOVS     r1,#0xff              ;903
00008c  2007              MOVS     r0,#7                 ;903
00008e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
000092  e00e              B        |L9.178|
                  |L9.148|
000094  2001              MOVS     r0,#1                 ;894
000096  f8890003          STRB     r0,[r9,#3]            ;894
00009a  7020              STRB     r0,[r4,#0]            ;895
00009c  f44f017f          MOV      r1,#0xff0000          ;897
0000a0  2007              MOVS     r0,#7                 ;897
0000a2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
0000a6  e7c3              B        |L9.48|
                  |L9.168|
0000a8  f44f417f          MOV      r1,#0xff00            ;905
0000ac  2007              MOVS     r0,#7                 ;905
0000ae  f7fffffe          BL       _ZN4Anki5Cozmo3HAL6SetLEDENS1_5LEDIdEj ; Anki::Cozmo::HAL::SetLED(Anki::Cozmo::HAL::LEDId, unsigned)
                  |L9.178|
0000b2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL16UARTGetFreeSpaceEv ; Anki::Cozmo::HAL::UARTGetFreeSpace()
0000b6  f000ba00          B.W      |L9.1210|
0000ba  f8d80000          LDR      r0,[r8,#0]            ;921
0000be  f4105f80          TST      r0,#0x1000            ;921
0000c2  f04081fa          BNE.W    |L9.1210|
0000c6  48df              LDR      r0,|L9.1092|
0000c8  6801              LDR      r1,[r0,#0]            ;925  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
0000ca  48df              LDR      r0,|L9.1096|
0000cc  6800              LDR      r0,[r0,#0]            ;926  ; _ZN4Anki5Cozmo3HAL11m_writeHeadE
0000ce  1a40              SUBS     r0,r0,r1              ;926
0000d0  d502              BPL      |L9.216|
0000d2  48db              LDR      r0,|L9.1088|
0000d4  6800              LDR      r0,[r0,#0]            ;928  ; _ZN4Anki5Cozmo3HAL17BUFFER_WRITE_SIZEE
0000d6  1a40              SUBS     r0,r0,r1              ;928
                  |L9.216|
0000d8  f5b06fa8          CMP      r0,#0x540             ;929
0000dc  bfc8              IT       GT                    ;930
0000de  f44f60a8          MOVGT    r0,#0x540             ;930
0000e2  49da              LDR      r1,|L9.1100|
0000e4  6008              STR      r0,[r1,#0]            ;932  ; _ZN4Anki5Cozmo3HAL13m_writeLengthE
0000e6  6808              LDR      r0,[r1,#0]            ;937  ; _ZN4Anki5Cozmo3HAL13m_writeLengthE
0000e8  4ad3              LDR      r2,|L9.1080|
0000ea  f1000436          ADD      r4,r0,#0x36           ;937
0000ee  f88d4000          STRB     r4,[sp,#0]            ;937
0000f2  4669              MOV      r1,sp                 ;937
0000f4  2001              MOVS     r0,#1                 ;937
0000f6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0000fa  f3c42003          UBFX     r0,r4,#8,#4           ;937
0000fe  f0400020          ORR      r0,r0,#0x20           ;937
000102  f88d0000          STRB     r0,[sp,#0]            ;937
000106  f10a0201          ADD      r2,r10,#1             ;937
00010a  4669              MOV      r1,sp                 ;937
00010c  2001              MOVS     r0,#1                 ;937
00010e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000112  f88d6000          STRB     r6,[sp,#0]            ;937
000116  f10a0202          ADD      r2,r10,#2             ;937
00011a  4669              MOV      r1,sp                 ;937
00011c  2001              MOVS     r0,#1                 ;937
00011e  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000122  f10a0203          ADD      r2,r10,#3             ;937
000126  4669              MOV      r1,sp                 ;937
000128  2001              MOVS     r0,#1                 ;937
00012a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
00012e  2002              MOVS     r0,#2                 ;940
000130  f000b8d2          B.W      |L9.728|
000134  f8d80000          LDR      r0,[r8,#0]            ;946
000138  f4105f80          TST      r0,#0x1000            ;946
00013c  f00081bd          BEQ.W    |L9.1210|
000140  f88d6004          STRB     r6,[sp,#4]            ;949
000144  f88d6000          STRB     r6,[sp,#0]            ;949
000148  2400              MOVS     r4,#0                 ;949
                  |L9.330|
00014a  eb0a0204          ADD      r2,r10,r4             ;949
00014e  4669              MOV      r1,sp                 ;949
000150  2001              MOVS     r0,#1                 ;949
000152  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000156  1c64              ADDS     r4,r4,#1              ;949
000158  2c0a              CMP      r4,#0xa               ;949
00015a  dbf6              BLT      |L9.330|
00015c  f10a020a          ADD      r2,r10,#0xa           ;949
000160  a901              ADD      r1,sp,#4              ;949
000162  2001              MOVS     r0,#1                 ;949
000164  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000168  f10a020b          ADD      r2,r10,#0xb           ;949
00016c  4669              MOV      r1,sp                 ;949
00016e  2001              MOVS     r0,#1                 ;949
000170  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000174  f89a0003          LDRB     r0,[r10,#3]           ;949  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
000178  f8890000          STRB     r0,[r9,#0]            ;949
00017c  2003              MOVS     r0,#3                 ;952
00017e  f8890003          STRB     r0,[r9,#3]            ;952
000182  f8896002          STRB     r6,[r9,#2]            ;955
000186  48b2              LDR      r0,|L9.1104|
000188  6801              LDR      r1,[r0,#0]            ;955
00018a  f0217140          BIC      r1,r1,#0x3000000      ;955
00018e  f0417100          ORR      r1,r1,#0x2000000      ;955
000192  6001              STR      r1,[r0,#0]            ;955
000194  6801              LDR      r1,[r0,#0]            ;955
000196  f4211140          BIC      r1,r1,#0x300000       ;955
00019a  f4411100          ORR      r1,r1,#0x200000       ;955
00019e  6001              STR      r1,[r0,#0]            ;955
0001a0  49ac              LDR      r1,|L9.1108|
0001a2  1580              ASRS     r0,r0,#22             ;955
0001a4  8348              STRH     r0,[r1,#0x1a]         ;955
0001a6  48ac              LDR      r0,|L9.1112|
0001a8  6801              LDR      r1,[r0,#0]            ;955
0001aa  f42151a0          BIC      r1,r1,#0x1400         ;955
0001ae  6001              STR      r1,[r0,#0]            ;955
0001b0  2001              MOVS     r0,#1                 ;955
0001b2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
0001b6  48aa              LDR      r0,|L9.1120|
0001b8  49a8              LDR      r1,|L9.1116|
0001ba  6081              STR      r1,[r0,#8]            ;958
0001bc  2136              MOVS     r1,#0x36              ;959
0001be  6001              STR      r1,[r0,#0]            ;959
0001c0  2101              MOVS     r1,#1                 ;960
0001c2  1f00              SUBS     r0,r0,#4              ;960
0001c4  f7fffffe          BL       DMA_Cmd
0001c8  e732              B        |L9.48|
0001ca  f8990002          LDRB     r0,[r9,#2]            ;966  ; _ZN4Anki5Cozmo3HAL15m_isDMACompleteE
0001ce  2800              CMP      r0,#0                 ;966
0001d0  f0008173          BEQ.W    |L9.1210|
0001d4  2004              MOVS     r0,#4                 ;970
0001d6  f8890003          STRB     r0,[r9,#3]            ;970
0001da  f8896002          STRB     r6,[r9,#2]            ;973
0001de  4899              LDR      r0,|L9.1092|
0001e0  49a0              LDR      r1,|L9.1124|
0001e2  6800              LDR      r0,[r0,#0]            ;975  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
0001e4  4408              ADD      r0,r0,r1              ;975
0001e6  499e              LDR      r1,|L9.1120|
0001e8  6088              STR      r0,[r1,#8]            ;975
0001ea  4898              LDR      r0,|L9.1100|
0001ec  6800              LDR      r0,[r0,#0]            ;976  ; _ZN4Anki5Cozmo3HAL13m_writeLengthE
0001ee  6008              STR      r0,[r1,#0]            ;976
0001f0  2101              MOVS     r1,#1                 ;977
0001f2  489d              LDR      r0,|L9.1128|
0001f4  f7fffffe          BL       DMA_Cmd
0001f8  e71a              B        |L9.48|
0001fa  f8990002          LDRB     r0,[r9,#2]            ;985  ; _ZN4Anki5Cozmo3HAL15m_isDMACompleteE
0001fe  2800              CMP      r0,#0                 ;985
000200  f000815b          BEQ.W    |L9.1210|
000204  4899              LDR      r0,|L9.1132|
000206  8801              LDRH     r1,[r0,#0]            ;989
000208  f0110f01          TST      r1,#1                 ;989
00020c  bf18              IT       NE                    ;990
00020e  4998              LDRNE    r1,|L9.1136|
000210  d005              BEQ      |L9.542|
                  |L9.530|
000212  880a              LDRH     r2,[r1,#0]            ;990
000214  9200              STR      r2,[sp,#0]            ;989
000216  8802              LDRH     r2,[r0,#0]            ;989
000218  f0120f01          TST      r2,#1                 ;989
00021c  d1f9              BNE      |L9.530|
                  |L9.542|
00021e  8801              LDRH     r1,[r0,#0]            ;992
000220  f0110f80          TST      r1,#0x80              ;992
000224  d1fb              BNE      |L9.542|
000226  4992              LDR      r1,|L9.1136|
000228  8809              LDRH     r1,[r1,#0]            ;997
00022a  8800              LDRH     r0,[r0,#0]            ;998
00022c  9000              STR      r0,[sp,#0]            ;998
00022e  f44f7080          MOV      r0,#0x100             ;998
000232  e002              B        |L9.570|
000234  e053              B        |L9.734|
000236  e02d              B        |L9.660|
000238  e020              B        |L9.636|
                  |L9.570|
00023a  4986              LDR      r1,|L9.1108|
00023c  8308              STRH     r0,[r1,#0x18]         ;998
00023e  4884              LDR      r0,|L9.1104|
000240  6801              LDR      r1,[r0,#0]            ;998
000242  f0217140          BIC      r1,r1,#0x3000000      ;998
000246  6001              STR      r1,[r0,#0]            ;998
000248  6801              LDR      r1,[r0,#0]            ;998
00024a  f4211140          BIC      r1,r1,#0x300000       ;998
00024e  6001              STR      r1,[r0,#0]            ;998
000250  2001              MOVS     r0,#1                 ;998
000252  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
000256  4880              LDR      r0,|L9.1112|
000258  6801              LDR      r1,[r0,#0]            ;998
00025a  f44151a0          ORR      r1,r1,#0x1400         ;998
00025e  6001              STR      r1,[r0,#0]            ;998
000260  4878              LDR      r0,|L9.1092|
000262  6802              LDR      r2,[r0,#0]            ;1002  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
000264  4979              LDR      r1,|L9.1100|
000266  6809              LDR      r1,[r1,#0]            ;1002  ; _ZN4Anki5Cozmo3HAL13m_writeLengthE
000268  4411              ADD      r1,r1,r2              ;1002
00026a  6001              STR      r1,[r0,#0]            ;1002  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
00026c  6801              LDR      r1,[r0,#0]            ;1003  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
00026e  4a74              LDR      r2,|L9.1088|
000270  6812              LDR      r2,[r2,#0]            ;1003  ; _ZN4Anki5Cozmo3HAL17BUFFER_WRITE_SIZEE
000272  4291              CMP      r1,r2                 ;1003
000274  bfa8              IT       GE                    ;1004
000276  6006              STRGE    r6,[r0,#0]            ;1004  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
000278  f000b91c          B.W      |L9.1204|
                  |L9.636|
00027c  f8d80000          LDR      r0,[r8,#0]            ;1013
000280  f4106f80          TST      r0,#0x400             ;1013
000284  bf1c              ITT      NE                    ;1017
000286  2006              MOVNE    r0,#6                 ;1017
000288  f8890003          STRBNE   r0,[r9,#3]            ;1017
00028c  f47faed0          BNE      |L9.48|
000290  f000b913          B.W      |L9.1210|
                  |L9.660|
000294  f8d80000          LDR      r0,[r8,#0]            ;1023
000298  f4105f80          TST      r0,#0x1000            ;1023
00029c  f040810d          BNE.W    |L9.1210|
0002a0  2001              MOVS     r0,#1                 ;1023
0002a2  f88d6000          STRB     r6,[sp,#0]            ;1023
0002a6  f88d0004          STRB     r0,[sp,#4]            ;1023
0002aa  4a63              LDR      r2,|L9.1080|
0002ac  4669              MOV      r1,sp                 ;1023
0002ae  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0002b2  f10a0201          ADD      r2,r10,#1             ;1023
0002b6  4669              MOV      r1,sp                 ;1023
0002b8  2001              MOVS     r0,#1                 ;1023
0002ba  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0002be  f10a0202          ADD      r2,r10,#2             ;1023
0002c2  4669              MOV      r1,sp                 ;1023
0002c4  2001              MOVS     r0,#1                 ;1023
0002c6  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0002ca  f10a0203          ADD      r2,r10,#3             ;1023
0002ce  a901              ADD      r1,sp,#4              ;1023
0002d0  2001              MOVS     r0,#1                 ;1023
0002d2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0002d6  2007              MOVS     r0,#7                 ;1028
                  |L9.728|
0002d8  f8890003          STRB     r0,[r9,#3]            ;940
0002dc  e6a8              B        |L9.48|
                  |L9.734|
0002de  f8d80000          LDR      r0,[r8,#0]            ;1034
0002e2  f4105f80          TST      r0,#0x1000            ;1034
0002e6  d07a              BEQ      |L9.990|
0002e8  f88d6000          STRB     r6,[sp,#0]            ;1034
0002ec  aa02              ADD      r2,sp,#8              ;1034
0002ee  4669              MOV      r1,sp                 ;1034
0002f0  2001              MOVS     r0,#1                 ;1034
0002f2  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
0002f6  aa03              ADD      r2,sp,#0xc            ;1034
0002f8  4669              MOV      r1,sp                 ;1034
0002fa  2001              MOVS     r0,#1                 ;1034
0002fc  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000300  aa01              ADD      r2,sp,#4              ;1034
000302  4669              MOV      r1,sp                 ;1034
000304  2001              MOVS     r0,#1                 ;1034
000306  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
00030a  4a49              LDR      r2,|L9.1072|
00030c  4669              MOV      r1,sp                 ;1034
00030e  2001              MOVS     r0,#1                 ;1034
000310  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
000314  f8990000          LDRB     r0,[r9,#0]            ;1034  ; _ZN4Anki5Cozmo3HAL14m_moduleStatusE
000318  f0100f04          TST      r0,#4                 ;1034
00031c  bf08              IT       EQ                    ;1034
00031e  4635              MOVEQ    r5,r6                 ;1034
000320  d023              BEQ      |L9.874|
000322  f89d0004          LDRB     r0,[sp,#4]            ;1034
000326  2800              CMP      r0,#0                 ;1034
000328  bf1c              ITT      NE                    ;1034
00032a  28ff              CMPNE    r0,#0xff              ;1034
00032c  f04f35ff          MOVNE    r5,#0xffffffff        ;1034
000330  d11b              BNE      |L9.874|
000332  f89d000c          LDRB     r0,[sp,#0xc]          ;1034
000336  f89d1008          LDRB     r1,[sp,#8]            ;1034
00033a  f000000f          AND      r0,r0,#0xf            ;1034
00033e  ea412500          ORR      r5,r1,r0,LSL #8       ;1034
000342  2400              MOVS     r4,#0                 ;1034
                  |L9.836|
000344  aa01              ADD      r2,sp,#4              ;1034
000346  4669              MOV      r1,sp                 ;1034
000348  2001              MOVS     r0,#1                 ;1034
00034a  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
00034e  1c64              ADDS     r4,r4,#1              ;1034
000350  2c0c              CMP      r4,#0xc               ;1034
000352  dbf7              BLT      |L9.836|
000354  b14d              CBZ      r5,|L9.874|
000356  4629              MOV      r1,r5                 ;1034
000358  4846              LDR      r0,|L9.1140|
00035a  f7fffffe          BL       __aeabi_memclr
00035e  4a36              LDR      r2,|L9.1080|
000360  4628              MOV      r0,r5                 ;1034
000362  f20251ee          ADD      r1,r2,#0x5ee          ;1034
000366  f7fffffe          BL       _ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh ; Anki::Cozmo::HAL::SPI_SendReceive(unsigned, const unsigned char*, unsigned char*)
                  |L9.874|
00036a  f8990001          LDRB     r0,[r9,#1]            ;1041  ; _ZN4Anki5Cozmo3HAL19m_isClientConnectedE
00036e  2800              CMP      r0,#0                 ;1041
000370  bf08              IT       EQ                    ;1041
000372  2d08              CMPEQ    r5,#8                 ;1041
000374  d034              BEQ      |L9.992|
000376  2d02              CMP      r5,#2                 ;1052
000378  d041              BEQ      |L9.1022|
00037a  2d36              CMP      r5,#0x36              ;1060
00037c  db56              BLT      |L9.1068|
00037e  4d2e              LDR      r5,|L9.1080|
000380  483d              LDR      r0,|L9.1144|
000382  886c              LDRH     r4,[r5,#2]            ;1065
000384  6801              LDR      r1,[r0,#0]            ;1065  ; _ZN4Anki5Cozmo3HAL10m_readTailE
000386  f8dfb0f4          LDR      r11,|L9.1148|
00038a  f8db0000          LDR      r0,[r11,#0]           ;1065  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
00038e  4288              CMP      r0,r1                 ;1065
000390  bfb8              IT       LT                    ;1065
000392  1a08              SUBLT    r0,r1,r0              ;1065
000394  db03              BLT      |L9.926|
000396  1a41              SUBS     r1,r0,r1              ;1065
000398  4839              LDR      r0,|L9.1152|
00039a  6800              LDR      r0,[r0,#0]            ;1065  ; _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE
00039c  1a40              SUBS     r0,r0,r1              ;1065
                  |L9.926|
00039e  1c61              ADDS     r1,r4,#1              ;1068
0003a0  4288              CMP      r0,r1                 ;1068
0003a2  db43              BLT      |L9.1068|
0003a4  4f36              LDR      r7,|L9.1152|
0003a6  f8db1000          LDR      r1,[r11,#0]           ;1070  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
0003aa  6838              LDR      r0,[r7,#0]            ;1070  ; _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE
0003ac  1a40              SUBS     r0,r0,r1              ;1070
0003ae  4284              CMP      r4,r0                 ;1071
0003b0  dc6c              BGT      |L9.1164|
0003b2  4834              LDR      r0,|L9.1156|
0003b4  f8db1000          LDR      r1,[r11,#0]           ;1073  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
0003b8  4622              MOV      r2,r4                 ;1073
0003ba  4408              ADD      r0,r0,r1              ;1073
0003bc  f1050136          ADD      r1,r5,#0x36           ;1073
0003c0  f7fffffe          BL       __aeabi_memcpy
0003c4  f8db0000          LDR      r0,[r11,#0]           ;1074  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
0003c8  4420              ADD      r0,r0,r4              ;1074
0003ca  f8cb0000          STR      r0,[r11,#0]           ;1074  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
0003ce  f8db0000          LDR      r0,[r11,#0]           ;1076  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
0003d2  6839              LDR      r1,[r7,#0]            ;1076  ; _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE
0003d4  4281              CMP      r1,r0                 ;1076
0003d6  bfd8              IT       LE                    ;1078
0003d8  f8cb6000          STRLE    r6,[r11,#0]           ;1078  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
0003dc  e06a              B        |L9.1204|
                  |L9.990|
0003de  e06c              B        |L9.1210|
                  |L9.992|
0003e0  481e              LDR      r0,|L9.1116|
0003e2  f89a1000          LDRB     r1,[r10,#0]           ;1043  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
0003e6  7001              STRB     r1,[r0,#0]            ;1043
0003e8  f89a1001          LDRB     r1,[r10,#1]           ;1044  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
0003ec  7041              STRB     r1,[r0,#1]            ;1044
0003ee  2001              MOVS     r0,#1                 ;1045
0003f0  f8890001          STRB     r0,[r9,#1]            ;1045
0003f4  4814              LDR      r0,|L9.1096|
0003f6  6801              LDR      r1,[r0,#0]            ;1051  ; _ZN4Anki5Cozmo3HAL11m_writeHeadE
0003f8  4812              LDR      r0,|L9.1092|
0003fa  6001              STR      r1,[r0,#0]            ;1051  ; _ZN4Anki5Cozmo3HAL11m_writeTailE
0003fc  e05a              B        |L9.1204|
                  |L9.1022|
0003fe  f8990001          LDRB     r0,[r9,#1]            ;1052  ; _ZN4Anki5Cozmo3HAL19m_isClientConnectedE
000402  b198              CBZ      r0,|L9.1068|
000404  4815              LDR      r0,|L9.1116|
000406  f89a2000          LDRB     r2,[r10,#0]           ;1053  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
00040a  7801              LDRB     r1,[r0,#0]            ;1053  ; _ZN4Anki5Cozmo3HAL14m_bufferSocketE
00040c  4291              CMP      r1,r2                 ;1053
00040e  d151              BNE      |L9.1204|
000410  7840              LDRB     r0,[r0,#1]            ;1054  ; _ZN4Anki5Cozmo3HAL14m_bufferSocketE
000412  f89a1001          LDRB     r1,[r10,#1]           ;1054  ; _ZN4Anki5Cozmo3HAL13m_payloadReadE
000416  4288              CMP      r0,r1                 ;1054
000418  d14c              BNE      |L9.1204|
00041a  4a1b              LDR      r2,|L9.1160|
00041c  210a              MOVS     r1,#0xa               ;1054
00041e  2042              MOVS     r0,#0x42              ;1054
000420  f7fffffe          BL       _ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh ; Anki::Cozmo::HAL::WifiCommand(Anki::Cozmo::HAL::WifiTransmitCommand, unsigned short, const unsigned char*)
000424  2800              CMP      r0,#0                 ;1054
000426  bfa8              IT       GE                    ;1054
000428  f8896001          STRBGE   r6,[r9,#1]            ;1054
                  |L9.1068|
00042c  e042              B        |L9.1204|
00042e  e02d              B        |L9.1164|
                  |L9.1072|
                          DCD      ||.data||
                  |L9.1076|
                          DCD      0x40020810
                  |L9.1080|
                          DCD      OFFCHIP
                  |L9.1084|
                          DCD      _ZN4Anki5Cozmo3HAL16m_isTransferringE ; Anki::Cozmo::HAL::m_isTransferring
                  |L9.1088|
                          DCD      _ZN4Anki5Cozmo3HAL17BUFFER_WRITE_SIZEE ; Anki::Cozmo::HAL::BUFFER_WRITE_SIZE
                  |L9.1092|
                          DCD      _ZN4Anki5Cozmo3HAL11m_writeTailE ; Anki::Cozmo::HAL::m_writeTail
                  |L9.1096|
                          DCD      _ZN4Anki5Cozmo3HAL11m_writeHeadE ; Anki::Cozmo::HAL::m_writeHead
                  |L9.1100|
                          DCD      _ZN4Anki5Cozmo3HAL13m_writeLengthE ; Anki::Cozmo::HAL::m_writeLength
                  |L9.1104|
                          DCD      0x40020800
                  |L9.1108|
                          DCD      0x40020000
                  |L9.1112|
                          DCD      0x40013c00
                  |L9.1116|
                          DCD      ONCHIP
                  |L9.1120|
                          DCD      0x400260bc
                  |L9.1124|
                          DCD      _ZN4Anki5Cozmo3HAL13m_bufferWriteE ; Anki::Cozmo::HAL::m_bufferWrite
                  |L9.1128|
                          DCD      0x400260b8
                  |L9.1132|
                          DCD      0x40003c08
                  |L9.1136|
                          DCD      0x40003c0c
                  |L9.1140|
                          DCD      OFFCHIP+0x5ee
                  |L9.1144|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readTailE ; Anki::Cozmo::HAL::m_readTail
                  |L9.1148|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readHeadE ; Anki::Cozmo::HAL::m_readHead
                  |L9.1152|
                          DCD      _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE ; Anki::Cozmo::HAL::BUFFER_READ_SIZE
                  |L9.1156|
                          DCD      _ZN4Anki5Cozmo3HAL12m_bufferReadE ; Anki::Cozmo::HAL::m_bufferRead
                  |L9.1160|
                          DCD      ||.constdata||+0x46
                  |L9.1164|
00048c  4607              MOV      r7,r0                 ;1082
00048e  4811              LDR      r0,|L9.1236|
000490  f8db1000          LDR      r1,[r11,#0]           ;1083  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
000494  463a              MOV      r2,r7                 ;1083
000496  4408              ADD      r0,r0,r1              ;1083
000498  f1050136          ADD      r1,r5,#0x36           ;1083
00049c  f7fffffe          BL       __aeabi_memcpy
0004a0  19e8              ADDS     r0,r5,r7              ;1086
0004a2  1be4              SUBS     r4,r4,r7              ;1085
0004a4  f1000136          ADD      r1,r0,#0x36           ;1086
0004a8  4622              MOV      r2,r4                 ;1086
0004aa  480a              LDR      r0,|L9.1236|
0004ac  f7fffffe          BL       __aeabi_memcpy
0004b0  f8cb4000          STR      r4,[r11,#0]           ;1088  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
                  |L9.1204|
0004b4  f8896003          STRB     r6,[r9,#3]            ;1093
0004b8  e5ba              B        |L9.48|
                  |L9.1210|
0004ba  b672              CPSID    i                     ;1099
0004bc  f8990004          LDRB     r0,[r9,#4]            ;1100  ; reentry
0004c0  f8896004          STRB     r6,[r9,#4]            ;1101
0004c4  b662              CPSIE    i                     ;1102
0004c6  2801              CMP      r0,#1                 ;1103
0004c8  f63fad9d          BHI      |L9.6|
0004cc  b005              ADD      sp,sp,#0x14
0004ce  e8bd8ff0          POP      {r4-r11,pc}
;;;1106         
                          ENDP

0004d2  0000              DCW      0x0000
                  |L9.1236|
                          DCD      _ZN4Anki5Cozmo3HAL12m_bufferReadE ; Anki::Cozmo::HAL::m_bufferRead

                          AREA ||i._ZN4Anki5Cozmo3HAL23UARTGetFreeReceiveSpaceEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL23UARTGetFreeReceiveSpaceEv PROC ; Anki::Cozmo::HAL::UARTGetFreeReceiveSpace()
;;;852          
;;;853          int UARTGetFreeReceiveSpace()
000000  4806              LDR      r0,|L10.28|
;;;854          {
;;;855            int tail = m_readTail;
000002  6800              LDR      r0,[r0,#0]  ; _ZN4Anki5Cozmo3HAL10m_readTailE
;;;856            int head = m_readHead;
000004  4906              LDR      r1,|L10.32|
000006  6809              LDR      r1,[r1,#0]  ; _ZN4Anki5Cozmo3HAL10m_readHeadE
;;;857            if (head < tail)
000008  4281              CMP      r1,r0
;;;858              return tail - head;
00000a  bfbc              ITT      LT
00000c  1a40              SUBLT    r0,r0,r1
;;;859            else
;;;860              return BUFFER_READ_SIZE - (head - tail);
;;;861          }
00000e  4770              BXLT     lr
000010  1a08              SUBS     r0,r1,r0              ;860
000012  4904              LDR      r1,|L10.36|
000014  6809              LDR      r1,[r1,#0]            ;860  ; _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE
000016  1a08              SUBS     r0,r1,r0              ;860
000018  4770              BX       lr
;;;862          
                          ENDP

00001a  0000              DCW      0x0000
                  |L10.28|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readTailE ; Anki::Cozmo::HAL::m_readTail
                  |L10.32|
                          DCD      _ZN4Anki5Cozmo3HAL10m_readHeadE ; Anki::Cozmo::HAL::m_readHead
                  |L10.36|
                          DCD      _ZN4Anki5Cozmo3HAL16BUFFER_READ_SIZEE ; Anki::Cozmo::HAL::BUFFER_READ_SIZE

                          AREA ||i._ZN4Anki5Cozmo3HAL8WifiInitEv||, CODE, READONLY, ALIGN=2

                  _ZN4Anki5Cozmo3HAL8WifiInitEv PROC ; Anki::Cozmo::HAL::WifiInit()
;;;1215         
;;;1216         bool WifiInit()
000000  b510              PUSH     {r4,lr}
;;;1217         {
;;;1218   #ifndef ENABLE_WIFI
;;;1219           return false;
;;;1220   #else 
;;;1221           // Auto detect wifi module by checking for CS pull-up
;;;1222           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;1223           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  2004              MOVS     r0,#4
00000e  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;1224           
;;;1225           // Check interrupt pin instead - it will be pulled up if module is healthy/booted
;;;1226           // XXX-NDM:  This doesn't work right since CS is pulled up with 47K instead of 10K
;;;1227           GPIO_RESET(GPIO_SPI_CS, PIN_SPI_CS);
000012  4c0f              LDR      r4,|L11.80|
000014  f44f7080          MOV      r0,#0x100
000018  8360              STRH     r0,[r4,#0x1a]
;;;1228           PIN_OUT(GPIO_SPI_CS, SOURCE_SPI_CS);        
00001a  6820              LDR      r0,[r4,#0]
00001c  f4203040          BIC      r0,r0,#0x30000
000020  f4403080          ORR      r0,r0,#0x10000
000024  6020              STR      r0,[r4,#0]
;;;1229           MicroWait(1);  // Drain pin
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
;;;1230           PIN_IN(GPIO_SPI_CS, SOURCE_SPI_CS);
00002c  6820              LDR      r0,[r4,#0]
00002e  f4203040          BIC      r0,r0,#0x30000
000032  6020              STR      r0,[r4,#0]
;;;1231           MicroWait(1);  // Float pin
000034  2001              MOVS     r0,#1
000036  f7fffffe          BL       _ZN4Anki5Cozmo3HAL9MicroWaitEj ; Anki::Cozmo::HAL::MicroWait(unsigned)
;;;1232           
;;;1233           if (GPIO_READ(GPIO_SPI_CS) & PIN_SPI_CS)
00003a  6920              LDR      r0,[r4,#0x10]
00003c  f4107080          ANDS     r0,r0,#0x100
;;;1234             return WifiConfigure() >= 0;    // Bad is -1, good is 0.. grr!
;;;1235           else
;;;1236             return false;
;;;1237   #endif        
;;;1238         }
000040  bf08              IT       EQ
000042  bd10              POPEQ    {r4,pc}
000044  f7fffffe          BL       _ZN4Anki5Cozmo3HAL13WifiConfigureEv ; Anki::Cozmo::HAL::WifiConfigure()
000048  17c0              ASRS     r0,r0,#31             ;1234
00004a  1c40              ADDS     r0,r0,#1              ;1234
00004c  bd10              POP      {r4,pc}
;;;1239         
                          ENDP

00004e  0000              DCW      0x0000
                  |L11.80|
                          DCD      0x40020000

                          AREA ||i.__sti___8_wifi_cpp||, CODE, READONLY, ALIGN=2

                  __sti___8_wifi_cpp PROC
000000  4803              LDR      r0,|L12.16|
000002  ed9f0a02          VLDR     s0,|L12.12|
000006  ed800a05          VSTR     s0,[r0,#0x14]
00000a  4770              BX       lr
                          ENDP

                  |L12.12|
00000c  423df6f2          DCFS     0x423df6f2 ; 47.491157531738281
                  |L12.16|
                          DCD      ||.data||

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4Anki5Cozmo3HAL23UARTGetFreeReceiveSpaceEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL23UARTGetFreeReceiveSpaceEv||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i._ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL15SPI_SendReceiveEjPKhPh||
                          DCD      0x00000001

                          AREA ||area_number.15||, LINKORDER=||i._ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL11WifiCommandENS1_19WifiTransmitCommandEtPKh||
                          DCD      0x00000001

                          AREA ||area_number.16||, LINKORDER=||i._ZN4Anki5Cozmo3HAL16WifiStateMachineEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL16WifiStateMachineEv||
                          DCD      0x00000001

                          AREA ||area_number.17||, LINKORDER=||i.DMA1_Stream7_IRQHandler||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.DMA1_Stream7_IRQHandler||
                          DCD      0x00000001

                          AREA ||area_number.18||, LINKORDER=||i.EXTI15_10_IRQHandler||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.EXTI15_10_IRQHandler||
                          DCD      0x00000001

                          AREA ||area_number.19||, LINKORDER=||i._ZN4Anki5Cozmo3HAL16WifiGetCharacterEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL16WifiGetCharacterEj||
                          DCD      0x00000001

                          AREA ||area_number.20||, LINKORDER=||i._ZN4Anki5Cozmo3HAL13WifiConfigureEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL13WifiConfigureEv||
                          DCD      0x00000001

                          AREA ||area_number.21||, LINKORDER=||i._ZN4Anki5Cozmo3HAL8WifiInitEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL8WifiInitEv||
                          DCD      0x00000001

                          AREA ||area_number.22||, LINKORDER=||i._ZN4Anki5Cozmo3HAL13WifiHasClientEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL13WifiHasClientEv||
                          DCD      0x00000001

                          AREA ||area_number.23||, LINKORDER=||i.__sti___8_wifi_cpp||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___8_wifi_cpp||
                          DCD      0x00000001

                          AREA ||area_number.24||, LINKORDER=||i._ZN4Anki5Cozmo3HAL15WifiRxSpiReady1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Anki5Cozmo3HAL15WifiRxSpiReady1Ev||
                          DCD      0x00000001

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  g_MACToIP
000000  0023a70c          DCB      0x00,0x23,0xa7,0x0c
000004  028cc0a8          DCB      0x02,0x8c,0xc0,0xa8
000008  031e0023          DCB      0x03,0x1e,0x00,0x23
00000c  a70c01ff          DCB      0xa7,0x0c,0x01,0xff
000010  c0a8031f          DCB      0xc0,0xa8,0x03,0x1f
000014  0023a70c          DCB      0x00,0x23,0xa7,0x0c
000018  039bc0a8          DCB      0x03,0x9b,0xc0,0xa8
00001c  03200023          DCB      0x03,0x20,0x00,0x23
000020  a70c03c7          DCB      0xa7,0x0c,0x03,0xc7
000024  c0a80321          DCB      0xc0,0xa8,0x03,0x21
000028  0023a70c          DCB      0x00,0x23,0xa7,0x0c
00002c  03f7c0a8          DCB      0x03,0xf7,0xc0,0xa8
000030  03220023          DCB      0x03,0x22,0x00,0x23
000034  a70c0381          DCB      0xa7,0x0c,0x03,0x81
000038  c0a80323          DCB      0xc0,0xa8,0x03,0x23
00003c  0023a70c          DCB      0x00,0x23,0xa7,0x0c
000040  03f8c0a8          DCB      0x03,0xf8,0xc0,0xa8
000044  0324              DCB      0x03,0x24
                  socketData
000046  0200              DCB      0x02,0x00
000048  af15af15          DCB      0xaf,0x15,0xaf,0x15
00004c  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  416e6b69          DCB      "AnkiRobits",0
000004  526f6269
000008  747300  
00000b  4b6c6161          DCB      "KlaatuBaradaNikto!",0
00000f  74754261
000013  72616461
000017  4e696b74
00001b  6f2100  

                          AREA ||.data||, DATA, ALIGN=2

                  _ZN4Anki5Cozmo3HAL14m_moduleStatusE ; Anki::Cozmo::HAL::m_moduleStatus
000000  00                DCB      0x00
                  _ZN4Anki5Cozmo3HAL19m_isClientConnectedE ; Anki::Cozmo::HAL::m_isClientConnected
000001  00                DCB      0x00
                  _ZN4Anki5Cozmo3HAL15m_isDMACompleteE ; Anki::Cozmo::HAL::m_isDMAComplete
000002  00                DCB      0x00
                  _ZN4Anki5Cozmo3HAL11m_waitStateE ; Anki::Cozmo::HAL::m_waitState
000003  00                DCB      0x00
                  reentry
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  ssid
                          DCD      ||.conststring||
                  psk
                          DCD      ||.conststring||+0xb
                  g_moduleIndex
                          DCD      0x00000000
                  _ZN4Anki5Cozmo21ROBOT_BOUNDING_RADIUSE ; Anki::Cozmo::ROBOT_BOUNDING_RADIUS
                          DCD      0x00000000

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___8_wifi_cpp

                          AREA OFFCHIP, DATA, ALIGN=0

                  _ZN4Anki5Cozmo3HAL13m_payloadReadE ; Anki::Cozmo::HAL::m_payloadRead
                          %        1516
0005ec  0000              DCB      0x00,0x00
                  _ZN4Anki5Cozmo3HAL14m_payloadWriteE ; Anki::Cozmo::HAL::m_payloadWrite
0005ee  0000              DCB      0x00,0x00
                          %        1452

                          AREA ONCHIP, DATA, ALIGN=0

                  _ZN4Anki5Cozmo3HAL14m_bufferSocketE ; Anki::Cozmo::HAL::m_bufferSocket
000000  00000000          DCB      0x00,0x00,0x00,0x00
                          %        48
000034  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "arm_hal\\hal\\wifi.cpp"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_wifi_cpp_e98670a3___Z7__REV16j|
#line 129 ".\\arm_hal\\lib\\core_cmInstr.h"
|__asm___8_wifi_cpp_e98670a3___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_wifi_cpp_e98670a3___Z7__REVSHi|
#line 144
|__asm___8_wifi_cpp_e98670a3___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
