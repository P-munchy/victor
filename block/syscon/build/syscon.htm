<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\build\syscon.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\build\syscon.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Mon Mar 09 15:13:01 2015
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; MotorsUpdate() &rArr; MotorsGetSpeed(unsigned char) &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[24]">MicroWait(unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">MicroWait(unsigned)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[13]">ECB_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[b]">GPIOTE_IRQHandler</a> from motors.o(i.GPIOTE_IRQHandler) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[6]">POWER_CLOCK_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[17]">QDEC_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[7]">RADIO_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[12]">RNG_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[10]">RTC0_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[16]">RTC1_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[9]">SPI0_TWI0_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI1_TWI1_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[19]">SWI0_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI1_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI2_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI3_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI4_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI5_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from main.o(i.SystemInit) referenced from startup_nrf51.o(.text)
 <LI><a href="#[11]">TEMP_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[8]">UART0_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[15]">WDT_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[18]">WUCOMP_COMP_IRQHandler</a> from startup_nrf51.o(.text) referenced from startup_nrf51.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_nrf51.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[3f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[40]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[41]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[42]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[24]"></a>MicroWait(unsigned)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicroWait(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSetTransmit(unsigned char)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicroWait(unsigned)
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn()
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPITransmitReceive(unsigned short, const unsigned char*, unsigned char*)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryUpdate()
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RTC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>WUCOMP_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryUpdate()
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInit()
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsSetPower(unsigned char, short)
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_ldivmod</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsGetSpeed(unsigned char)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryUpdate()
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInit()
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[45]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[46]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[47]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, motors.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>MotorsInit()</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, motors.o(i._Z10MotorsInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MotorsInit() &rArr; ConfigureTimer(NRF_TIMER_Type*, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureTimer(NRF_TIMER_Type*, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>BatteryInit()</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, battery.o(i._Z11BatteryInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BatteryInit() &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startADCsample(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>IsOnContacts()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, battery.o(i._Z12IsOnContactsv))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>MotorsUpdate()</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, motors.o(i._Z12MotorsUpdatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MotorsUpdate() &rArr; MotorsGetSpeed(unsigned char) &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsGetSpeed(unsigned char)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureTask(unsigned char, volatile unsigned*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>BatteryUpdate()</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, battery.o(i._Z13BatteryUpdatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BatteryUpdate() &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startADCsample(unsigned char)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicroWait(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>UARTPutString(const char*)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, uart.o(i._Z13UARTPutStringPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UARTPutString(const char*) &rArr; UARTSetTransmit(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSetTransmit(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>MotorsGetSpeed(unsigned char)</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, motors.o(i._Z14MotorsGetSpeedh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MotorsGetSpeed(unsigned char) &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsUpdate()
</UL>

<P><STRONG><a name="[37]"></a>MotorsSetPower(unsigned char, short)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, motors.o(i._Z14MotorsSetPowerhs))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MotorsSetPower(unsigned char, short) &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>UARTSetTransmit(unsigned char)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, uart.o(i._Z15UARTSetTransmith))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTSetTransmit(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicroWait(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutString(const char*)
</UL>

<P><STRONG><a name="[38]"></a>SPITransmitReceive(unsigned short, const unsigned char*, unsigned char*)</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, spi.o(i._Z18SPITransmitReceivetPKhPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPITransmitReceive(unsigned short, const unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicroWait(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>PowerOn()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, battery.o(i._Z7PowerOnv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerOn()
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicroWait(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>SPIInit()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, spi.o(i._Z7SPIInitv))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>TimerInit()</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, timer.o(i._Z9TimerInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TimerInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>__ARM_common_ll_mulss</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, battery.o(i.__ARM_common_ll_mulss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_common_ll_mulss
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryUpdate()
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInit()
</UL>

<P><STRONG><a name="[48]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[49]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; MotorsUpdate() &rArr; MotorsGetSpeed(unsigned char) &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInit()
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIInit()
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn()
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPITransmitReceive(unsigned short, const unsigned char*, unsigned char*)
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsSetPower(unsigned char, short)
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutString(const char*)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryUpdate()
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsUpdate()
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsOnContacts()
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInit()
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsInit()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[32]"></a>ConfigureTask(unsigned char, volatile unsigned*)</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, motors.o(i._Z13ConfigureTaskhPVj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ConfigureTask(unsigned char, volatile unsigned*)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsUpdate()
</UL>

<P><STRONG><a name="[2d]"></a>ConfigureTimer(NRF_TIMER_Type*, unsigned char, unsigned char)</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, motors.o(i._Z14ConfigureTimerP14NRF_TIMER_Typehh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConfigureTimer(NRF_TIMER_Type*, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorsInit()
</UL>

<P><STRONG><a name="[2f]"></a>startADCsample(unsigned char)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, battery.o(i._Z14startADCsampleh))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryUpdate()
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryInit()
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
