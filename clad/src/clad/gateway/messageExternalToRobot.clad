namespace Anki {
namespace Victor {
namespace Gateway {

message UiDeviceConnectionWrongVersion {
  string placeHolder,
}

message DriveWheels {
  float_32 lwheel_speed_mmps,
  float_32 rwheel_speed_mmps,
  float_32 lwheel_accel_mmps2 = 0.0,
  float_32 rwheel_accel_mmps2 = 0.0,
}

message PlayAnimation {
  uint_32 numLoops,
  string  animationName,
  bool    ignoreBodyTrack = 0,
  bool    ignoreHeadTrack = 0,
  bool    ignoreLiftTrack = 0,
}

message MoveHead {
  float_32 speed_rad_per_sec,
}

message MoveLift {
  float_32 speed_rad_per_sec,
}

message DriveArc {
  float_32 speed,               // Target speed in mm/sec
                                // If curvatureRadius_mm == 0, the speed is in rad/s where +ve means CCW rotation.
  float_32 accel,               // Acceleration to approach target speed in mm/sec^2 (Sign is ignored)
                                // (or rad/s^2 if curvatureRadius_mm == 0)
                                // 0: Max acceleration
  int_16 curvatureRadius_mm     // Radius of arc to drive
                                // u16_MAX or u16_MIN: Straight
                                // +ve: curves left, -ve: curves right
                                // 0: Point turn
}

// Sends a chunk of oled data, to be later displayed using DisplayFaceImageRGB
message DisplayFaceImageRGBChunk {
    uint_16  faceData[600], // Splitting into chunks of 600 similar to the e2r layer
    uint_16  numPixels,
    uint_8   chunkIndex,
    uint_8   numChunks,
    uint_32  duration_ms,     // Use uint_32 max value to keep the image on the screen
    bool     interruptRunning,
}

// Request a status history
message RobotHistoryRequest {
}

// Request control from behavior system
message SDKActivationRequest {
  uint_32 slot, // TODO Use the BehaviorSlot enum
  bool enable,
}

// Note: these values and messages must match the values that get added to MessageGameToEngine
union MessageExternalToRobot {
  UiDeviceConnectionWrongVersion UiDeviceConnectionWrongVersion = 0x00, // DO NOT CHANGE THIS VALUE
  DriveWheels                    DriveWheels                    = 0x01,
  PlayAnimation                  PlayAnimation                  = 0x02,
  MoveHead                       MoveHead                       = 0x03,
  MoveLift                       MoveLift                       = 0x04,
  DriveArc                       DriveArc                       = 0x05,
  RobotHistoryRequest            RobotHistoryRequest            = 0x06,
  SDKActivationRequest           SDKActivationRequest           = 0x07,
  DisplayFaceImageRGBChunk       DisplayFaceImageRGBChunk       = 0x08,
}

} // Gateway
} // Victor
} // Anki
