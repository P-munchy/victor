namespace Anki {
namespace Victor {
namespace Gateway {

message UiDeviceConnected {
  string placeholder,
}

structure AnimationCompleted {
  string animationName,
}

union ActionCompletedUnion {
  AnimationCompleted          animationCompleted = 0x01,
}

enum int_32 RobotActionType {
    UNKNOWN = -1,
}

enum uint_32 ActionResult {
  SUCCESS                 = 0, // This is still zero
  RUNNING                 = 16777216,
  CANCELLED_WHILE_RUNNING = 33554432,
}

message RobotCompletedAction {
    uint_32 idTag,                                 // The identifier of the specific action that completed
    RobotActionType      actionType,
    ActionResult         result,
    ActionResult         subActionResults[uint_8], // vector of all results from this action's subActions
    ActionCompletedUnion completionInfo,
}

// TODO: remove this once we figure out how we want the engine to send events
// Chicken and the egg problem with VIC-3186
message EventPlaceholder {
  string test,
}

// Note: these values and messages must match the values that get added to MessageEngineToGame
union MessageRobotToExternal {
  UiDeviceConnected    UiDeviceConnected    = 0x00, // DO NOT CHANGE THIS VALUE
  RobotCompletedAction RobotCompletedAction = 0x01,
  EventPlaceholder     EventPlaceholder     = 0x02, // TODO: Remove this when the events are fully implemented through to engine
}

} // Gateway
} // Victor
} // Anki
