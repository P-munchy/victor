#include "clad/gateway/shared.clad"

namespace Anki {
namespace Victor {
namespace Gateway {

structure ActiveAccel
{
  float_32 x,
  float_32 y,
  float_32 z
}

enum uint_8 UpAxis {
  XNegative,
  XPositive,
  YNegative,
  YPositive,
  ZNegative,
  ZPositive,
  NumAxes,
  UnknownAxis
}

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////////  CUBES  ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// Indicates that a cube has connected or disconnected
message ObjectConnectionState
{
  uint_32 objectID,
  string factoryID,
  ObjectType  object_type,
  bool connected
}

message ObjectMoved
{
  uint_32     timestamp,
  uint_32     objectID,
}

message ObjectAvailable
{
  string      factory_id,
  ObjectType  objectType,
  int_8       rssi
}

message ObjectStoppedMoving
{
  uint_32 timestamp,
  uint_32 objectID,
}

message ObjectUpAxisChanged
{
  uint_32 timestamp,
  uint_32 objectID,
  UpAxis  upAxis,
}

message ObjectTapped
{
  uint_32 timestamp,
  uint_32 objectID,
}

message ObjectAccel
{
  uint_32 timestamp,
  uint_32 objectID,
  ActiveAccel accel,
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////  ANIMATIONS  //////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

message LoadedKnownFace {
    int_64   secondsSinceFirstEnrolled,
    int_64   secondsSinceLastUpdated,
    int_64   secondsSinceLastSeen,
    int_64   lastSeenSecondsSinceEpoch,
    int_32   faceID,
    string   name,
}

// Receives the requested list of names and IDs.
message EnrolledNamesResponse {
  LoadedKnownFace faces[uint_8],
}

// Anything that the robot wishes to push to the app that 
// is not a response to a request from the app.
// DEPRECATED. Please try to use protobuf's Event instead
message RequiredEmptyMessage{}
union Event {
  RequiredEmptyMessage replaceMe,
}

// RobotDeletedFixedCustomObjects
message RobotDeletedFixedCustomObjects {
}

// RobotDeletedCustomMarkerObjects
message RobotDeletedCustomMarkerObjects {
}

// CreatedFixedCustomObject
message CreatedFixedCustomObject {
  uint_32 objectID
}

// DefinedCustomObject
message DefinedCustomObject {
  bool success     // false if the last custom object definition failed (e.g. due to duplicate marker already in use)
}

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////  MEMORY MAP DATA  ///////////////////////////////
///////////////////////////////////////////////////////////////////////////////

enum uint_8 ENodeContentTypeEnum
{
  Unknown,
  ClearOfObstacle,
  ClearOfCliff,
  ObstacleCube,
  ObstacleProx,
  ObstacleProxExplored,
  ObstacleUnrecognized,
  Cliff,
  InterestingEdge,
  NotInterestingEdge,
}

// Info about an individual quad in the memory map
structure MemoryMapQuadInfo
{
  ENodeContentTypeEnum content,
  uint_8               depth,
  uint_32              colorRGBA
}

// We are about to send one or several messages with memory map info
message MemoryMapMessageBegin
{
  uint_32  originId,
  int_32   rootDepth,
  float_32 rootSize_mm,
  float_32 rootCenterX,
  float_32 rootCenterY
}

// A group of quad infos
message MemoryMapMessage
{
  MemoryMapQuadInfo quadInfos[uint_16]
}

// We finished sending memory map messages
message MemoryMapMessageEnd
{
}

// Note: these values and messages must match the values that get added to MessageEngineToGame
union MessageRobotToExternal {
  Event                             Event                              = 0x02,
  EnrolledNamesResponse             EnrolledNamesResponse              = 0x05,
  ObjectConnectionState             ObjectConnectionState              = 0x0A, // TODO: Add this to Events once webots dependancy on heirarchy is lifted
  ObjectMoved                       ObjectMoved                        = 0x0B, // TODO: Add this to Events once webots dependancy on heirarchy is lifted
  ObjectStoppedMoving               ObjectStoppedMoving                = 0x0C, // TODO: Add this to Events once webots dependancy on heirarchy is lifted
  ObjectUpAxisChanged               ObjectUpAxisChanged                = 0x0D, // TODO: Add this to Events once webots dependancy on heirarchy is lifted
  ObjectTapped                      ObjectTapped                       = 0x0E, // TODO: Add this to Events once webots dependancy on heirarchy is lifted
  ObjectAccel                       ObjectAccel                        = 0x0F, // TODO: The engine is not yet sending this message, holding this tag id near the other object events for when it's implemented
  ObjectAvailable                   ObjectAvailable                    = 0x11, // TODO: Add this to Events once webots dependancy on heirarchy is lifted
  RobotDeletedFixedCustomObjects    RobotDeletedFixedCustomObjects     = 0x12,
  RobotDeletedCustomMarkerObjects   RobotDeletedCustomMarkerObjects    = 0x13,
  CreatedFixedCustomObject          CreatedFixedCustomObject           = 0x14,
  DefinedCustomObject               DefinedCustomObject                = 0x15,
  MemoryMapMessageBegin             MemoryMapMessageBegin              = 0x16,
  MemoryMapMessage                  MemoryMapMessage                   = 0x17,
  MemoryMapMessageEnd               MemoryMapMessageEnd                = 0x18,
}

} // Gateway
} // Victor
} // Anki
