/** Clad message definitions for Needs system
*/


namespace Anki {
namespace Cozmo {

enum int_32 NeedId
{
  Repair  = 0,
  Energy  = 1,
  Play    = 2,
  Count
}

enum int_32 NeedBracketId
{
  Full      = 0,
  Normal    = 1,
  Warning   = 2,
  Critical  = 3,
  Count
}

enum int_32 RepairablePartId
{
  Head    = 0,
  Lift    = 1,
  Treads  = 2,
  Count
}

enum int_32 NeedsActionId
{
  // No action (for example, in a state update not triggered by any action)
  NoAction,

  // Decay action
  Decay,

  // Repair actions
  RepairHead,
  RepairLift,
  RepairTreads,

  // Feeding actions
  FeedRed,
  FeedBlue,
  FeedGreen,

  // Other actions (this will be a big and ever-growing list)
  //PyramidCompleted,
  // etc.

  Play                  = 40,

  Count
}


enum int_32 NeedsRewardType
{
  Sparks        = 0,  // data: number of sparks
  Unlock        = 1,  // data: unlockId
  Song          = 2,  // (new?)
  MemoryBadge   = 3,  // (new?)

  Count
}

structure NeedsReward
{
  NeedsRewardType rewardType,
  int_32          data
}


// Needs state stored on robot is different from state sent to game
// NOTE:  Changing the format of this structure will be difficult.
// Make sure to increment the version here, only add data to the
// end of the structure, and add backwards-compatibility code as
// needed.
structure NeedsStateOnRobot
{
  int_32  version,
  uint_64 timeLastWritten,
  int_32  curNeedLevel[10],   // MAX_NEEDS
  int_32  curNeedsUnlockLevel,
  int_32  numStarsAwarded,
  bool    partIsDamaged[32]   // MAX_REPAIRABLE_PARTS
}

} // namespace Cozmo
} // namespace Anki
