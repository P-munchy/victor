// External interface for robot <-> app and robot <-> sdk communication

syntax = "proto3";

package external_interface;

import "google/api/annotations.proto";

service ExternalInterface {
  // Drives the wheel motors
  rpc DriveWheels(DriveWheelsRequest) returns (DriveWheelsResult) {
    option (google.api.http) = {
      post: "/v1/drive_wheels",
      body: "*"
    };
  }
  // Plays an animation by name
  rpc PlayAnimation(PlayAnimationRequest) returns (PlayAnimationResult) {
    option (google.api.http) = {
      post: "/v1/play_animation",
      body: "*"
    };
  }
  // Constructs and returns a list of animations
  rpc ListAnimations(ListAnimationsRequest) returns (ListAnimationsResult) {
    option (google.api.http) = {
      post: "/v1/list_animations",
      body: "*"
    };
  }
  // Moves the Head
  rpc MoveHead(MoveHeadRequest) returns (MoveHeadResult) {
    option (google.api.http) = {
      post: "/v1/move_head",
      body: "*"
    };
  }
  // Moves the Lift
  rpc MoveLift(MoveLiftRequest) returns (MoveLiftResult) {
    option (google.api.http) = {
      post: "/v1/move_lift",
      body: "*"
    };
  }
  // Drive arc
  rpc DriveArc(DriveArcRequest) returns (DriveArcResult) {
    option (google.api.http) = {
      post: "/v1/drive_arc",
      body: "*"
    };
  }
  // Current groundwork for a streaming events endpoint
  rpc EventStream(EventRequest) returns (stream EventResult) {
    option (google.api.http) = {
      post: "/v1/event_stream",
      body: "*"
    };
  }
}

message ResultStatus {
  string description = 1;
}

message Animation {
  string name = 1;
}


message DriveWheelsRequest {
  float left_wheel_mmps   = 1;
  float right_wheel_mmps  = 2;
  float left_wheel_mmps2  = 3;
  float right_wheel_mmps2 = 4;
}

message DriveWheelsResult {
  ResultStatus status = 1;
}

message MoveHeadRequest {
  float speed_rad_per_sec = 1;
}

message MoveHeadResult {
  ResultStatus status = 1;
}

message MoveLiftRequest {
  float speed_rad_per_sec = 1;
}

message MoveLiftResult {
  ResultStatus status = 1;
}

message DriveArcRequest {
  float speed = 1;
  float accel = 2;
  int32 curvatureRadius_mm = 3;
}

message DriveArcResult {
  ResultStatus status = 1;
}

message PlayAnimationRequest {
  Animation animation = 1;
  uint32 loops = 2;
}

message PlayAnimationResult {
  ResultStatus status = 1;
}


message ListAnimationsRequest {}

message ListAnimationsResult {
  ResultStatus status = 1;
  repeated Animation animation_names = 2;
}

message FeatureStatus {
  string feature_name = 1;
  string source      = 2; // Voice, App, AI, Unknown
}

message MeetVictorFaceScanStarted
{
}

message MeetVictorFaceScanComplete
{
}

message Status {
  oneof status_type {
     FeatureStatus                   featureStatus                = 1;
     MeetVictorFaceScanStarted       meetVictorFaceScanStarted    = 2;
     MeetVictorFaceScanComplete      meetVictorFaceScanComplete   = 3;
  }
}

message TimeStampedStatus {
  Status status = 1;
  uint32 timestamp_ms = 2;
}

message RobotHistoryRequest {
}

message RobotHistoryResponse {
  repeated TimeStampedStatus messages = 1;
}

message Event {
  oneof event_type {
    Status                           status                              = 1;
    // BatteryEvents, etc.
  }
}

message EventRequest {}

message EventResult {
  ResultStatus status = 1;
  Event event = 2;
}
