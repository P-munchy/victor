// External interface for robot <-> app and robot <-> sdk communication

syntax = "proto3";

package Anki.Cozmo.external_interface;

option optimize_for = LITE_RUNTIME;

import "messages.proto";
import "settings.proto";

// Messages originating from the engine
message Event {
  oneof event_type {
    Status                           status                              = 1;
    Onboarding                       onboarding                          = 2;
    WakeWord                         wake_word                           = 3;
    AttentionTransfer                attention_transfer                  = 4;
    RobotObservedFace                robot_observed_face                 = 5;
    RobotChangedObservedFaceID       robot_changed_observed_face_id      = 6;
    SettingsUpdate                   settings_update                     = 7;
  }
}

message EventRequest {}

message EventResult {
  ResultStatus status = 1;
  Event event = 2;
}

// Messages to pass to the engine
message GatewayWrapper {
  oneof oneof_message_type {
    // ------------ messages sent from robot to app ----------------------
    Event event = 1;
    // ------------ onboarding requests and responses --------------------
    OnboardingStateRequest        onboarding_state_request = 2;
    OnboardingState               onboarding_state = 3;
    OnboardingContinue            onboarding_continue = 4;
    OnboardingContinueResponse    onboarding_continue_response = 5;
    OnboardingSkip                onboarding_skip = 6;
    OnboardingConnectionComplete  onboarding_connection_complete = 7;
    OnboardingSkipOnboarding      onboarding_skip_onboarding = 8;
    // ------------ test request/response pairs --------------------------
    // TODO: remove these once we have more examples
    Ping ping = 20;
    Pong pong = 21;
    Bing bing = 22;
    Bong bong = 23;
    // ------------ Attention transfer -----------------------------------
    LatestAttentionTransferRequest latest_attention_transfer_request = 30;
    LatestAttentionTransfer        latest_attention_transfer = 31;
    // ------------ photos request/response pairs ------------------------
    PhotosInfoRequest             photos_info_request = 40;
    PhotosInfoResponse            photos_info_response = 41;
    PhotoRequest                  photo_request = 42;
    PhotoPathMessage              photo_path_message = 43;
    ThumbnailRequest              thumbnail_request = 44;
    ThumbnailPathMessage          thumbnail_path_message = 45;
    DeletePhotoRequest            delete_photo_request = 46;
    DeletePhotoResponse           delete_photo_response = 47;
    // ------------ settings pairs ---------------------------------------
    PushSettingsRequest    push_settings_request    = 60;
    PushSettingsResponse   push_settings_response   = 61;
    PullSettingsRequest    pull_settings_request    = 62;
    PullSettingsResponse   pull_settings_response   = 63;
    UpdateSettingsRequest  update_settings_request  = 64;
    UpdateSettingsResponse update_settings_response = 65;
    // ------------ sdk behavior request/response pairs ------------------
    DriveOffChargerRequest        drive_off_charger_request = 70;
    DriveOffChargerResult         drive_off_charger_result = 71;
    DriveOnChargerRequest         drive_on_charger_request = 72;
    DriveOnChargerResult          drive_on_charger_result = 73;
    // ------------ movement request/response pairs ----------------------
    TurnInPlaceRequest            turn_in_place_request = 90;
    TurnInPlaceResponse           turn_in_place_response = 91;
    DriveStraightRequest          drive_straight_request = 92;
    DriveStraightResponse         drive_straight_response = 93;
    SetHeadAngleRequest           set_head_angle_request = 94;
    SetHeadAngleResponse          set_head_angle_response = 95;
    SetLiftHeightRequest          set_lift_height_request = 96;
    SetLiftHeightResponse         set_lift_height_response = 97;
    PlayAnimationRequest          play_animation_response = 98;
    PlayAnimationResult           play_animation_result = 99;

    // ------------ status history --------------------
    RobotHistoryRequest           robot_history_request = 80;
    RobotHistoryResult            robot_history_result = 81;

    // (when adding new categories, please create gaps between field numbers)
    // ------------  -------------------------
  }
}

message UserAuthenticationRequest {
  bytes user_session_id = 1;
}

message UserAuthenticationResponse {
  ResultStatus status = 1;
  enum Code {
    UNAUTHORIZED = 0;
    AUTHORIZED = 1;
  }
  Code code = 2;
  bytes client_token_guid = 3;
}
