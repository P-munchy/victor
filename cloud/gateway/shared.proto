// External interface for robot <-> app and robot <-> sdk communication

syntax = "proto3";

package Anki.Cozmo.external_interface;

option optimize_for = LITE_RUNTIME;

import "cube.proto";
import "messages.proto";
import "settings.proto";
import "extensions.proto";

// Messages originating from the engine
message Event {
  oneof event_type {
    TimeStampedStatus                time_stamped_status                 = 1;
    Onboarding                       onboarding                          = 2;
    WakeWord                         wake_word                           = 3;
    AttentionTransfer                attention_transfer                  = 4;
    RobotObservedFace                robot_observed_face                 = 5;
    RobotChangedObservedFaceID       robot_changed_observed_face_id      = 6;
    SettingsUpdate                   settings_update                     = 7;
    // @TODO: Create an ObjectEvents wrapper for all the object proto events VIC-4644
    ObjectConnectionState            object_connection_state             = 8;
    ObjectMoved                      object_moved                        = 9;
    ObjectStoppedMoving              object_stopped_moving               = 10;
    ObjectUpAxisChanged              object_up_axis_changed              = 11;
    ObjectTapped                     object_tapped                       = 12;
    RobotObservedObject              robot_observed_object               = 13;
    CubeConnectionLost               cube_connection_lost                = 14;
    StimulationInfo                  stimulation_info                    = 15;
    PhotoTaken                       photo_taken                         = 16;
    RobotState                       robot_state                         = 17;
  }
}

message EventRequest {}

message EventResult {
  option (streamed) = true;
  ResultStatus status = 1;
  Event event = 2;
}

// Messages to pass to the engine
message GatewayWrapper {
  oneof oneof_message_type {
    // ------------ messages sent from robot to app ----------------------
    Event event = 1;

    // ------------ onboarding requests and responses --------------------
    OnboardingStateRequest        onboarding_state_request = 2;
    OnboardingState               onboarding_state = 3;
    OnboardingContinue            onboarding_continue = 4;
    OnboardingContinueResponse    onboarding_continue_response = 5;
    OnboardingSkip                onboarding_skip = 6;
    OnboardingConnectionComplete  onboarding_connection_complete = 7;
    OnboardingSkipOnboarding      onboarding_skip_onboarding = 8;

    // ------------ test request/response pairs --------------------------
    // TODO: remove these once we have more examples
    Ping ping = 20;
    Pong pong = 21;
    Bing bing = 22;
    Bong bong = 23;

    // ------------ Attention transfer -----------------------------------
    LatestAttentionTransferRequest latest_attention_transfer_request = 30;
    LatestAttentionTransfer        latest_attention_transfer = 31;

    // ------------ photos request/response pairs ------------------------
    PhotosInfoRequest             photos_info_request = 40;
    PhotosInfoResponse            photos_info_response = 41;
    PhotoRequest                  photo_request = 42;
    PhotoPathMessage              photo_path_message = 43;
    ThumbnailRequest              thumbnail_request = 44;
    ThumbnailPathMessage          thumbnail_path_message = 45;
    DeletePhotoRequest            delete_photo_request = 46;
    DeletePhotoResponse           delete_photo_response = 47;
    // ------------ settings pairs ---------------------------------------
    PushSettingsRequest    push_settings_request    = 60;
    PushSettingsResponse   push_settings_response   = 61;
    PullSettingsRequest    pull_settings_request    = 62;
    PullSettingsResponse   pull_settings_response   = 63;
    UpdateSettingsRequest  update_settings_request  = 64;
    UpdateSettingsResponse update_settings_response = 65;

    // ------------ sdk behavior request/response pairs --------------------
    DriveOffChargerRequest        drive_off_charger_request = 70;
    DriveOffChargerResult         drive_off_charger_result = 71;
    DriveOnChargerRequest         drive_on_charger_request = 72;
    DriveOnChargerResult          drive_on_charger_result = 73;

    // ------------ movement request/response pairs ----------------------
    TurnInPlaceRequest            turn_in_place_request = 90;
    TurnInPlaceResponse           turn_in_place_response = 91;
    DriveStraightRequest          drive_straight_request = 92;
    DriveStraightResponse         drive_straight_response = 93;
    SetHeadAngleRequest           set_head_angle_request = 94;
    SetHeadAngleResponse          set_head_angle_response = 95;
    SetLiftHeightRequest          set_lift_height_request = 96;
    SetLiftHeightResponse         set_lift_height_response = 97;
    PlayAnimationRequest          play_animation_response = 98;
    PlayAnimationResult           play_animation_result = 99;

    // ------------ status history --------------------
    RobotHistoryRequest           robot_history_request = 80;
    RobotHistoryResult            robot_history_result = 81;

    // ------------ cube connections --------------------
    ConnectCubeRequest            connect_cube_request          = 100;
    ConnectCubeResponse           connect_cube_response         = 101;
    DisconnectCubeRequest         disconnect_cube_request       = 102;
    FlashCubeLightsRequest        flash_cube_lights_request     = 103;
    ForgetPreferredCubeRequest    forget_preferred_cube_request = 104;
    SetPreferredCubeRequest       set_preferred_cube_request    = 105;
    SetCubeLightsRequest          set_cube_lights_request       = 106;

    // ------------ robot stats --------------------
    BatteryStateRequest             battery_state_request = 110;
    BatteryStateResponse            battery_state_response = 111;
    VersionStateRequest             version_state_request = 112;
    VersionStateResponse            version_state_response = 113;
    NetworkStateRequest             network_state_request = 114;
    NetworkStateResponse            network_state_response = 115;

    // ------------ text-to-speech pairs ------------
    SayTextRequest                say_text_request = 120;
    SayTextResponse               say_text_response = 121;

    // (when adding new categories, please create gaps between field numbers)
    // ------------  -------------------------
  }
}

message UserAuthenticationRequest {
  bytes user_session_id = 1;
}

message UserAuthenticationResponse {
  ResultStatus status = 1;
  enum Code {
    UNAUTHORIZED = 0;
    AUTHORIZED = 1;
  }
  Code code = 2;
  bytes client_token_guid = 3;
}
