// +build !nolibxmlsec1

package session

import (
	"github.com/anki/sai-go-util"
	"github.com/anki/sai-go-util/saml"
)

// Okta SAML response belonging to Bobby.TestUser@anki.com
// Only a member of the "Everyone" group
const (
	bobbySAMLB64 = `PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c2FtbDJwOlJlc3BvbnNlIHhtbG5z
OnNhbWwycD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIiBEZXN0aW5hdGlvbj0i
aHR0cDovL2xvY2FsaG9zdDo4MjAwLzEvc2Vzc2lvbnMvc2FtbCIgSUQ9ImlkMTE0MDEyMjQ3NDcyNzQz
MzEyNjE2MDUwMCIgSW5SZXNwb25zZVRvPSJfYTNiOWFiMzctNzIyNy00MmI2LTY5YTQtYmJlYzAxYjU4
MWMwIiBJc3N1ZUluc3RhbnQ9IjIwMTQtMTEtMTFUMjI6MjY6MDQuMTM2WiIgVmVyc2lvbj0iMi4wIiB4
bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiPjxzYW1sMjpJc3N1ZXIgeG1s
bnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIEZvcm1hdD0idXJu
Om9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6ZW50aXR5Ij5odHRwOi8vd3d3Lm9r
dGEuY29tL2t5OGtxNjBtQUhBUFVLT1FWV1JQPC9zYW1sMjpJc3N1ZXI+PGRzOlNpZ25hdHVyZSB4bWxu
czpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PGRzOlNpZ25lZEluZm8+PGRz
OkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEw
L3htbC1leGMtYzE0biMiLz48ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53
My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIi8+PGRzOlJlZmVyZW5jZSBVUkk9IiNpZDExNDAx
MjI0NzQ3Mjc0MzMxMjYxNjA1MDAiPjxkczpUcmFuc2Zvcm1zPjxkczpUcmFuc2Zvcm0gQWxnb3JpdGht
PSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPjxk
czpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0
biMiPjxlYzpJbmNsdXNpdmVOYW1lc3BhY2VzIHhtbG5zOmVjPSJodHRwOi8vd3d3LnczLm9yZy8yMDAx
LzEwL3htbC1leGMtYzE0biMiIFByZWZpeExpc3Q9InhzIi8+PC9kczpUcmFuc2Zvcm0+PC9kczpUcmFu
c2Zvcm1zPjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5
L3htbGRzaWcjc2hhMSIvPjxkczpEaWdlc3RWYWx1ZT5oTGVpdXFiVTZDbnh2OXBYbG1VNGd5ZDdnSkE9
PC9kczpEaWdlc3RWYWx1ZT48L2RzOlJlZmVyZW5jZT48L2RzOlNpZ25lZEluZm8+PGRzOlNpZ25hdHVy
ZVZhbHVlPkZBQkFKOVdrbVJhQXJSVHY0L0xuZUNONEs0RWhEbWdvUk1vdFpieVoyVjEzeFFpeDNubWVI
UVNyc0s2QkZGUmF4UFk3UlZPeW5yU3NRK1NUSjNpWlF2d2NmMmZETnpYaUhHUzB3YTArYVFBRFNHa1ZX
WE9ubDAwdHBLK3Jsa0Z2N09oODhhdXhNdkhyK2pPa0JIajJNZy9uNFFsUUNnL3dFbWZ0T2ZSaGF6az08
L2RzOlNpZ25hdHVyZVZhbHVlPjxkczpLZXlJbmZvPjxkczpYNTA5RGF0YT48ZHM6WDUwOUNlcnRpZmlj
YXRlPk1JSUNrekNDQWZ5Z0F3SUJBZ0lHQVVZaTJqUm1NQTBHQ1NxR1NJYjNEUUVCQlFVQU1JR01NUXN3
Q1FZRFZRUUdFd0pWVXpFVE1CRUcKQTFVRUNBd0tRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCd3dOVTJG
dUlFWnlZVzVqYVhOamJ6RU5NQXNHQTFVRUNnd0VUMnQwWVRFVQpNQklHQTFVRUN3d0xVMU5QVUhKdmRt
bGtaWEl4RFRBTEJnTlZCQU1NQkdGdWEya3hIREFhQmdrcWhraUc5dzBCQ1FFV0RXbHVabTlBCmIydDBZ
UzVqYjIwd0hoY05NVFF3TlRJeU1EY3pNekkwV2hjTk5EUXdOVEl5TURjek5ESTBXakNCakRFTE1Ba0dB
MVVFQmhNQ1ZWTXgKRXpBUkJnTlZCQWdNQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjTURWTmhiaUJH
Y21GdVkybHpZMjh4RFRBTEJnTlZCQW9NQkU5cgpkR0V4RkRBU0JnTlZCQXNNQzFOVFQxQnliM1pwWkdW
eU1RMHdDd1lEVlFRRERBUmhibXRwTVJ3d0dnWUpLb1pJaHZjTkFRa0JGZzFwCmJtWnZRRzlyZEdFdVky
OXRNSUdmTUEwR0NTcUdTSWIzRFFFQkFRVUFBNEdOQURDQmlRS0JnUUNPSzh5YjNybk5GTmx6TnowdTVS
algKbkVkT3llS1ZlWXlpZFY5bW9RWGVPRFZyQjlIQ2JkNHR1ejlmUllmWkl3ejVMT3R6TVZ6K3lGd3Rs
V1B3TE92MlIzZzBpOFhUUStFSApJQVdGUXRPWjVYUlQ5a0FpSDJ0RTJ1MkN1dUQraHpIZ1ZqR0ZUdHdI
ekRjQ3pkMS9MN21Pb0lwMno1dVFkb0Q5cWM2S2RpSWQ3UUlECkFRQUJNQTBHQ1NxR1NJYjNEUUVCQlFV
QUE0R0JBRkNwZElacHlIZUQ5MW85dHFrWGVYYmhCMGtJY2ZXOTYzdEEvd1NlS1VPSmFSRjkKaXkyejRu
K3dxRys5QmljNXQ5UHJrbE1VWjVlNUo3Z2lnb25HWDIyUnRENWFyTEVNMENpcUUxQnllcGhjUmhOd3Q4
NExSU3RIck1VYQo1a1N6c1FJN1ArUm9qUzFXbXJMM1BwMjhzSGxCOStUTHBYV1BKNFZNdy9hYXp6dmU8
L2RzOlg1MDlDZXJ0aWZpY2F0ZT48L2RzOlg1MDlEYXRhPjwvZHM6S2V5SW5mbz48L2RzOlNpZ25hdHVy
ZT48c2FtbDJwOlN0YXR1cyB4bWxuczpzYW1sMnA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpw
cm90b2NvbCI+PHNhbWwycDpTdGF0dXNDb2RlIFZhbHVlPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoy
LjA6c3RhdHVzOlN1Y2Nlc3MiLz48L3NhbWwycDpTdGF0dXM+PHNhbWwyOkFzc2VydGlvbiB4bWxuczpz
YW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIgSUQ9ImlkMTE0MDEyMjQ3
NDc2OTYzMTQ2ODk4MzU1MSIgSXNzdWVJbnN0YW50PSIyMDE0LTExLTExVDIyOjI2OjA0LjEzNloiIFZl
cnNpb249IjIuMCIgeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIj48c2Ft
bDI6SXNzdWVyIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm5hbWVpZC1mb3JtYXQ6
ZW50aXR5IiB4bWxuczpzYW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+
aHR0cDovL3d3dy5va3RhLmNvbS9reThrcTYwbUFIQVBVS09RVldSUDwvc2FtbDI6SXNzdWVyPjxkczpT
aWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxkczpT
aWduZWRJbmZvPjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53
My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09
Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNyc2Etc2hhMSIvPjxkczpSZWZlcmVuY2Ug
VVJJPSIjaWQxMTQwMTIyNDc0NzY5NjMxNDY4OTgzNTUxIj48ZHM6VHJhbnNmb3Jtcz48ZHM6VHJhbnNm
b3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1z
aWduYXR1cmUiLz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8x
MC94bWwtZXhjLWMxNG4jIj48ZWM6SW5jbHVzaXZlTmFtZXNwYWNlcyB4bWxuczplYz0iaHR0cDovL3d3
dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIiBQcmVmaXhMaXN0PSJ4cyIvPjwvZHM6VHJhbnNm
b3JtPjwvZHM6VHJhbnNmb3Jtcz48ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53
My5vcmcvMjAwMC8wOS94bWxkc2lnI3NoYTEiLz48ZHM6RGlnZXN0VmFsdWU+T1NoWWhZVm11MW1YZE5U
aXNHN1pSTmpuKzNrPTwvZHM6RGlnZXN0VmFsdWU+PC9kczpSZWZlcmVuY2U+PC9kczpTaWduZWRJbmZv
PjxkczpTaWduYXR1cmVWYWx1ZT5BWjkxZ1BDN1lEN3JQUTBybnYrWmoxY3ByV3J2QTl1dmdqVGZNNEpB
Q0FSVFpSWjlzT0o1VUN1NWdGS3FpOVM0TGpkaWorL2w5UHUxbkowNVRQMm5Gd0pLUHlFWlpQNEUxZWZN
TFhSQnBoUHRzRjFMZ09LK01ZNC95Rm1PK01CSEp4dnlqTzk0MlB6dFFIT1FjbldtNXFYdXlHQnBCcHVQ
K3BPL2JWeHVsemc9PC9kczpTaWduYXR1cmVWYWx1ZT48ZHM6S2V5SW5mbz48ZHM6WDUwOURhdGE+PGRz
Olg1MDlDZXJ0aWZpY2F0ZT5NSUlDa3pDQ0FmeWdBd0lCQWdJR0FVWWkyalJtTUEwR0NTcUdTSWIzRFFF
QkJRVUFNSUdNTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHCkExVUVDQXdLUTJGc2FXWnZjbTVwWVRFV01C
UUdBMVVFQnd3TlUyRnVJRVp5WVc1amFYTmpiekVOTUFzR0ExVUVDZ3dFVDJ0MFlURVUKTUJJR0ExVUVD
d3dMVTFOUFVISnZkbWxrWlhJeERUQUxCZ05WQkFNTUJHRnVhMmt4SERBYUJna3Foa2lHOXcwQkNRRVdE
V2x1Wm05QQpiMnQwWVM1amIyMHdIaGNOTVRRd05USXlNRGN6TXpJMFdoY05ORFF3TlRJeU1EY3pOREkw
V2pDQmpERUxNQWtHQTFVRUJoTUNWVk14CkV6QVJCZ05WQkFnTUNrTmhiR2xtYjNKdWFXRXhGakFVQmdO
VkJBY01EVk5oYmlCR2NtRnVZMmx6WTI4eERUQUxCZ05WQkFvTUJFOXIKZEdFeEZEQVNCZ05WQkFzTUMx
TlRUMUJ5YjNacFpHVnlNUTB3Q3dZRFZRUUREQVJoYm10cE1Sd3dHZ1lKS29aSWh2Y05BUWtCRmcxcApi
bVp2UUc5cmRHRXVZMjl0TUlHZk1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTkFEQ0JpUUtCZ1FDT0s4eWIz
cm5ORk5sek56MHU1UmpYCm5FZE95ZUtWZVl5aWRWOW1vUVhlT0RWckI5SENiZDR0dXo5ZlJZZlpJd3o1
TE90ek1Weit5Rnd0bFdQd0xPdjJSM2cwaThYVFErRUgKSUFXRlF0T1o1WFJUOWtBaUgydEUydTJDdXVE
K2h6SGdWakdGVHR3SHpEY0N6ZDEvTDdtT29JcDJ6NXVRZG9EOXFjNktkaUlkN1FJRApBUUFCTUEwR0NT
cUdTSWIzRFFFQkJRVUFBNEdCQUZDcGRJWnB5SGVEOTFvOXRxa1hlWGJoQjBrSWNmVzk2M3RBL3dTZUtV
T0phUkY5Cml5Mno0bit3cUcrOUJpYzV0OVBya2xNVVo1ZTVKN2dpZ29uR1gyMlJ0RDVhckxFTTBDaXFF
MUJ5ZXBoY1JoTnd0ODRMUlN0SHJNVWEKNWtTenNRSTdQK1JvalMxV21yTDNQcDI4c0hsQjkrVExwWFdQ
SjRWTXcvYWF6enZlPC9kczpYNTA5Q2VydGlmaWNhdGU+PC9kczpYNTA5RGF0YT48L2RzOktleUluZm8+
PC9kczpTaWduYXR1cmU+PHNhbWwyOlN1YmplY3QgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0
YzpTQU1MOjIuMDphc3NlcnRpb24iPjxzYW1sMjpOYW1lSUQgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6
dGM6U0FNTDoxLjE6bmFtZWlkLWZvcm1hdDplbWFpbEFkZHJlc3MiPkJvYmJ5LlRlc3RVc2VyQGFua2ku
Y29tPC9zYW1sMjpOYW1lSUQ+PHNhbWwyOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2Fz
aXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj48c2FtbDI6U3ViamVjdENvbmZpcm1hdGlvbkRh
dGEgSW5SZXNwb25zZVRvPSJfYTNiOWFiMzctNzIyNy00MmI2LTY5YTQtYmJlYzAxYjU4MWMwIiBOb3RP
bk9yQWZ0ZXI9IjIwMTQtMTEtMTFUMjI6MzE6MDQuMTM2WiIgUmVjaXBpZW50PSJnYXJldGh0ZXN0MDIi
Lz48L3NhbWwyOlN1YmplY3RDb25maXJtYXRpb24+PC9zYW1sMjpTdWJqZWN0PjxzYW1sMjpDb25kaXRp
b25zIE5vdEJlZm9yZT0iMjAxNC0xMS0xMVQyMjoyMTowNC4xMzZaIiBOb3RPbk9yQWZ0ZXI9IjIwMTQt
MTEtMTFUMjI6MzE6MDQuMTM2WiIgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIu
MDphc3NlcnRpb24iPjxzYW1sMjpBdWRpZW5jZVJlc3RyaWN0aW9uPjxzYW1sMjpBdWRpZW5jZT5nYXJl
dGh0ZXN0MDI8L3NhbWwyOkF1ZGllbmNlPjwvc2FtbDI6QXVkaWVuY2VSZXN0cmljdGlvbj48L3NhbWwy
OkNvbmRpdGlvbnM+PHNhbWwyOkF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAxNC0xMS0xMVQy
MjoyNjowNC4xMzZaIiBTZXNzaW9uSW5kZXg9Il9hM2I5YWIzNy03MjI3LTQyYjYtNjlhNC1iYmVjMDFi
NTgxYzAiIHhtbG5zOnNhbWwyPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj48
c2FtbDI6QXV0aG5Db250ZXh0PjxzYW1sMjpBdXRobkNvbnRleHRDbGFzc1JlZj51cm46b2FzaXM6bmFt
ZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZFByb3RlY3RlZFRyYW5zcG9ydDwvc2FtbDI6
QXV0aG5Db250ZXh0Q2xhc3NSZWY+PC9zYW1sMjpBdXRobkNvbnRleHQ+PC9zYW1sMjpBdXRoblN0YXRl
bWVudD48c2FtbDI6QXR0cmlidXRlU3RhdGVtZW50IHhtbG5zOnNhbWwyPSJ1cm46b2FzaXM6bmFtZXM6
dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj48c2FtbDI6QXR0cmlidXRlIE5hbWU9Imdyb3VwcyIgTmFtZUZv
cm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1bnNwZWNpZmll
ZCI+PHNhbWwyOkF0dHJpYnV0ZVZhbHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hN
TFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5j
ZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+RXZlcnlvbmU8L3NhbWwyOkF0dHJpYnV0ZVZhbHVlPjwvc2Ft
bDI6QXR0cmlidXRlPjwvc2FtbDI6QXR0cmlidXRlU3RhdGVtZW50Pjwvc2FtbDI6QXNzZXJ0aW9uPjwv
c2FtbDJwOlJlc3BvbnNlPg==`

	// Identity Provider that was used with the above SAML response
	garethtest02IDPXML = `
<?xml version="1.0" encoding="UTF-8"?><md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="http://www.okta.com/ky8kq60mAHAPUKOQVWRP"><md:IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol"><md:KeyDescriptor use="signing"><ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:X509Data><ds:X509Certificate>MIICkzCCAfygAwIBAgIGAUYi2jRmMA0GCSqGSIb3DQEBBQUAMIGMMQswCQYDVQQGEwJVUzETMBEG
A1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU
MBIGA1UECwwLU1NPUHJvdmlkZXIxDTALBgNVBAMMBGFua2kxHDAaBgkqhkiG9w0BCQEWDWluZm9A
b2t0YS5jb20wHhcNMTQwNTIyMDczMzI0WhcNNDQwNTIyMDczNDI0WjCBjDELMAkGA1UEBhMCVVMx
EzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9r
dGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMQ0wCwYDVQQDDARhbmtpMRwwGgYJKoZIhvcNAQkBFg1p
bmZvQG9rdGEuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCOK8yb3rnNFNlzNz0u5RjX
nEdOyeKVeYyidV9moQXeODVrB9HCbd4tuz9fRYfZIwz5LOtzMVz+yFwtlWPwLOv2R3g0i8XTQ+EH
IAWFQtOZ5XRT9kAiH2tE2u2CuuD+hzHgVjGFTtwHzDcCzd1/L7mOoIp2z5uQdoD9qc6KdiId7QID
AQABMA0GCSqGSIb3DQEBBQUAA4GBAFCpdIZpyHeD91o9tqkXeXbhB0kIcfW963tA/wSeKUOJaRF9
iy2z4n+wqG+9Bic5t9PrklMUZ5e5J7gigonGX22RtD5arLEM0CiqE1ByephcRhNwt84LRStHrMUa
5kSzsQI7P+RojS1WmrL3Pp28sHlB9+TLpXWPJ4VMw/aazzve</ds:X509Certificate></ds:X509Data></ds:KeyInfo></md:KeyDescriptor><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat><md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://anki.okta.com/app/template_saml_2_0/ky8kq60mAHAPUKOQVWRP/sso/saml"/><md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://anki.okta.com/app/template_saml_2_0/ky8kq60mAHAPUKOQVWRP/sso/saml"/></md:IDPSSODescriptor></md:EntityDescriptor>
`
)

var (
	garethtest02IDP            = util.Must2(saml.NewSAMLIDP(garethtest02IDPXML, "garethtest02")).(*saml.SAMLIDP)
	garethtest02IDPBadAudience = util.Must2(saml.NewSAMLIDP(garethtest02IDPXML, "bad-audience")).(*saml.SAMLIDP)
	garethtest02IDPNoExpire    = util.Must2(saml.NewSAMLIDP(garethtest02IDPXML, "garethtest02")).(*saml.SAMLIDP)
)

func init() {
	garethtest02IDPNoExpire.NoExpiredCheck = true
	garethtest02IDPBadAudience.NoExpiredCheck = true
}
