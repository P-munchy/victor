// Autogenerated by VisionMarkerTrained.GenerateNearestNeighborHeaderFiles() on 08-Mar-2016 14:11:34

#ifndef ANKI_COZMO_VISIONMARKERTYPES_H
#define ANKI_COZMO_VISIONMARKERTYPES_H

/* ExtractProbeValues Parameters:
'addInversions', 0,
'negativeImageDir', ,
'computeGradMag', 1,
'numPerturbations', 1,
'perturbSigma', 0,
'blurSigmas', 0.005       0.015,
'imageSizes', 64,
'exposures', 1  4,
'computeGradMagWeights', 1,
'blackPoint', 0,
'boxFilterWidth', 0,

*/

#include <map>

namespace Anki {
namespace Vision {

  static const char* MarkerDefinitionVersionString = "08-Mar-2016 14:11:34";

  enum MarkerType {
    MARKER_ARROW = 0,
    MARKER_BULLSEYE2 = 1,
    MARKER_CHARGER = 2,
    MARKER_INVALID = 3,
    MARKER_LIGHTCUBEI_BACK = 4,
    MARKER_LIGHTCUBEI_BOTTOM = 5,
    MARKER_LIGHTCUBEI_FRONT = 6,
    MARKER_LIGHTCUBEI_LEFT = 7,
    MARKER_LIGHTCUBEI_RIGHT = 8,
    MARKER_LIGHTCUBEI_TOP = 9,
    MARKER_LIGHTCUBEJ_BACK = 10,
    MARKER_LIGHTCUBEJ_BOTTOM = 11,
    MARKER_LIGHTCUBEJ_FRONT = 12,
    MARKER_LIGHTCUBEJ_LEFT = 13,
    MARKER_LIGHTCUBEJ_RIGHT = 14,
    MARKER_LIGHTCUBEJ_TOP = 15,
    MARKER_LIGHTCUBEK_BACK = 16,
    MARKER_LIGHTCUBEK_BOTTOM = 17,
    MARKER_LIGHTCUBEK_FRONT = 18,
    MARKER_LIGHTCUBEK_LEFT = 19,
    MARKER_LIGHTCUBEK_RIGHT = 20,
    MARKER_LIGHTCUBEK_TOP = 21,
    MARKER_STAR5 = 22,
    NUM_MARKER_TYPES,
    MARKER_UNKNOWN = NUM_MARKER_TYPES
  };

  const char * const MarkerTypeStrings[NUM_MARKER_TYPES+1] = {
    "MARKER_ARROW",
    "MARKER_BULLSEYE2",
    "MARKER_CHARGER",
    "MARKER_INVALID",
    "MARKER_LIGHTCUBEI_BACK",
    "MARKER_LIGHTCUBEI_BOTTOM",
    "MARKER_LIGHTCUBEI_FRONT",
    "MARKER_LIGHTCUBEI_LEFT",
    "MARKER_LIGHTCUBEI_RIGHT",
    "MARKER_LIGHTCUBEI_TOP",
    "MARKER_LIGHTCUBEJ_BACK",
    "MARKER_LIGHTCUBEJ_BOTTOM",
    "MARKER_LIGHTCUBEJ_FRONT",
    "MARKER_LIGHTCUBEJ_LEFT",
    "MARKER_LIGHTCUBEJ_RIGHT",
    "MARKER_LIGHTCUBEJ_TOP",
    "MARKER_LIGHTCUBEK_BACK",
    "MARKER_LIGHTCUBEK_BOTTOM",
    "MARKER_LIGHTCUBEK_FRONT",
    "MARKER_LIGHTCUBEK_LEFT",
    "MARKER_LIGHTCUBEK_RIGHT",
    "MARKER_LIGHTCUBEK_TOP",
    "MARKER_STAR5",
    "MARKER_UNKNOWN"
  };

#ifdef COZMO_BASESTATION
  const std::map<std::string, Vision::MarkerType> StringToMarkerType = {
    {"MARKER_ARROW", MARKER_ARROW},
    {"MARKER_BULLSEYE2", MARKER_BULLSEYE2},
    {"MARKER_CHARGER", MARKER_CHARGER},
    {"MARKER_INVALID", MARKER_INVALID},
    {"MARKER_LIGHTCUBEI_BACK", MARKER_LIGHTCUBEI_BACK},
    {"MARKER_LIGHTCUBEI_BOTTOM", MARKER_LIGHTCUBEI_BOTTOM},
    {"MARKER_LIGHTCUBEI_FRONT", MARKER_LIGHTCUBEI_FRONT},
    {"MARKER_LIGHTCUBEI_LEFT", MARKER_LIGHTCUBEI_LEFT},
    {"MARKER_LIGHTCUBEI_RIGHT", MARKER_LIGHTCUBEI_RIGHT},
    {"MARKER_LIGHTCUBEI_TOP", MARKER_LIGHTCUBEI_TOP},
    {"MARKER_LIGHTCUBEJ_BACK", MARKER_LIGHTCUBEJ_BACK},
    {"MARKER_LIGHTCUBEJ_BOTTOM", MARKER_LIGHTCUBEJ_BOTTOM},
    {"MARKER_LIGHTCUBEJ_FRONT", MARKER_LIGHTCUBEJ_FRONT},
    {"MARKER_LIGHTCUBEJ_LEFT", MARKER_LIGHTCUBEJ_LEFT},
    {"MARKER_LIGHTCUBEJ_RIGHT", MARKER_LIGHTCUBEJ_RIGHT},
    {"MARKER_LIGHTCUBEJ_TOP", MARKER_LIGHTCUBEJ_TOP},
    {"MARKER_LIGHTCUBEK_BACK", MARKER_LIGHTCUBEK_BACK},
    {"MARKER_LIGHTCUBEK_BOTTOM", MARKER_LIGHTCUBEK_BOTTOM},
    {"MARKER_LIGHTCUBEK_FRONT", MARKER_LIGHTCUBEK_FRONT},
    {"MARKER_LIGHTCUBEK_LEFT", MARKER_LIGHTCUBEK_LEFT},
    {"MARKER_LIGHTCUBEK_RIGHT", MARKER_LIGHTCUBEK_RIGHT},
    {"MARKER_LIGHTCUBEK_TOP", MARKER_LIGHTCUBEK_TOP},
    {"MARKER_STAR5", MARKER_STAR5},
    {"MARKER_UNKNOWN", MARKER_UNKNOWN}
  };
#endif

  } // namespace Vision
} // namespace Anki

#endif // ANKI_COZMO_VISIONMARKERTYPES_H

