// Autogenerated by VisionMarkerTrained.GenerateNearestNeighborHeaderFiles() on 07-Mar-2016 19:12:15

#ifndef ANKI_COZMO_VISIONMARKERTYPES_H
#define ANKI_COZMO_VISIONMARKERTYPES_H

/* ExtractProbeValues Parameters:
'addInversions', 1,
'negativeImageDir', ,
'computeGradMag', 1,
'numPerturbations', 1,
'perturbSigma', 0,
'blurSigmas', 0.005       0.015,
'imageSizes', 64,
'exposures', 1  4,
'computeGradMagWeights', 1,
'blackPoint', 0,
'boxFilterWidth', 0,

*/

#include <map>

namespace Anki {
namespace Vision {

  static const char* MarkerDefinitionVersionString = "07-Mar-2016 19:12:15";

  enum MarkerType {
    MARKER_CHARGER = 0,
    MARKER_INVALID = 1,
    MARKER_INVERTED_CHARGER = 2,
    MARKER_INVERTED_LIGHTCUBEI_BOTTOM = 3,
    MARKER_INVERTED_LIGHTCUBEI_SIDE1 = 4,
    MARKER_INVERTED_LIGHTCUBEI_SIDE2 = 5,
    MARKER_INVERTED_LIGHTCUBEI_SIDE3 = 6,
    MARKER_INVERTED_LIGHTCUBEI_SIDE4 = 7,
    MARKER_INVERTED_LIGHTCUBEI_TOP = 8,
    MARKER_INVERTED_LIGHTCUBEJ_BOTTOM = 9,
    MARKER_INVERTED_LIGHTCUBEJ_SIDE1 = 10,
    MARKER_INVERTED_LIGHTCUBEJ_SIDE2 = 11,
    MARKER_INVERTED_LIGHTCUBEJ_SIDE3 = 12,
    MARKER_INVERTED_LIGHTCUBEJ_SIDE4 = 13,
    MARKER_INVERTED_LIGHTCUBEJ_TOP = 14,
    MARKER_INVERTED_LIGHTCUBEK_BOTTOM = 15,
    MARKER_INVERTED_LIGHTCUBEK_SIDE1 = 16,
    MARKER_INVERTED_LIGHTCUBEK_SIDE2 = 17,
    MARKER_INVERTED_LIGHTCUBEK_SIDE3 = 18,
    MARKER_INVERTED_LIGHTCUBEK_SIDE4 = 19,
    MARKER_INVERTED_LIGHTCUBEK_TOP = 20,
    MARKER_LIGHTCUBEI_BOTTOM = 21,
    MARKER_LIGHTCUBEI_SIDE1 = 22,
    MARKER_LIGHTCUBEI_SIDE2 = 23,
    MARKER_LIGHTCUBEI_SIDE3 = 24,
    MARKER_LIGHTCUBEI_SIDE4 = 25,
    MARKER_LIGHTCUBEI_TOP = 26,
    MARKER_LIGHTCUBEJ_BOTTOM = 27,
    MARKER_LIGHTCUBEJ_SIDE1 = 28,
    MARKER_LIGHTCUBEJ_SIDE2 = 29,
    MARKER_LIGHTCUBEJ_SIDE3 = 30,
    MARKER_LIGHTCUBEJ_SIDE4 = 31,
    MARKER_LIGHTCUBEJ_TOP = 32,
    MARKER_LIGHTCUBEK_BOTTOM = 33,
    MARKER_LIGHTCUBEK_SIDE1 = 34,
    MARKER_LIGHTCUBEK_SIDE2 = 35,
    MARKER_LIGHTCUBEK_SIDE3 = 36,
    MARKER_LIGHTCUBEK_SIDE4 = 37,
    MARKER_LIGHTCUBEK_TOP = 38,
    NUM_MARKER_TYPES,
    MARKER_UNKNOWN = NUM_MARKER_TYPES
  };

  const char * const MarkerTypeStrings[NUM_MARKER_TYPES+1] = {
    "MARKER_CHARGER",
    "MARKER_INVALID",
    "MARKER_INVERTED_CHARGER",
    "MARKER_INVERTED_LIGHTCUBEI_BOTTOM",
    "MARKER_INVERTED_LIGHTCUBEI_SIDE1",
    "MARKER_INVERTED_LIGHTCUBEI_SIDE2",
    "MARKER_INVERTED_LIGHTCUBEI_SIDE3",
    "MARKER_INVERTED_LIGHTCUBEI_SIDE4",
    "MARKER_INVERTED_LIGHTCUBEI_TOP",
    "MARKER_INVERTED_LIGHTCUBEJ_BOTTOM",
    "MARKER_INVERTED_LIGHTCUBEJ_SIDE1",
    "MARKER_INVERTED_LIGHTCUBEJ_SIDE2",
    "MARKER_INVERTED_LIGHTCUBEJ_SIDE3",
    "MARKER_INVERTED_LIGHTCUBEJ_SIDE4",
    "MARKER_INVERTED_LIGHTCUBEJ_TOP",
    "MARKER_INVERTED_LIGHTCUBEK_BOTTOM",
    "MARKER_INVERTED_LIGHTCUBEK_SIDE1",
    "MARKER_INVERTED_LIGHTCUBEK_SIDE2",
    "MARKER_INVERTED_LIGHTCUBEK_SIDE3",
    "MARKER_INVERTED_LIGHTCUBEK_SIDE4",
    "MARKER_INVERTED_LIGHTCUBEK_TOP",
    "MARKER_LIGHTCUBEI_BOTTOM",
    "MARKER_LIGHTCUBEI_SIDE1",
    "MARKER_LIGHTCUBEI_SIDE2",
    "MARKER_LIGHTCUBEI_SIDE3",
    "MARKER_LIGHTCUBEI_SIDE4",
    "MARKER_LIGHTCUBEI_TOP",
    "MARKER_LIGHTCUBEJ_BOTTOM",
    "MARKER_LIGHTCUBEJ_SIDE1",
    "MARKER_LIGHTCUBEJ_SIDE2",
    "MARKER_LIGHTCUBEJ_SIDE3",
    "MARKER_LIGHTCUBEJ_SIDE4",
    "MARKER_LIGHTCUBEJ_TOP",
    "MARKER_LIGHTCUBEK_BOTTOM",
    "MARKER_LIGHTCUBEK_SIDE1",
    "MARKER_LIGHTCUBEK_SIDE2",
    "MARKER_LIGHTCUBEK_SIDE3",
    "MARKER_LIGHTCUBEK_SIDE4",
    "MARKER_LIGHTCUBEK_TOP",
    "MARKER_UNKNOWN"
  };

#ifdef COZMO_BASESTATION
  const std::map<std::string, Vision::MarkerType> StringToMarkerType = {
    {"MARKER_CHARGER", MARKER_CHARGER},
    {"MARKER_INVALID", MARKER_INVALID},
    {"MARKER_INVERTED_CHARGER", MARKER_INVERTED_CHARGER},
    {"MARKER_INVERTED_LIGHTCUBEI_BOTTOM", MARKER_INVERTED_LIGHTCUBEI_BOTTOM},
    {"MARKER_INVERTED_LIGHTCUBEI_SIDE1", MARKER_INVERTED_LIGHTCUBEI_SIDE1},
    {"MARKER_INVERTED_LIGHTCUBEI_SIDE2", MARKER_INVERTED_LIGHTCUBEI_SIDE2},
    {"MARKER_INVERTED_LIGHTCUBEI_SIDE3", MARKER_INVERTED_LIGHTCUBEI_SIDE3},
    {"MARKER_INVERTED_LIGHTCUBEI_SIDE4", MARKER_INVERTED_LIGHTCUBEI_SIDE4},
    {"MARKER_INVERTED_LIGHTCUBEI_TOP", MARKER_INVERTED_LIGHTCUBEI_TOP},
    {"MARKER_INVERTED_LIGHTCUBEJ_BOTTOM", MARKER_INVERTED_LIGHTCUBEJ_BOTTOM},
    {"MARKER_INVERTED_LIGHTCUBEJ_SIDE1", MARKER_INVERTED_LIGHTCUBEJ_SIDE1},
    {"MARKER_INVERTED_LIGHTCUBEJ_SIDE2", MARKER_INVERTED_LIGHTCUBEJ_SIDE2},
    {"MARKER_INVERTED_LIGHTCUBEJ_SIDE3", MARKER_INVERTED_LIGHTCUBEJ_SIDE3},
    {"MARKER_INVERTED_LIGHTCUBEJ_SIDE4", MARKER_INVERTED_LIGHTCUBEJ_SIDE4},
    {"MARKER_INVERTED_LIGHTCUBEJ_TOP", MARKER_INVERTED_LIGHTCUBEJ_TOP},
    {"MARKER_INVERTED_LIGHTCUBEK_BOTTOM", MARKER_INVERTED_LIGHTCUBEK_BOTTOM},
    {"MARKER_INVERTED_LIGHTCUBEK_SIDE1", MARKER_INVERTED_LIGHTCUBEK_SIDE1},
    {"MARKER_INVERTED_LIGHTCUBEK_SIDE2", MARKER_INVERTED_LIGHTCUBEK_SIDE2},
    {"MARKER_INVERTED_LIGHTCUBEK_SIDE3", MARKER_INVERTED_LIGHTCUBEK_SIDE3},
    {"MARKER_INVERTED_LIGHTCUBEK_SIDE4", MARKER_INVERTED_LIGHTCUBEK_SIDE4},
    {"MARKER_INVERTED_LIGHTCUBEK_TOP", MARKER_INVERTED_LIGHTCUBEK_TOP},
    {"MARKER_LIGHTCUBEI_BOTTOM", MARKER_LIGHTCUBEI_BOTTOM},
    {"MARKER_LIGHTCUBEI_SIDE1", MARKER_LIGHTCUBEI_SIDE1},
    {"MARKER_LIGHTCUBEI_SIDE2", MARKER_LIGHTCUBEI_SIDE2},
    {"MARKER_LIGHTCUBEI_SIDE3", MARKER_LIGHTCUBEI_SIDE3},
    {"MARKER_LIGHTCUBEI_SIDE4", MARKER_LIGHTCUBEI_SIDE4},
    {"MARKER_LIGHTCUBEI_TOP", MARKER_LIGHTCUBEI_TOP},
    {"MARKER_LIGHTCUBEJ_BOTTOM", MARKER_LIGHTCUBEJ_BOTTOM},
    {"MARKER_LIGHTCUBEJ_SIDE1", MARKER_LIGHTCUBEJ_SIDE1},
    {"MARKER_LIGHTCUBEJ_SIDE2", MARKER_LIGHTCUBEJ_SIDE2},
    {"MARKER_LIGHTCUBEJ_SIDE3", MARKER_LIGHTCUBEJ_SIDE3},
    {"MARKER_LIGHTCUBEJ_SIDE4", MARKER_LIGHTCUBEJ_SIDE4},
    {"MARKER_LIGHTCUBEJ_TOP", MARKER_LIGHTCUBEJ_TOP},
    {"MARKER_LIGHTCUBEK_BOTTOM", MARKER_LIGHTCUBEK_BOTTOM},
    {"MARKER_LIGHTCUBEK_SIDE1", MARKER_LIGHTCUBEK_SIDE1},
    {"MARKER_LIGHTCUBEK_SIDE2", MARKER_LIGHTCUBEK_SIDE2},
    {"MARKER_LIGHTCUBEK_SIDE3", MARKER_LIGHTCUBEK_SIDE3},
    {"MARKER_LIGHTCUBEK_SIDE4", MARKER_LIGHTCUBEK_SIDE4},
    {"MARKER_LIGHTCUBEK_TOP", MARKER_LIGHTCUBEK_TOP},
    {"MARKER_UNKNOWN", MARKER_UNKNOWN}
  };
#endif

  } // namespace Vision
} // namespace Anki

#endif // ANKI_COZMO_VISIONMARKERTYPES_H

