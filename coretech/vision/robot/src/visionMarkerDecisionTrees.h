// Autogenerated by VisionMarkerTrained.GenerateHeaderFile() on 06-Mar-2014 14:45:14

// NOTE: (X,Y) probe locations are stored as SQ0.15

// Each tree is just an array of nodes, with one big one for the multi-class
// decision, and N smaller one-vs-all tree for "independently" verifying the
// decision reached by the multi-class tree.

#ifndef _ANKICORETECHEMBEDDED_VISION_FIDUCIAL_MARKER_DECISION_TREE_H_
#define _ANKICORETECHEMBEDDED_VISION_FIDUCIAL_MARKER_DECISION_TREE_H_

#include "anki/vision/robot/decisionTree_vision.h"

namespace Anki {
  namespace Embedded {
    
    // Leaf labels, which are 16 bits, have first bit set to 1
#define LEAF_MASK 0x8000
#define MAKE_LEAF(__VALUE__) (static_cast<u16>(__VALUE__) | LEAF_MASK)
#define READ_LEAF(__LEAF__) (__LEAF__ & (~LEAF_MASK))
    
    enum VisionMarkerTypes_Oriented {
      MARKER_ANGRYFACE_000,
      MARKER_ANGRYFACE_090,
      MARKER_ANGRYFACE_180,
      MARKER_ANGRYFACE_270,
      MARKER_ANKILOGO_000,
      MARKER_ANKILOGO_090,
      MARKER_ANKILOGO_180,
      MARKER_ANKILOGO_270,
      MARKER_BATTERIES_000,
      MARKER_BATTERIES_090,
      MARKER_BATTERIES_180,
      MARKER_BATTERIES_270,
      MARKER_BULLSEYE_000,
      MARKER_FIRE_000,
      MARKER_FIRE_090,
      MARKER_FIRE_180,
      MARKER_FIRE_270,
      MARKER_SQUAREPLUSCORNERS_000,
      MARKER_ALL_WHITE_000,
      MARKER_ALL_BLACK_000,
      NUM_MARKER_TYPES_ORIENTED,
      MARKER_UNKNOWN = NUM_MARKER_TYPES_ORIENTED
    };
    
    enum VisionMarkerTypes {
      MARKER_ALL_BLACK,
      MARKER_ALL_WHITE,
      MARKER_ANGRYFACE,
      MARKER_ANKILOGO,
      MARKER_BATTERIES,
      MARKER_BULLSEYE,
      MARKER_FIRE,
      MARKER_SQUAREPLUSCORNERS,
      NUM_MARKER_TYPES
    };
    
    VisionMarkerTypes RemoveOrientationLUT[NUM_MARKER_TYPES_ORIENTED] = {
      MARKER_ANGRYFACE,
      MARKER_ANGRYFACE,
      MARKER_ANGRYFACE,
      MARKER_ANGRYFACE,
      MARKER_ANKILOGO,
      MARKER_ANKILOGO,
      MARKER_ANKILOGO,
      MARKER_ANKILOGO,
      MARKER_BATTERIES,
      MARKER_BATTERIES,
      MARKER_BATTERIES,
      MARKER_BATTERIES,
      MARKER_BULLSEYE,
      MARKER_FIRE,
      MARKER_FIRE,
      MARKER_FIRE,
      MARKER_FIRE,
      MARKER_SQUAREPLUSCORNERS,
      MARKER_ALL_WHITE,
      MARKER_ALL_BLACK,
    };
    
    u32 CornerReorderLUT[NUM_MARKER_TYPES_ORIENTED][4] = {
      {0,1,2,3},
      {1,3,0,2},
      {3,2,1,0},
      {2,0,3,1},
      {0,1,2,3},
      {1,3,0,2},
      {3,2,1,0},
      {2,0,3,1},
      {0,1,2,3},
      {1,3,0,2},
      {3,2,1,0},
      {2,0,3,1},
      {0,1,2,3},
      {0,1,2,3},
      {1,3,0,2},
      {3,2,1,0},
      {2,0,3,1},
      {0,1,2,3},
      {0,1,2,3},
      {0,1,2,3},
    };
    
    const u32 NUM_NODES_MULTICLASS = 149;
    const u32 MAX_DEPTH_MULTICLASS = 9;
    const FiducialMarkerDecisionTree::Node MultiClassTree[NUM_NODES_MULTICLASS] = {
      {23901,22167,1, 0}, // X=0.7294, Y=0.6765
      {10023,13493,3, 0}, // X=0.3059, Y=0.4118
      {10601,10601,43, 0}, // X=0.3235, Y=0.3235
      {16962,21588,5, 0}, // X=0.5176, Y=0.6588
      {15227,24480,23, 0}, // X=0.4647, Y=0.7471
      {17541,8867,7, 0}, // X=0.5353, Y=0.2706
      {18697,16384,13, 0}, // X=0.5706, Y=0.5000
      {26214,16384,9, 0}, // X=0.8000, Y=0.5000
      {8288,10023,11, 0}, // X=0.2529, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_ALL_BLACK_000)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_180)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_000)},
      {16962,17541,15, 0}, // X=0.5176, Y=0.5353
      {23901,16384,21, 0}, // X=0.7294, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)},
      {15806,23901,17, 0}, // X=0.4824, Y=0.7294
      {10023,18119,19, 0}, // X=0.3059, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {10601,12336,25, 0}, // X=0.3235, Y=0.3765
      {11758,23323,29, 0}, // X=0.3588, Y=0.7118
      {19854,16962,27, 0}, // X=0.6059, Y=0.5176
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_090)},
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {17541,19275,31, 0}, // X=0.5353, Y=0.5882
      {10601,22745,35, 0}, // X=0.3235, Y=0.6941
      {11180,12336,33, 0}, // X=0.3412, Y=0.3765
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_000)},
      {15806,23323,37, 0}, // X=0.4824, Y=0.7118
      {18697,15806,39, 0}, // X=0.5706, Y=0.4824
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_000)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {8867,19275,41, 0}, // X=0.2706, Y=0.5882
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_000)},
      {23901,19275,45, 0}, // X=0.7294, Y=0.5882
      {18119,22745,83, 0}, // X=0.5529, Y=0.6941
      {8867,12914,47, 0}, // X=0.2706, Y=0.3941
      {19275,8288,57, 0}, // X=0.5882, Y=0.2529
      {20432,22745,49, 0}, // X=0.6235, Y=0.6941
      {10023,16384,51, 0}, // X=0.3059, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_180)},
      {18697,8867,53, 0}, // X=0.5706, Y=0.2706
      {25636,8288,55, 0}, // X=0.7824, Y=0.2529
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_000)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {23901,14071,59, 0}, // X=0.7294, Y=0.4294
      {22745,9445,65, 0}, // X=0.6941, Y=0.2882
      {10601,23901,61, 0}, // X=0.3235, Y=0.7294
      {23323,20432,63, 0}, // X=0.7118, Y=0.6235
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {0,0,0, MAKE_LEAF(MARKER_BULLSEYE_000)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_090)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_270)},
      {16384,13493,67, 0}, // X=0.5000, Y=0.4118
      {19854,10023,73, 0}, // X=0.6059, Y=0.3059
      {8867,21588,69, 0}, // X=0.2706, Y=0.6588
      {9445,22167,71, 0}, // X=0.2882, Y=0.6765
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_180)},
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_000)},
      {15806,15806,75, 0}, // X=0.4824, Y=0.4824
      {23901,10023,81, 0}, // X=0.7294, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_FIRE_180)},
      {25058,18119,77, 0}, // X=0.7647, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {15806,12914,79, 0}, // X=0.4824, Y=0.3941
      {0,0,0, MAKE_LEAF(MARKER_BULLSEYE_000)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_180)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_270)},
      {23323,14071,85, 0}, // X=0.7118, Y=0.4294
      {18119,10023,113, 0}, // X=0.5529, Y=0.3059
      {10601,8867,87, 0}, // X=0.3235, Y=0.2706
      {14071,16384,97, 0}, // X=0.4294, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_000)},
      {8867,10023,89, 0}, // X=0.2706, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
      {25058,22167,91, 0}, // X=0.7647, Y=0.6765
      {14649,16384,93, 0}, // X=0.4471, Y=0.5000
      {9445,24480,95, 0}, // X=0.2882, Y=0.7471
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
      {0,0,0, MAKE_LEAF(MARKER_BULLSEYE_000)},
      {21588,14071,99, 0}, // X=0.6588, Y=0.4294
      {10023,16962,107, 0}, // X=0.3059, Y=0.5176
      {12914,22745,101, 0}, // X=0.3941, Y=0.6941
      {11180,12336,105, 0}, // X=0.3412, Y=0.3765
      {22167,23901,103, 0}, // X=0.6765, Y=0.7294
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
      {0,0,0, MAKE_LEAF(MARKER_BULLSEYE_000)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_180)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_090)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {15227,16384,109, 0}, // X=0.4647, Y=0.5000
      {15227,12914,111, 0}, // X=0.4647, Y=0.3941
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_090)},
      {16962,13493,115, 0}, // X=0.5176, Y=0.4118
      {16962,19275,129, 0}, // X=0.5176, Y=0.5882
      {18697,16384,117, 0}, // X=0.5706, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
      {12914,22745,119, 0}, // X=0.3941, Y=0.6941
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_090)},
      {21010,8288,121, 0}, // X=0.6412, Y=0.2529
      {21588,16384,123, 0}, // X=0.6588, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_090)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_000)},
      {11180,22167,125, 0}, // X=0.3412, Y=0.6765
      {16384,15227,127, 0}, // X=0.5000, Y=0.4647
      {0,0,0, MAKE_LEAF(MARKER_FIRE_000)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_180)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {15227,22167,131, 0}, // X=0.4647, Y=0.6765
      {16962,18119,141, 0}, // X=0.5176, Y=0.5529
      {10023,12336,133, 0}, // X=0.3059, Y=0.3765
      {16962,12336,137, 0}, // X=0.5176, Y=0.3765
      {0,0,0, MAKE_LEAF(MARKER_FIRE_270)},
      {20432,8867,135, 0}, // X=0.6235, Y=0.2706
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_090)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_000)},
      {23901,18697,139, 0}, // X=0.7294, Y=0.5706
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_180)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_180)},
      {16384,10601,143, 0}, // X=0.5000, Y=0.3235
      {12336,17541,147, 0}, // X=0.3765, Y=0.5353
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {22167,14071,145, 0}, // X=0.6765, Y=0.4294
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_180)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_000)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_000)},
      {0,0,0, MAKE_LEAF(MARKER_ALL_WHITE_000)},
    };
    
    const u32 NUM_NODES_VERIFY_0 = 11;
    const u32 MAX_DEPTH_VERIFY_0 = 4;
    const FiducialMarkerDecisionTree::Node VerifyTree_0[NUM_NODES_VERIFY_0] = {
      {16962,19275,1, 0}, // X=0.5176, Y=0.5882
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {14649,23901,3, 0}, // X=0.4471, Y=0.7294
      {25058,21588,5, 0}, // X=0.7647, Y=0.6588
      {10023,8288,7, 0}, // X=0.3059, Y=0.2529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_000)},
      {10023,15806,9, 0}, // X=0.3059, Y=0.4824
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_000)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
    };
    
    const u32 NUM_NODES_VERIFY_1 = 7;
    const u32 MAX_DEPTH_VERIFY_1 = 3;
    const FiducialMarkerDecisionTree::Node VerifyTree_1[NUM_NODES_VERIFY_1] = {
      {19854,16384,1, 0}, // X=0.6059, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23901,16962,3, 0}, // X=0.7294, Y=0.5176
      {14071,16384,5, 0}, // X=0.4294, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_090)},
    };
    
    const u32 NUM_NODES_VERIFY_2 = 13;
    const u32 MAX_DEPTH_VERIFY_2 = 4;
    const FiducialMarkerDecisionTree::Node VerifyTree_2[NUM_NODES_VERIFY_2] = {
      {16962,13493,1, 0}, // X=0.5176, Y=0.4118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {19854,8867,3, 0}, // X=0.6059, Y=0.2706
      {8867,9445,5, 0}, // X=0.2706, Y=0.2882
      {24480,24480,9, 0}, // X=0.7471, Y=0.7471
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {16962,9445,7, 0}, // X=0.5176, Y=0.2882
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {16962,23901,11, 0}, // X=0.5176, Y=0.7294
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_180)},
    };
    
    const u32 NUM_NODES_VERIFY_3 = 15;
    const u32 MAX_DEPTH_VERIFY_3 = 5;
    const FiducialMarkerDecisionTree::Node VerifyTree_3[NUM_NODES_VERIFY_3] = {
      {14649,16384,1, 0}, // X=0.4471, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {10023,15806,3, 0}, // X=0.3059, Y=0.4824
      {11758,23901,5, 0}, // X=0.3588, Y=0.7294
      {25636,8288,11, 0}, // X=0.7824, Y=0.2529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {25058,16384,7, 0}, // X=0.7647, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {13493,16384,9, 0}, // X=0.4118, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
      {25058,16384,13, 0}, // X=0.7647, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANGRYFACE_270)},
    };
    
    const u32 NUM_NODES_VERIFY_4 = 15;
    const u32 MAX_DEPTH_VERIFY_4 = 4;
    const FiducialMarkerDecisionTree::Node VerifyTree_4[NUM_NODES_VERIFY_4] = {
      {26214,14071,1, 0}, // X=0.8000, Y=0.4294
      {17541,20432,3, 0}, // X=0.5353, Y=0.6235
      {7132,15806,9, 0}, // X=0.2176, Y=0.4824
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {16962,18119,5, 0}, // X=0.5176, Y=0.5529
      {18119,18119,7, 0}, // X=0.5529, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_000)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_000)},
      {16384,19275,11, 0}, // X=0.5000, Y=0.5882
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {19854,13493,13, 0}, // X=0.6059, Y=0.4118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_000)},
    };
    
    const u32 NUM_NODES_VERIFY_5 = 15;
    const u32 MAX_DEPTH_VERIFY_5 = 5;
    const FiducialMarkerDecisionTree::Node VerifyTree_5[NUM_NODES_VERIFY_5] = {
      {15227,7132,1, 0}, // X=0.4647, Y=0.2176
      {21010,15806,3, 0}, // X=0.6412, Y=0.4824
      {17541,25636,7, 0}, // X=0.5353, Y=0.7824
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {19275,16384,5, 0}, // X=0.5882, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_090)},
      {19854,16962,9, 0}, // X=0.6059, Y=0.5176
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {22167,16384,11, 0}, // X=0.6765, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {15227,16962,13, 0}, // X=0.4647, Y=0.5176
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_090)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
    };
    
    const u32 NUM_NODES_VERIFY_6 = 15;
    const u32 MAX_DEPTH_VERIFY_6 = 4;
    const FiducialMarkerDecisionTree::Node VerifyTree_6[NUM_NODES_VERIFY_6] = {
      {7710,18697,1, 0}, // X=0.2353, Y=0.5706
      {16962,12336,3, 0}, // X=0.5176, Y=0.3765
      {26214,15227,9, 0}, // X=0.8000, Y=0.4647
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {16962,14071,5, 0}, // X=0.5176, Y=0.4294
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {12914,19854,7, 0}, // X=0.3941, Y=0.6059
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_180)},
      {17541,13493,11, 0}, // X=0.5353, Y=0.4118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {13493,19275,13, 0}, // X=0.4118, Y=0.5882
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_180)},
    };
    
    const u32 NUM_NODES_VERIFY_7 = 25;
    const u32 MAX_DEPTH_VERIFY_7 = 5;
    const FiducialMarkerDecisionTree::Node VerifyTree_7[NUM_NODES_VERIFY_7] = {
      {18697,25636,1, 0}, // X=0.5706, Y=0.7824
      {13493,16962,3, 0}, // X=0.4118, Y=0.5176
      {17541,6554,11, 0}, // X=0.5353, Y=0.2000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {15227,16384,5, 0}, // X=0.4647, Y=0.5000
      {19854,16962,7, 0}, // X=0.6059, Y=0.5176
      {10023,24480,9, 0}, // X=0.3059, Y=0.7471
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {14071,15227,13, 0}, // X=0.4294, Y=0.4647
      {19275,25058,19, 0}, // X=0.5882, Y=0.7647
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {15227,15227,15, 0}, // X=0.4647, Y=0.4647
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {10023,16384,17, 0}, // X=0.3059, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {20432,20432,21, 0}, // X=0.6235, Y=0.6235
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {19275,16384,23, 0}, // X=0.5882, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_ANKILOGO_270)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
    };
    
    const u32 NUM_NODES_VERIFY_8 = 15;
    const u32 MAX_DEPTH_VERIFY_8 = 4;
    const FiducialMarkerDecisionTree::Node VerifyTree_8[NUM_NODES_VERIFY_8] = {
      {8288,22167,1, 0}, // X=0.2529, Y=0.6765
      {18697,9445,3, 0}, // X=0.5706, Y=0.2882
      {26214,21010,9, 0}, // X=0.8000, Y=0.6412
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {14649,10023,5, 0}, // X=0.4471, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {26214,10023,7, 0}, // X=0.8000, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_000)},
      {15806,10601,11, 0}, // X=0.4824, Y=0.3235
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23901,9445,13, 0}, // X=0.7294, Y=0.2882
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_000)},
    };
    
    const u32 NUM_NODES_VERIFY_9 = 7;
    const u32 MAX_DEPTH_VERIFY_9 = 2;
    const FiducialMarkerDecisionTree::Node VerifyTree_9[NUM_NODES_VERIFY_9] = {
      {22745,25058,1, 0}, // X=0.6941, Y=0.7647
      {9445,16962,3, 0}, // X=0.2882, Y=0.5176
      {22745,6554,5, 0}, // X=0.6941, Y=0.2000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_090)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_090)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
    };
    
    const u32 NUM_NODES_VERIFY_10 = 9;
    const u32 MAX_DEPTH_VERIFY_10 = 3;
    const FiducialMarkerDecisionTree::Node VerifyTree_10[NUM_NODES_VERIFY_10] = {
      {25636,10601,1, 0}, // X=0.7824, Y=0.3235
      {8867,11180,3, 0}, // X=0.2706, Y=0.3412
      {7132,11180,7, 0}, // X=0.2176, Y=0.3412
      {7132,22745,5, 0}, // X=0.2176, Y=0.6941
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_180)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_180)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
    };
    
    const u32 NUM_NODES_VERIFY_11 = 13;
    const u32 MAX_DEPTH_VERIFY_11 = 4;
    const FiducialMarkerDecisionTree::Node VerifyTree_11[NUM_NODES_VERIFY_11] = {
      {11758,7710,1, 0}, // X=0.3588, Y=0.2353
      {23323,13493,3, 0}, // X=0.7118, Y=0.4118
      {11758,25636,9, 0}, // X=0.3588, Y=0.7824
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23901,18119,5, 0}, // X=0.7294, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23323,20432,7, 0}, // X=0.7118, Y=0.6235
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_270)},
      {23901,8288,11, 0}, // X=0.7294, Y=0.2529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BATTERIES_270)},
    };
    
    const u32 NUM_NODES_VERIFY_12 = 25;
    const u32 MAX_DEPTH_VERIFY_12 = 8;
    const FiducialMarkerDecisionTree::Node VerifyTree_12[NUM_NODES_VERIFY_12] = {
      {21588,11758,1, 0}, // X=0.6588, Y=0.3588
      {23323,9445,3, 0}, // X=0.7118, Y=0.2882
      {22745,11180,17, 0}, // X=0.6941, Y=0.3412
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {10601,23323,5, 0}, // X=0.3235, Y=0.7118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {24480,22167,7, 0}, // X=0.7471, Y=0.6765
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {22745,8867,9, 0}, // X=0.6941, Y=0.2706
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {25058,10023,11, 0}, // X=0.7647, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23901,23323,13, 0}, // X=0.7294, Y=0.7118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {25058,21588,15, 0}, // X=0.7647, Y=0.6588
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BULLSEYE_000)},
      {25058,16384,19, 0}, // X=0.7647, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {12914,12336,21, 0}, // X=0.3941, Y=0.3765
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {9445,22167,23, 0}, // X=0.2882, Y=0.6765
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_BULLSEYE_000)},
    };
    
    const u32 NUM_NODES_VERIFY_13 = 15;
    const u32 MAX_DEPTH_VERIFY_13 = 7;
    const FiducialMarkerDecisionTree::Node VerifyTree_13[NUM_NODES_VERIFY_13] = {
      {16962,16384,1, 0}, // X=0.5176, Y=0.5000
      {10601,11180,3, 0}, // X=0.3235, Y=0.3412
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {17541,23323,5, 0}, // X=0.5353, Y=0.7118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23901,8867,7, 0}, // X=0.7294, Y=0.2706
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {11180,14649,9, 0}, // X=0.3412, Y=0.4471
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {18697,19275,11, 0}, // X=0.5706, Y=0.5882
      {18697,23323,13, 0}, // X=0.5706, Y=0.7118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_000)},
    };
    
    const u32 NUM_NODES_VERIFY_14 = 17;
    const u32 MAX_DEPTH_VERIFY_14 = 8;
    const FiducialMarkerDecisionTree::Node VerifyTree_14[NUM_NODES_VERIFY_14] = {
      {16962,16384,1, 0}, // X=0.5176, Y=0.5000
      {11758,22745,3, 0}, // X=0.3588, Y=0.6941
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {24480,15806,5, 0}, // X=0.7471, Y=0.4824
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {15227,22167,7, 0}, // X=0.4647, Y=0.6765
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {25636,17541,9, 0}, // X=0.7824, Y=0.5353
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23901,21588,11, 0}, // X=0.7294, Y=0.6588
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {22745,11758,13, 0}, // X=0.6941, Y=0.3588
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {23323,22745,15, 0}, // X=0.7118, Y=0.6941
      {0,0,0, MAKE_LEAF(MARKER_FIRE_090)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
    };
    
    const u32 NUM_NODES_VERIFY_15 = 17;
    const u32 MAX_DEPTH_VERIFY_15 = 8;
    const FiducialMarkerDecisionTree::Node VerifyTree_15[NUM_NODES_VERIFY_15] = {
      {16962,16384,1, 0}, // X=0.5176, Y=0.5000
      {23323,21588,3, 0}, // X=0.7118, Y=0.6588
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {16384,9445,5, 0}, // X=0.5000, Y=0.2882
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23323,18119,7, 0}, // X=0.7118, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {18119,7710,9, 0}, // X=0.5529, Y=0.2353
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {15227,12914,11, 0}, // X=0.4647, Y=0.3941
      {15227,8867,13, 0}, // X=0.4647, Y=0.2706
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {22745,19854,15, 0}, // X=0.6941, Y=0.6059
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_180)},
    };
    
    const u32 NUM_NODES_VERIFY_16 = 17;
    const u32 MAX_DEPTH_VERIFY_16 = 8;
    const FiducialMarkerDecisionTree::Node VerifyTree_16[NUM_NODES_VERIFY_16] = {
      {16962,16384,1, 0}, // X=0.5176, Y=0.5000
      {22745,10023,3, 0}, // X=0.6941, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {10023,16962,5, 0}, // X=0.3059, Y=0.5176
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {19275,10601,7, 0}, // X=0.5882, Y=0.3235
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {23901,23323,9, 0}, // X=0.7294, Y=0.7118
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {10601,11758,11, 0}, // X=0.3235, Y=0.3588
      {0,0,0, MAKE_LEAF(MARKER_FIRE_270)},
      {13493,18697,13, 0}, // X=0.4118, Y=0.5706
      {8867,18119,15, 0}, // X=0.2706, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_FIRE_270)},
    };
    
    const u32 NUM_NODES_VERIFY_17 = 21;
    const u32 MAX_DEPTH_VERIFY_17 = 5;
    const FiducialMarkerDecisionTree::Node VerifyTree_17[NUM_NODES_VERIFY_17] = {
      {23901,10601,1, 0}, // X=0.7294, Y=0.3235
      {11180,23323,3, 0}, // X=0.3412, Y=0.7118
      {8867,11758,15, 0}, // X=0.2706, Y=0.3588
      {17541,16384,5, 0}, // X=0.5353, Y=0.5000
      {11758,22167,9, 0}, // X=0.3588, Y=0.6765
      {16962,7710,7, 0}, // X=0.5176, Y=0.2353
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)},
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)},
      {22167,15227,11, 0}, // X=0.6765, Y=0.4647
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {15806,16384,13, 0}, // X=0.4824, Y=0.5000
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)}, 
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {22745,10023,17, 0}, // X=0.6941, Y=0.3059
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {21010,22745,19, 0}, // X=0.6412, Y=0.6941
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {0,0,0, MAKE_LEAF(MARKER_SQUAREPLUSCORNERS_000)}, 
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
    };
    
    const u32 NUM_NODES_VERIFY_18 = 7;
    const u32 MAX_DEPTH_VERIFY_18 = 3;
    const FiducialMarkerDecisionTree::Node VerifyTree_18[NUM_NODES_VERIFY_18] = {
      {15227,18119,1, 0}, // X=0.4647, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {18697,14649,3, 0}, // X=0.5706, Y=0.4471
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {17541,18119,5, 0}, // X=0.5353, Y=0.5529
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
      {0,0,0, MAKE_LEAF(MARKER_ALL_WHITE_000)}, 
    };
    
    const u32 NUM_NODES_VERIFY_19 = 3;
    const u32 MAX_DEPTH_VERIFY_19 = 1;
    const FiducialMarkerDecisionTree::Node VerifyTree_19[NUM_NODES_VERIFY_19] = {
      {6554,6554,1, 0}, // X=0.2000, Y=0.2000
      {0,0,0, MAKE_LEAF(MARKER_ALL_BLACK_000)}, 
      {0,0,0, MAKE_LEAF(MARKER_UNKNOWN)}, 
    };
    
    // For convenience, store pointers to the verification trees (and their max
    // depths) in arrays, indexable by marker type:
    
    const u32 MAX_DEPTH_VERIFY[NUM_MARKER_TYPES_ORIENTED] = {
      MAX_DEPTH_VERIFY_0,
      MAX_DEPTH_VERIFY_1,
      MAX_DEPTH_VERIFY_2,
      MAX_DEPTH_VERIFY_3,
      MAX_DEPTH_VERIFY_4,
      MAX_DEPTH_VERIFY_5,
      MAX_DEPTH_VERIFY_6,
      MAX_DEPTH_VERIFY_7,
      MAX_DEPTH_VERIFY_8,
      MAX_DEPTH_VERIFY_9,
      MAX_DEPTH_VERIFY_10,
      MAX_DEPTH_VERIFY_11,
      MAX_DEPTH_VERIFY_12,
      MAX_DEPTH_VERIFY_13,
      MAX_DEPTH_VERIFY_14,
      MAX_DEPTH_VERIFY_15,
      MAX_DEPTH_VERIFY_16,
      MAX_DEPTH_VERIFY_17,
      MAX_DEPTH_VERIFY_18,
      MAX_DEPTH_VERIFY_19,
    };
    
    const FiducialMarkerDecisionTree::Node* VerifyTree[NUM_MARKER_TYPES_ORIENTED] = {
      VerifyTree_0,
      VerifyTree_1,
      VerifyTree_2,
      VerifyTree_3,
      VerifyTree_4,
      VerifyTree_5,
      VerifyTree_6,
      VerifyTree_7,
      VerifyTree_8,
      VerifyTree_9,
      VerifyTree_10,
      VerifyTree_11,
      VerifyTree_12,
      VerifyTree_13,
      VerifyTree_14,
      VerifyTree_15,
      VerifyTree_16,
      VerifyTree_17,
      VerifyTree_18,
      VerifyTree_19,
    };
    
  } // namespace Embedded
} // namespace Anki

#endif // _ANKICORETECHEMBEDDED_VISION_FIDUCIAL_MARKER_DECISION_TREE_H_
