// PlayerMessage message definition file
//  for the C-Like Abstract Data language
// Author: Mark Pauley
// Copyright: Anki, Inc (c) 2015

message Void {}

// Wrapped buffer
message Buffer16
{
  uint_8 buffer[uint_16]
}

// PlayerId
message PlayerId
{
  uint_8 playerId
}

// Player and Profile pair
message PlayerAndProfile
{
  uint_8 playerId,
  uint_8 profileBuffer[uint_8]
}

// Player And Vehicle pair
message PlayerAndVehicle
{
  uint_8 playerId,
  uint_64 vehicleUUID
}

// Lobby Service
enum uint_8 ClientLobbyState {
  Nil = 0,
  PreLobby,
  InLobby,
  GameReady,
  InGame
}

message LobbyState
{
  ClientLobbyState lobbyState
}

// Emotion Service
enum uint_8 EmotionRequestType {
  Nil = 0,
  Start,
  Stop
}

message PlayerEmotion
{
  string soundToPlay,
  EmotionRequestType requestType
}

union PlayerMessage
{
    Buffer16         UiMessageData, // wrapped UIMessage
    Void             RequestLobbyData,
    Buffer16         ResponseLobbyData,
    PlayerId         RequestPlayerData,  //data for playerId
    PlayerAndProfile ResponsePlayerData, //wrapped profile
    PlayerAndVehicle PlayerRequestVehicleSelect,
    Void             HostReadyForGameStart,
    Void             HostBackToLobby,
    Void             ClientReadForGameStart,
    LobbyState       ClientStateUpdate,
    PlayerEmotion    EmotionMessage,
    Buffer16         VehicleControllerMessage
}

