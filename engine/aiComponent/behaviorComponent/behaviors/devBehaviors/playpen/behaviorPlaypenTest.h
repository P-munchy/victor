/**
 * File: behaviorPlaypenTest.h
 *
 * Author: Al Chaussee
 * Created: 07/25/17
 *
 * Description: Runs individual steps (behaviors) of playpen and manages switching between them and dealing
 *              with failures
 *
 * Copyright: Anki, Inc. 2017
 *
 **/

#ifndef __Cozmo_Basestation_BehaviorSystem_DevBehaviors_Playpen_BehaviorPlaypenTest_H__
#define __Cozmo_Basestation_BehaviorSystem_DevBehaviors_Playpen_BehaviorPlaypenTest_H__

#include "engine/aiComponent/behaviorComponent/behaviors/iCozmoBehavior.h"

#include "engine/factory/factoryTestLogger.h"
#include "util/signals/simpleSignal_fwd.h"

namespace Anki {
namespace Cozmo {

class IBehaviorPlaypen;
class Robot;

class BehaviorPlaypenTest : public ICozmoBehavior
{
public:
  
  BehaviorPlaypenTest(const Json::Value& config);
  virtual ~BehaviorPlaypenTest() {};
  
  virtual void BehaviorUpdate(BehaviorExternalInterface& behaviorExternalInterface) override;
  
  static FactoryTestLogger& GetFactoryTestLogger();

  template<typename T>
  void HandleMessage(const T& msg);
  
protected:
  virtual bool ShouldCancelWhenInControl() const override { return false; }

  virtual void InitBehavior(BehaviorExternalInterface& behaviorExternalInterface) override;

  // Override of IBehavior functions
  virtual bool WantsToBeActivatedBehavior(BehaviorExternalInterface& behaviorExternalInterface) const override{ return true;}

  virtual void OnBehaviorActivated(BehaviorExternalInterface& behaviorExternalInterface) override;
  virtual void OnBehaviorDeactivated(BehaviorExternalInterface& behaviorExternalInterface) override;
  virtual bool ShouldRunWhileOnCharger() const override { return true;}
  
  // No playpen behavior can start while carrying an object
  virtual bool CarryingObjectHandledInternally() const override { return false; }
  virtual void GetAllDelegates(std::set<IBehavior*>& delegates) const override;


private:
  
  // Handle the playpen result and finish up the test
  void HandleResult(BehaviorExternalInterface& behaviorExternalInterface, FactoryTestResultCode result);

  // Display appropriate stuff on the face and backpack lights depending on the result
  void DisplayResult(BehaviorExternalInterface& behaviorExternalInterface, FactoryTestResultCode result);

  // Reset all playpen behaviors and state
  void Reset(BehaviorExternalInterface& behaviorExternalInterface);
  
  using PlaypenBehavior = std::shared_ptr<IBehaviorPlaypen>;
  
  PlaypenBehavior _currentBehavior = nullptr;
  
  std::vector<PlaypenBehavior>::iterator _currentPlaypenBehaviorIter;
  std::vector<PlaypenBehavior> _playpenBehaviors;
  
  std::vector<u32> _behaviorStartTimes;
  
  IMUTempDuration _imuTemp;

  std::vector<::Signal::SmartHandle> _signalHandles;

  BehaviorExternalInterface* _behaviorExternalInterface;
  
};

} // namespace Cozmo
} // namespace Anki

#endif // __Cozmo_Basestation_BehaviorSystem_DevBehaviors_Playpen_BehaviorPlaypenTest_H__
