/**
 * File: activityPlaypenTest.h
 *
 * Author: Al Chaussee
 * Created: 07/25/17
 *
 * Description: Runs individual steps (behaviors) of playpen and manages switching between them and dealing
 *              failures
 *
 * Copyright: Anki, Inc. 2017
 *
 **/

#ifndef __Cozmo_Basestation_BehaviorSystem_Activities_Activities_ActivityPlaypenTest_H__
#define __Cozmo_Basestation_BehaviorSystem_Activities_Activities_ActivityPlaypenTest_H__

#include "engine/behaviorSystem/activities/activities/iActivity.h"

#include "engine/factory/factoryTestLogger.h"
#include "util/signals/simpleSignal_fwd.h"

namespace Anki {
namespace Cozmo {

class IBehaviorPlaypen;
class Robot;

class ActivityPlaypenTest : public IActivity
{
public:
  
  ActivityPlaypenTest(Robot& robot, const Json::Value& config);
  virtual ~ActivityPlaypenTest() {};
  
  virtual Result Update(Robot& robot) override;
  
  static FactoryTestLogger& GetFactoryTestLogger();

  template<typename T>
  void HandleMessage(const T& msg);
  
protected:
  virtual IBehaviorPtr GetDesiredActiveBehaviorInternal(Robot& robot,
                                                  const IBehaviorPtr currentRunningBehavior) override;
  
  virtual void OnSelectedInternal(Robot& robot) override;
  virtual void OnDeselectedInternal(Robot& robot) override;
  
private:
  
  void HandleSuccess(Robot& robot, FactoryTestResultCode result);
  void HandleFailure(Robot& robot, FactoryTestResultCode result);
  void HandleResultInternal(Robot& robot, FactoryTestResultCode result);
  
  using PlaypenBehavior = std::shared_ptr<IBehaviorPlaypen>;
  
  PlaypenBehavior _currentBehavior = nullptr;
  
  std::vector<PlaypenBehavior>::iterator _currentPlaypenBehaviorIter;
  std::vector<PlaypenBehavior> _playpenBehaviors;
  
  std::vector<u32> _behaviorStartTimes;
  
  IMUTempDuration _imuTemp;

  std::vector<::Signal::SmartHandle> _signalHandles;

  Robot& _robot;
  
};

} // namespace Cozmo
} // namespace Anki

#endif // __Cozmo_Basestation_BehaviorSystem_Activities_Activities_ActivityPlaypenTest_H__
