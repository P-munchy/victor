#if defined(COZMO_CSHARP)
#include "anki/cozmo/game/comms/messaging/MessageDefMacros_CSharp.h"
#elif defined(COZMO_BASESTATION)
#include "anki/cozmo/shared/MessageDefMacros_Basestation.h"
#else
#error COZMO_BASESTATION or COZMO_CSHARP should be defined when using MessageDefinitionsG2U.h
#endif


///////////////////////////////////////////////////////////////////////////////
////////////////////////  ADVERTISING & CONNECTING  ///////////////////////////
///////////////////////////////////////////////////////////////////////////////

// Let the UI know that a robot is advertising as available
START_MESSAGE_DEFINITION(G2U_RobotAvailable, 1)
ADD_MESSAGE_MEMBER(u32, robotID)
END_MESSAGE_DEFINITION(G2U_RobotAvailable)

START_MESSAGE_DEFINITION(G2U_UiDeviceAvailable, 1)
ADD_MESSAGE_MEMBER(u32, deviceID)
END_MESSAGE_DEFINITION(G2U_UiDeviceAvailable)

START_MESSAGE_DEFINITION(G2U_RobotConnected, 1)
ADD_MESSAGE_MEMBER(u32, robotID)
ADD_MESSAGE_MEMBER(u8, successful)
END_MESSAGE_DEFINITION(G2U_RobotConnected)

START_MESSAGE_DEFINITION(G2U_UiDeviceConnected, 1)
ADD_MESSAGE_MEMBER(u32, deviceID)
ADD_MESSAGE_MEMBER(u8, successful)
END_MESSAGE_DEFINITION(G2U_UiDeviceConnected)

/*
START_MESSAGE_DEFINITION(G2U_Bogus, 1)
END_MESSAGE_DEFINITION(G2U_Bogus)
*/


///////////////////////////////////////////////////////////////////////////////
/////////////////////////////////  VISION  ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
/*
// Full QVGA Image from a specifed Robot
START_MESSAGE_DEFINITION(G2U_RobotImage_320x240, 1)
ADD_MESSAGE_MEMBER(u32, robotID)
ADD_MESSAGE_MEMBER_ARRAY(u8, image, 320*240)
END_MESSAGE_DEFINITION(G2U_RobotImage_320x240)

// Full VGA Image from a specifed Robot
START_MESSAGE_DEFINITION(G2U_RobotImage_640x480, 1)
ADD_MESSAGE_MEMBER(u32, robotID)
ADD_MESSAGE_MEMBER_ARRAY(u8, image, 640*480)
END_MESSAGE_DEFINITION(G2U_RobotImage_640x480)
*/

// ImageChunk
#define G2U_IMAGE_CHUNK_SIZE 1024
START_MESSAGE_DEFINITION(G2U_ImageChunk, 1)
ADD_MESSAGE_MEMBER(u32, imageId)
ADD_MESSAGE_MEMBER(Anki::TimeStamp_t, frameTimeStamp)
ADD_MESSAGE_MEMBER(u16, nrows)
ADD_MESSAGE_MEMBER(u16, ncols)
ADD_MESSAGE_MEMBER(u16, chunkSize)
ADD_MESSAGE_MEMBER(u8, imageEncoding)
ADD_MESSAGE_MEMBER(u8, imageChunkCount)
ADD_MESSAGE_MEMBER(u8, chunkId)
ADD_MESSAGE_MEMBER_ARRAY(u8, data, G2U_IMAGE_CHUNK_SIZE)
END_MESSAGE_DEFINITION(G2U_ImageChunk)


// ObjectVisionMarker for telling the UI that an object
//  with specified ID was seen at a particular location in the image
START_MESSAGE_DEFINITION(G2U_RobotObservedObject, 1)
ADD_MESSAGE_MEMBER(u32, robotID)
ADD_MESSAGE_MEMBER(u32, objectID)
ADD_MESSAGE_MEMBER(u16, topLeft_x)
ADD_MESSAGE_MEMBER(u16, topLeft_y)
ADD_MESSAGE_MEMBER(u16, width)
ADD_MESSAGE_MEMBER(u16, height)
END_MESSAGE_DEFINITION(G2U_RobotObservedObject)

START_MESSAGE_DEFINITION(G2U_DeviceDetectedVisionMarker, 1)
ADD_MESSAGE_MEMBER(u32, markerType)
ADD_MESSAGE_MEMBER(f32, x_upperLeft)
ADD_MESSAGE_MEMBER(f32, y_upperLeft)
ADD_MESSAGE_MEMBER(f32, x_lowerLeft)
ADD_MESSAGE_MEMBER(f32, y_lowerLeft)
ADD_MESSAGE_MEMBER(f32, x_upperRight)
ADD_MESSAGE_MEMBER(f32, y_upperRight)
ADD_MESSAGE_MEMBER(f32, x_lowerRight)
ADD_MESSAGE_MEMBER(f32, y_lowerRight)
END_MESSAGE_DEFINITION(G2U_DeviceDetectedVisionMarker)


///////////////////////////////////////////////////////////////////////////////
//////////////////////////////////  SOUND  ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// Note: these should go away when the robot can play its own sounds and doesn't
//       rely on the phone to do it.

START_MESSAGE_DEFINITION(G2U_PlaySound, 1)
ADD_MESSAGE_MEMBER_ARRAY(char, soundFilename, 128)
ADD_MESSAGE_MEMBER(u8, numLoops)
ADD_MESSAGE_MEMBER(u8, volume)
END_MESSAGE_DEFINITION(G2U_PlaySound)

START_MESSAGE_DEFINITION(G2U_StopSound, 1)
END_MESSAGE_DEFINITION(G2U_StopSound)
