/*









This file was automatically generated by the python script generateFixedLengthList_vision_h.py. Rather than editing this file, edit that script, then run "python generateFixedLengthList_vision_h.py".









*/

#ifndef _ANKICORETECHEMBEDDED_VISION_FIXED_LENGTH_LIST_VISION_H_
#define _ANKICORETECHEMBEDDED_VISION_FIXED_LENGTH_LIST_VISION_H_

#include "anki/embeddedVision/config.h"
#include "anki/embeddedCommon.h"
#include "anki/embeddedVision/dataStructures_vision.h"

namespace Anki
{
  namespace Embedded
  {
    class FixedLengthList_ConnectedComponentSegment : public Array_ConnectedComponentSegment
    {
    public:
      FixedLengthList_ConnectedComponentSegment();

      // Constructor for a FixedLengthList_ConnectedComponentSegment, pointing to user-allocated data.
      FixedLengthList_ConnectedComponentSegment(s32 maximumSize, void * data, s32 dataLength, bool useBoundaryFillPatterns=false);

      // Constructor for a FixedLengthList_ConnectedComponentSegment, pointing to user-allocated MemoryStack
      FixedLengthList_ConnectedComponentSegment(s32 maximumSize, MemoryStack &memory, bool useBoundaryFillPatterns=false);

      bool IsValid() const;

      Result PushBack(const ConnectedComponentSegment &value);

      // Will act as a normal pop, except when the list is empty. Then subsequent
      // calls will keep returning the first value in the list.
      ConnectedComponentSegment PopBack();

      // Sets the size to zero, but does not modify any data. Equivalent to set_size(0)
      void Clear();

      // Does this ever need to be declared explicitly?
      //FixedLengthList_ConnectedComponentSegment& operator= (const FixedLengthList_ConnectedComponentSegment & rightHandSide);

      // Pointer to the data, at a given location
      inline ConnectedComponentSegment* Pointer(s32 index);

      // Pointer to the data, at a given location
      inline const ConnectedComponentSegment* Pointer(s32 index) const;

      // Print out the contents of this FixedLengthList_ConnectedComponentSegment
      Result Print(const char * const variableName = "FixedLengthList_ConnectedComponentSegment", const s32 minIndex = 0, const s32 maxIndex = 0x7FFFFFE) const;

      s32 get_maximumSize() const;

      s32 get_size() const;

      // Attempt to set the size to newSize. Returns the value that was actually set.
      s32 set_size(s32 newSize);

    protected:
      s32 capacityUsed;
    }; // class FixedLengthList_ConnectedComponentSegment

    inline ConnectedComponentSegment* FixedLengthList_ConnectedComponentSegment::Pointer(s32 index)
    {
      return Array_ConnectedComponentSegment::Pointer(0, index);
    }

    // Pointer to the data, at a given location
    inline const ConnectedComponentSegment* FixedLengthList_ConnectedComponentSegment::Pointer(s32 index) const
    {
      return Array_ConnectedComponentSegment::Pointer(0, index);
    }

    FixedLengthList_ConnectedComponentSegment AllocateFixedLengthListFromHeap_ConnectedComponentSegment(s32 maximumSize, bool useBoundaryFillPatterns=false);


    } // namespace Embedded
} //namespace Anki

#endif // _ANKICORETECHEMBEDDED_VISION_FIXED_LENGTH_LIST_VISION_H_
