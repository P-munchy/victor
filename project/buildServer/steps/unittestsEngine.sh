#!/usr/bin/env bash
#
set -eu

# change dir to the script dir, no matter where we are executed from
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SCRIPTNAME=="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

GIT=`which git`
if [ -z $GIT ];then
  echo git not found
  exit 1
fi

# configure

function usage() {
    echo "$SCRIPTNAME [OPTIONS]"
    echo "  -h                      print this message"
    echo "  -v                      verbose output"
    echo "  -c [CONFIGURATION]      build configuration {Debug,Release}"
    echo "  -p [PLATFORM]           build target platform {android,mac}"
}

: ${PLATFORM:=mac}
: ${CONFIGURATION:=Debug}
: ${VERBOSE:=0}

while getopts "hvc:p" opt; do
  case $opt in
    h)
      usage
      exit 1
      ;;
    v)
      VERBOSE=1
      ;;
    c)
      CONFIGURATION="${OPTARG}"
      ;;
    p)
      PLATFORM="${OPTARG}"
      ;;
    *)
      usage
      exit 1
      ;;
  esac
done

echo "Entering directory \`${SCRIPTDIR}'"
cd $SCRIPTDIR

: ${TOPLEVEL:=`$GIT rev-parse --show-toplevel`}
BUILDPATH=${TOPLEVEL}/_build/${PLATFORM}/${CONFIGURATION}/test/engine

XML="*GoogleTest.xml"
LOG=cozmoEngineGoogleTest.log
LOGZIP=cozmoEngineGoogleTest.tar.gz

CTEST="ctest --output-on-failure -O ${LOG}"

if (( ${VERBOSE} )); then
  CTEST="${CTEST} -V"
fi

if [ ! ${ANKICONFIGROOT:+x} ]; then
  export ANKICONFIGROOT=$BUILDPATH
fi
if [ ! ${ANKIWORKROOT:+x} ]; then
  export ANKIWORKROOT=$BUILDPATH
fi


echo "Copying animation assets for tests"  
${TOPLEVEL}/tools/animationScripts/copy_anims_for_test.py

# unit test(s) look for this and dump a file if it's set
# uncomment to generate a build artifact of all behaviors and their relationships
# export ANKI_TEST_BEHAVIOR_FILE="behavior_transitions.txt"
export ANKI_TEST_BEHAVIOR_BRANCHES="behavior_branches.txt"
export ANKI_TEST_BEHAVIOR_FEATURES="behavior_active_features.txt"

# unit test(s) look for this file to run cloud intent tests
# comment out to skip generating it and running the tests
# export ANKI_TEST_INTENT_SAMPLE_FILE="intent_samples.json"
# ${TOPLEVEL}/tools/ai/makeSampleIntents.py $ANKI_TEST_INTENT_SAMPLE_FILE

echo "Entering directory \`${BUILDPATH}'"
cd ${BUILDPATH}

# clean
rm -rf ${XML} ${LOG} ${LOGZIP}

# prepare
mkdir -p testdata

# execute
set +e
set -o pipefail

${CTEST}

EXIT_STATUS=$?

# additional files generated by tests we want to save, filled in below
FILES="" 

if [[ ${ANKI_TEST_BEHAVIOR_FILE:+x} ]]; then
  BEHAVIOR_FILE="${BUILDPATH}/${ANKI_TEST_BEHAVIOR_FILE}"
  # unit tests may have generated this file
  if [ -f $BEHAVIOR_FILE ]; then
    SCRIPT=${TOPLEVEL}/tools/ai/plotBehaviors.py
    BEHAVIOR_OUT=behaviors.pdf
    if ${SCRIPT} -o ${BEHAVIOR_OUT} ${BEHAVIOR_FILE}; then
      FILES="${FILES} ${BEHAVIOR_OUT}"
    fi
  fi
fi

set -e

#  publish results
tar czf ${LOGZIP} ${LOG} ${XML} ${FILES}

# exit
exit $EXIT_STATUS
