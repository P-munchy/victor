"""
This file generated a c++ file, by automatically "instantiating templates"
To add some lines to this file, find replace (without the quotes) "\r\n" into "\\n' +\\\r\n            '"
"""

import sys
sys.path.insert(0, '../../coretech-common/python')
import generateArray_h

def __GenerateTopOfFile():
    topString = \
        '/*\n\n\n\n\n\n\n\n\n\nThis file was automatically generated by the python script generateArray_vision_h.py. Rather than editing this file, edit that script, then run "python generateArray_vision_h.py".\n\n\n\n\n\n\n\n\n\n*/\n\n';

    topString += \
        '#ifndef _ANKICORETECHEMBEDDED_VISION_ARRAY2D_VISION_H_\n' +\
        '#define _ANKICORETECHEMBEDDED_VISION_ARRAY2D_VISION_H_\n' +\
        '\n' +\
        '#include "anki/embeddedVision/config.h"\n' +\
        '#include "anki/embeddedCommon.h"\n' +\
        '#include "anki/embeddedVision/dataStructures_vision.h"\n' +\
        '\n' +\
        '#include <assert.h>\n' +\
        '#include <stdio.h>\n' +\
        '#include <stdlib.h>\n' +\
        '\n' +\
        '#if defined(ANKICORETECHEMBEDDED_USE_OPENCV)\n' +\
        '#include "opencv2/opencv.hpp"\n' +\
        '#endif\n' +\
        '\n' +\
        'namespace Anki\n' +\
        '{\n' +\
        '  namespace Embedded\n' +\
        '  {\n'

    return topString

def __GenerateBottomOfFile():
    bottomString = \
        '    } // namespace Embedded\n' +\
        '} //namespace Anki\n' +\
        '\n' +\
        '#endif // _ANKICORETECHEMBEDDED_VISION_ARRAY2D_VISION_H_\n'

    return bottomString

def GenerateAndWriteFile(filename = '../include/anki/embeddedVision/array2d_vision.h'):
    topString = __GenerateTopOfFile()

    methodsDeclarations = generateArray_h.__GenerateDeclarations(['Component1d', 'Component2d'], False)

    bottomString = __GenerateBottomOfFile()

    f = open(filename, 'w')
    f.write(topString)
    f.write(methodsDeclarations)
    f.write(bottomString)

    f.close()

if __name__ == "__main__":
    GenerateAndWriteFile()