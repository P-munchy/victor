{
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Selection
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  "selectionBehaviorChooserConfig" :
  {
    "type" : "selection"
  },
  
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  "meetCozmoBehaviorChooserConfig" : 
  {
    "type" : "simple",
    "behaviorGroups" : [ "MeetCozmo_Socialize" ]
  },
  
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  "vcBehaviorChooserConfig" : 
  {
    "type" : "vc"
  },
  
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Regular play / goals
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  "freeplayBehaviorChooserConfig" :
  {
    "type" : "goal",
    "supportsObjectTapInteractions": true,
    
    // parameters to decide between goals
    "desiredGoalNames" :
    {
      "faceAndCubeGoalName": "FP_Socialize",
      "faceOnlyGoalName": "FP_Socialize",
      "cubeOnlyGoalName": "FP_PlayAlone",
      "noFaceNoCubeGoalName": "FP_Hiking",
      "objectTapInteractionGoalName" : "ObjectTapInteraction"
    },
    // goals to create
    "goals" :
    [
      // Sparks only
      {
        "name" : "sparksRollBlock",
        "requireSpark":"RollCube",
        "priority": 0, // lower is better

        "behaviorChooser" :
        {
          "type" : "sparks",
          "minTimeSecs": 0,
          "maxTimeSecs": 80,
          "numberOfRepetitions": 1,
          "behaviorObjective": "BlockRolled",
          "softSparkTrigger": "SoftSparkUpgradeLift",
          // these groups are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksRollBlock" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      {
        "name" : "sparksStackBlock",
        "requireSpark":"StackTwoCubes",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
         "type" : "sparks",
         "minTimeSecs": 0,
         "maxTimeSecs": 80,
         "numberOfRepetitions": 1,
         "behaviorObjective": "StackedBlock",
         "softSparkTrigger": "SoftSparkUpgradeLift",
          // these groups are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksStackBlock" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
     {
       "name" : "sparksPeekABoo",
       "requireSpark":"PeekABoo",
       "priority": 0, // lower is better
       "behaviorChooser" :
       {
         "type" : "sparks",
         "minTimeSecs": 0,
         "maxTimeSecs": 30,
         "numberOfRepetitions": 1,
         "behaviorObjective": "PeekABooComplete",
         "softSparkTrigger": "SoftSparkUpgradeLift",
         "sparksSuccessTrigger": "", // don't play any animation
         "sparksFailTrigger": "", // don't play any animation
         // these groups are the behaviors that are allowed in this behavior chooser
         "behaviorGroups" : [ "SparksPeekABoo" ]
       },
       "goalStrategy":
       {
       "type" : "Spark"
       }
      },
      {
        "name" : "sparksPounceOnMotion",
        "requireSpark":"PounceOnMotionAction",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
         "type" : "sparks",
         "minTimeSecs": 0,
         "maxTimeSecs": 30,
         "numberOfRepetitions": 0,
         "behaviorObjective": "PouncedAndCaught",
         "softSparkTrigger": "SoftSparkUpgradeLift",
          // these groups are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksPounceOnMotion" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      {
        "name" : "sparksPopAWheelie",
        "requireSpark":"PopAWheelieAction",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
         "type" : "sparks",
         "minTimeSecs": 0,
         "maxTimeSecs": 60,
         "numberOfRepetitions": 1,
         "behaviorObjective": "PoppedWheelie",
         "softSparkTrigger": "SoftSparkUpgradeTracks",
          // these groups are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksPopAWheelie" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      {
        "name" : "sparksKnockOverCubes",
        "requireSpark":"KnockOverThreeCubeStack",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
         "type" : "sparks",
         "minTimeSecs": 0,
         "maxTimeSecs": 60,
         "numberOfRepetitions": 1,
         "behaviorObjective": "KnockedOverBlocks",
         "softSparkTrigger": "SoftSparkUpgradeTracks",
          // these groups are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksKnockOverCubes" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      {
        "name" : "SparksPickUpCube",
        "requireSpark":"PickupCube",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
         "type" : "sparks",
         "minTimeSecs": 0,
         "maxTimeSecs": 60,
         "numberOfRepetitions": 1,
         "behaviorObjective": "PickedUpAndPutDownBlock",
         "softSparkTrigger": "SoftSparkUpgradeLift",
          // these groups are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksPickUpCube" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      {
        "name" : "SparksWorkout",
        "requireSpark":"Workout",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
          "type" : "sparks",
          "minTimeSecs": 0,
          "maxTimeSecs": 60,
          "numberOfRepetitions": 1,
          "behaviorObjective": "PerformedWorkout",
          "softSparkTrigger": "SoftSparkUpgradeLift",
          // these are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksWorkout" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      {
        "name" : "SparksBuildPyramid",
        "requireSpark":"BuildPyramid",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
          "type" : "sparks",
          "minTimeSecs": 0,
          "maxTimeSecs": 300,
          "numberOfRepetitions": 1,
          "behaviorObjective": "BuiltPyramid",
          "softSparkTrigger": "SoftSparkUpgradeLift",
          "sparksSuccessTrigger": "", // don't play any animation
          "simpleChooserDelegate":
          {
            "type":"pyramid",
            "behaviorGroups" : [ "SetupBuildPyramid", "BuildPyramid" ]
          },
          // these are the behaviors that are allowed in this behavior chooser
          // no behavior groups are set here since this chooser delegates to the pyramid
          // chooser for simple behavior purposes
          "behaviorGroups" : [ ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        },
        "persistentComponentID" : "pyramidSparkUpdate"
      },
      {
        "name" : "SparksFistBump",
        "requireSpark":"FistBump",
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
          "type" : "sparks",
          "minTimeSecs": 0,
          "maxTimeSecs": 30,
          "numberOfRepetitions": 1,
          "behaviorObjective": "FistBumpComplete",
          "softSparkTrigger": "SoftSparkUpgradeLift",
          "sparksSuccessTrigger": "", // don't play any animation
          // these are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksFistBump" ]
        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      {
        "name" : "SparksGatherCubes",
        "requireSpark":"SparksGatherCubes",
        "priority": 0, // lower is better
        "driveStartAnimTrigger" : "HikingDrivingStart",
        "driveLoopAnimTrigger" : "HikingDrivingLoop",
        "driveEndAnimTrigger" : "HikingDrivingEnd",
        "behaviorChooser" :
        {
          "type" : "sparks",
          "minTimeSecs": 0,
          "maxTimeSecs": 240,
          "numberOfRepetitions": 1,
          "behaviorObjective": "GatheredCubes",
          "softSparkTrigger": "SoftSparkUpgradeLift",
          // delegate out chooser logic to gather cubes chooser
          "simpleChooserDelegate":
          {
            "type":"gather_cubes",
            "behaviorGroups" : [ "SparksGatherCubes" ]
          },
          // these are the behaviors that are allowed in this behavior chooser
          // no behavior groups are set here since this chooser delegates to the pyramid
          // chooser for simple behavior purposes
          "behaviorGroups" : [ ],
          "scoreBonusForCurrentBehavior" : {
            "nodes" : [
              { "x" :   0.0, "y" :  1.0 } // give this bonus to continue the same behavior unless score changes by that much
            ]
          }

        },
        "goalStrategy":
        {
          "type" : "Spark"
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      // Freeplay goals:
      // FP_Hiking          - when Cozmo is exploring its surroundings on his own
      // FP_PlayWithHumans  - when Cozmo requests games to play with the player
      // FP_PlayAlone       - when Cozmo does stuff in place on his own, showing off, playing with cubes, ..
      // FP_Pyramid         - when Cozmo knows where his cubes are and decides to build a pyramid
      // FP_Socialize       - when Cozmo wants to interact with faces and players, but without playing games
      // FP_NothingToDo     - fallback when Cozmo can't do anything else
      // FP_PutDownDispatch - when Cozmo is put down and wants to figure out what goal to go into
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        "name" : "FP_NothingToDo",
        "priority": 7, // lower is better
        "behaviorChooser" :
        {
          "type" : "simple",
          "behaviorGroups" : [ "FP_NothingToDo" ]
        },
        "goalStrategy":
        {
          "type" : "Simple",
          // goals need to give up so that higher priority can take over. Give up as soon as we finish one
          // iteration
          "goalShouldEndDurationSecs" : 1.0,
          "maxTimeWithoutInteractionSecs" : 0.0
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        "name" : "FP_Hiking",
        "priority": 6, // lower is better
        "driveStartAnimTrigger" : "HikingDrivingStart",
        "driveLoopAnimTrigger" : "HikingDrivingLoop",
        "driveEndAnimTrigger" : "HikingDrivingEnd",
        "infoAnalyzerProcess": "CalculateInterestingRegions", // update interesting regions during hiking
        "behaviorChooser" :
        {
          "type" : "simple",
          "behaviorGroups" : [ "FP_Hiking" ],

          "scoreBonusForCurrentBehavior" : {
            "nodes" : [
              { "x" :   0.0, "y" :  1.0 } // give this bonus to continue the same behavior unless score changes by that much
            ]
          }
        },
        "goalStrategy":
        {
          "type" : "Simple",
          "goalShouldEndDurationSecs" : 60.0, // hiking will automatically finish when it completes, so a higher max time is ok
          "cooldownSecs" : 15.0
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        // we want this play alone to be higher priority than exploring, but its activation is more
        // restrictive than PlayingAlone when there's nothing else to do
        "name" : "FP_PlayAlone",
        "priority": 5, // lower is better
        "behaviorChooser" :
        {
          "type" : "simple",
          "behaviorGroups" : [ "FP_PlayAlone" ]
        },
        "goalStrategy":
        {
          "type" : "Simple",
          // future: it might be a good idea to check how many behaviors are available to tune the duration based on that
          "goalShouldEndDurationSecs" : 25.0,
          "cooldownSecs" : 30.0
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        // pyramid is "cooler" than playing alone or hiking for the user, but it
        // has fairly restrictive runnability and a high cooldown
        "name" : "FP_Pyramid",
        "priority": 4, // lower is better
        "behaviorChooser" :
        {
          "type" : "pyramid",
          "behaviorGroups" : [ "SetupBuildPyramid", "BuildPyramid"  ]
        },
        "goalStrategy":
        {
          "type" : "Pyramid",
          // at least interact for this amount of time every time
          "goalCanEndDurationSecs" : 5.0,
     
          // stop running after this time (want to stop, don't actually stop until behavior is done)
          // NOTE: this should never really be hit, only if a bunch of new behaviors get added
          "goalShouldEndDurationSecs": 300.0,
          "cooldownSecs" : 300.0
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        "name" : "FP_PlayWithHumans",
        "priority": 3, // lower is better
        "behaviorChooser" :
        {
          "type" : "simple",
          "behaviorGroups" : [ "FP_PlayWithHumans" ]
        },
        "goalStrategy":
        {
          "type" : "FP_PlayWithHumans",
          // do not go back immediately even if still feels playful
          // (it should be possible to fire with other triggers, like pick up)
          "cooldownSecs" : 30.0,
          // require a minimum playful score
          "requiredMinStartMoodScore" : 0.5,
          "startMoodScorer" :
          [
            {
              // intended meaning: if Cozmo wants to play, this goal should become available, since it
              // merely asks the player to play
              "emotionType" : "WantToPlay",
              "scoreGraph" : {
                "nodes" : [
                  { "x" : -1.0, "y" : 0.0 },
                  { "x" :  0.0, "y" : 0.0 },  // if WantToPlay is below X, score low
                  { "x" :  0.0, "y" : 1.0 },  // if WantToPlay is above X, score high
                  { "x" :  1.0, "y" : 1.0 }
                ]
              },
              "trackDelta" : false
            }
          ]
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        "name" : "FP_Socialize",
        "priority": 2, // lower is better
        "behaviorChooser" :
        {
          "type" : "socialize",
          "behaviorGroups" : [ "FP_Socialize" ],

          "maxNumFindFacesSearchIterations": 2,
          "requiredObjectives": [
            {
              "objective": "PouncedAndCaught",
              "behaviorName": "pounceOnMotion_socialize",
              "ignoreIfLocked": "PounceOnMotionAction",
              "probabilityToRequireObjective": 0.5,
              "randomCompletionsNeededMin": 1,
              "randomCompletionsNeededMax": 3
              // NOTE: this behavior will quit on it's own if it gets "bored" due to lack of movement, so
              // these don't need to be met every time (but if they are met, socialize will end sooner)
            },
            {
              "objective": "PeekABooComplete",
              "behaviorName": "FPPeekABoo",
              "probabilityToRequireObjective": 0.8,
              // peek a boo has an aggressive cooldown on it, so rules itself out more often.
              "ignoreIfLocked": "PeekABoo"
            }
          ]
        },
        "goalStrategy":
        {
          "type" : "Simple",
          // at least interact for this amount of time every time
          "goalCanEndDurationSecs" : 5.0,
          
          // stop running after this time (want to stop, don't actually stop until behavior is done)
          // NOTE: this should never really be hit, only if a bunch of new behaviors get added
          "goalShouldEndDurationSecs": 300.0,
          
          // do not go back immediately even if still wants to social
          // (it should be possible to fire with other triggers, like pick up)
          "cooldownSecs" : 30.0,
          // require a minimum social score
          "requiredMinStartMoodScore" : 0.5,
          "startMoodScorer" :
          [
            {
              // intended meaning: if we need to socialize, trigger this goal, but if we do it a lot,
              // do not pick this goal, so we try to do something else instead
              "emotionType" : "Social",
              "scoreGraph" : {
                "nodes" : [
                  { "x" : -1.0, "y" : 1.0 },
                  { "x" :  0.3, "y" : 1.0 },  // if social is below X, score high
                  { "x" :  0.3, "y" : 0.0 },  // if social is above X, score low
                  { "x" :  1.0, "y" : 0.0 }
                ]
              },
              "trackDelta" : false
            }
          ]
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        // this goal is triggered after being put down from a pick up, so that Cozmo can select what to do next based on
        // what is around him (a face, a cube, ...)
        "name" : "FP_PutDownDispatch",
        "priority": 1, // lower is better
        "behaviorChooser" :
        {
          "type" : "simple",
          "behaviorGroups" : [ "FP_PutDownDispatch" ]
        },
        "goalStrategy":
        {
          "type" : "Simple",
          "requiredRecentOnTreadsEventSecs" : 5.0 // purposely high so that reactions don't prevent goal selection due to timeout
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        "name" : "ObjectTapInteraction",
        "requireObjectTapped": true,
        "priority": 0, // lower is better
        "behaviorChooser" :
        {
          "type" : "simple",
          "behaviorGroups" : [ "ObjectTapInteraction" ]
        },
        "goalStrategy":
        {
          "type" : "Object_Tap_Interaction"
        }
      }
    ]
  }
}
