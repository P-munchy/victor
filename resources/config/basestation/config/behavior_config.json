{
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Selection
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  "selectionBehaviorChooserConfig" :
  {
    "type" : "selection"
  },
  
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Demo
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  "demoBehaviorChooserConfig" :
  {
    // chooser type
    "type" : "demo",
    
    // this are the behaviors that are allowed in this behavior chooser
    "behaviorGroups" : [ "Demo" ],
  
    // By default all behaviors are enabled, the following are then applied in order
    // 1) anything belonging to a group in disabledGroups is disabled
    // 2) anything belonging to a group in enabledGroups is re-enabled (to e.g. re-enable a subgroup disabled in 1)
    // 3) anything belonging in disabledBehaviors is disabled (to e.g. disable a few specific behaviors)
    // 4) anything belonging in enabledBehaviors is re-enabled (to e.g. re-enable a few specific behaviors)
    
    "disabledGroups" : [
    ],
    "enabledGroups" : [
    ],
    "disabledBehaviors" : [
    ],
    "enabledBehaviors" : [
    ],
    // For current behavior, X = time running, Y = bonus (can be -ve, to encourage switching away from a long-running behavior)
    "scoreBonusForCurrentBehavior" : {
      "nodes" : [
        { "x" :   0.0, "y" :  0.0 }
      ]
    }
  },
  
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Regular play / goals
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  "freeplayBehaviorChooserConfig" :
  {
    "type" : "goal",
    
    // parameters to decide between goals
    "evaluator" :
    {

    },
    // goals to create
    "goals" :
    [
      // Sparks only
      {
        "name" : "sparksRollCube",
        "requireSpark":"RollCube",
        "behaviorChooser" :
        {
          "type" : "simple",
          // this are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksRollCube" ]
        }
      },
      {
        "name" : "sparksStackCube",
        "requireSpark":"StackTwoCubes",
        "behaviorChooser" :
        {
          "type" : "simple",
          // this are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "SparksStackCube" ]
        }
      },
     {
       "name" : "sparksPounceOnMotion",
       "requireSpark":"PounceOnMotionAction",
       "behaviorChooser" :
       {
         "type" : "simple",
         // this are the behaviors that are allowed in this behavior chooser
         "behaviorGroups" : [ "SparksPounceOnMotion" ]
       }
     },
     {
       "name" : "sparksPopAWheelie",
       "requireSpark":"PopAWheelieAction",
       "behaviorChooser" :
       {
         "type" : "simple",
         // this are the behaviors that are allowed in this behavior chooser
         "behaviorGroups" : [ "SparksPopAWheelie" ]
       }
     },
     {
       "name" : "sparksKnockOverCubes",
       "requireSpark":"KnockOverThreeCubeStack",
       "behaviorChooser" :
       {
         "type" : "simple",
         // this are the behaviors that are allowed in this behavior chooser
         "behaviorGroups" : [ "SparksKnockOverCubes" ]
       }
     },
     {
       "name" : "SparksPickUpCube",
       "requireSpark":"PickupCube",
       "behaviorChooser" :
       {
         "type" : "simple",
         // this are the behaviors that are allowed in this behavior chooser
         "behaviorGroups" : [ "SparksPickUpCube" ]
        }
     },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      // FreeplayHiking : goal to explore Cozmo's surroundings
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        "name" : "freeplayHiking",
        "behaviorChooser" :
        {
          "type" : "simple",
     
          // these are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "FreeplayHiking" ],

          "scoreBonusForCurrentBehavior" : {
            "nodes" : [
              { "x" :   0.0, "y" :  1.0 } // give this bonus to continue the same behavior unless score changes by that much
            ]
          }
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      // FreeplayOne : old freeplay with game requests
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
        "name" : "freeplayOne",
        "behaviorChooser" :
        {
          "type" : "simple",
     
          // these are the behaviors that are allowed in this behavior chooser
          "behaviorGroups" : [ "FreeplayOne" ],

          "scoreBonusForCurrentBehavior" : {
            "nodes" : [
              { "x" :   0.0, "y" :  0.0 }
            ]
          }
        }
      },
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      // New Behavior Selectors
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {
       "name" : "showOff",
       "requireSpark":"Invalid", // to make showOff not available in current freeplay goal selector. will remove soon
       "behaviorChooser" :
       {
         "type" : "simple",
         // this are the behaviors that are allowed in this behavior chooser
         "behaviorGroups" : [ "ShowOff" ]
       }
      },
      {
       "name" : "playful",
       "requireSpark":"Invalid", // to make playful not available in current freeplay goal selector. will remove soon
       "behaviorChooser" :
       {
         "type" : "simple",
         // this are the behaviors that are allowed in this behavior chooser
         "behaviorGroups" : [ "Playful" ]
       }
      }
    ]
  }
}
