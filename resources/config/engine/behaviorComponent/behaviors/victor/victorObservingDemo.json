{
  "behaviorID" : "VictorObservingDemo",
  "behaviorClass" : "VictorObservingDemo",


  "states": [
    {
      "name": "ObservingOnCharger",
      "behavior": "VictorDemoObservingOnChargerState",
      "visionModes": [ "DetectingMarkers", "DetectingFaces" ],
      "debugColor": "ORANGE"
    },
    {
      "name": "ObservingOnChargerRecentlyPlaced",
      "behavior": "VictorDemoObservingOnChargerState",
      "visionModes": [ "DetectingMarkers" ],
      "debugColor": "RED"
    },
    {
      "name": "DriveOffChargerIntoObserving",
      "behavior": "VictorDemoDriveOffChargerIntoObserving",
      "visionModes": [ "DetectingFaces", "DetectingMarkers" ]
    },
    {
      "name": "DriveOffChargerIntoFeeding",
      "behavior": "DriveOffCharger"
    },
    {
      "name": "DriveOffChargerIntoSocializing",
      "behavior": "DriveOffCharger"
    },
    {
      "name": "Observing",
      "behavior": "VictorDemoObservingState",
      "visionModes": [ "DetectingFaces", "DetectingMarkers" ],
      "debugColor": "BLUE"
    },
    {
      "name": "Feeding",
      "behavior": "VictorDemoFeedingState",
      "visionModes": [ "DetectingMarkers" ],
      "debugColor": "CYAN"
    },
    {
      "name": "Socializing",
      "behavior": "VictorDemoSocialize",
      "visionModes": [ "DetectingFaces" ],
      "debugColor": "MAGENTA"
    },
    {
      "name": "Napping",
      "behavior": "VictorDemoNappingState",
      "debugColor": "GREEN"
    },
    {
      "name": "WakingUp",
      "behavior": "VictorDemoNappingWakeUp"
    },
    {
      "name": "ReturningToCharger",
      "behavior": "FindAndGoToHome",
      "visionModes": [ "DetectingMarkers" ],
      "debugColor": "WHITE"
    },
    {
      "name": "FailedToFindCharger",
      "behavior": "VictorDemoFailedToFindCharger",
      "visionModes": [ "DetectingMarkers" ]
    }
  ],

  "transitionDefinitions": [
    {
      // TODO:(bn) split this up into multiple files?
      
      "from": "ObservingOnCharger",
      "interruptingTransitions": [
        {
          "to": "Observing",
          "preDefinedStrategyName": "OffCharger"
        },
        {
          "to": "DriveOffChargerIntoFeeding",
          "preDefinedStrategyName": "HungryAndCanEat"
        },
        {
          "to": "DriveOffChargerIntoSocializing",
          "preDefinedStrategyName": "CloseFaceForSocializing"
        }
      ],
      "nonInterruptingTransitions": [
        {
          "to": "DriveOffChargerIntoObserving",
          "strategy": {
            "strategyType": "InNeedsBracket",
            "need": "Energy",
            "needBracket": "Critical"
          }
        },
        {
          "to": "Napping",
          "preDefinedStrategyName": "WantsToSleep"
        }
      ]
    },

    {
      "from": "ObservingOnChargerRecentlyPlaced",

      "interruptingTransitions": [
        {
          "to": "Observing",
          "preDefinedStrategyName": "OffCharger"
        }
      ],
      "nonInterruptingTransitions": [
        {
          "to": "DriveOffChargerIntoFeeding",
          "preDefinedStrategyName": "HungryAndCanEat"
        },
        {
          "to": "ObservingOnCharger",
          "strategy": {
            "strategyType": "Timer",
            "timeout": 120.0
          }
        }
      ]
    },

    {
      "from": "Observing",
      "interruptingTransitions": [
        {
          "to": "ObservingOnChargerRecentlyPlaced",
          "preDefinedStrategyName": "OnCharger"
        },
        {
          "to": "Feeding",
          "preDefinedStrategyName": "HasCubeToEat"
        },
        {
          "to": "Socializing",
          "preDefinedStrategyName": "CloseFaceForSocializing"
        }
      ],
      "nonInterruptingTransitions": [
        {
          "to": "ReturningToCharger",
          "preDefinedStrategyName": "NeedsToCharge"
        }
      ]
    },

    {
      "from": "Feeding",
      "interruptingTransitions": [
        {
          "to": "ObservingOnChargerRecentlyPlaced",
          "preDefinedStrategyName": "OnCharger"
        }
      ],
      "nonInterruptingTransitions": [
        {
          "to": "Observing",
          "strategy": {
            "strategyType": "Timer",
            "timeout": 30.0
          }
        }
      ],
      "exitTransitions": [
        {
          "to": "Observing",
          "strategy": {
            "strategyType": "AlwaysRun" 
          }
        }
      ]
    },

    {
      "from": "Socializing",
      "interruptingTransitions": [
        {
          "to": "ObservingOnChargerRecentlyPlaced",
          "preDefinedStrategyName": "OnCharger"
        }
      ],
      "nonInterruptingTransitions": [
        {
          "to": "Feeding",
          "preDefinedStrategyName": "HungryAndCanEat"
        }
      ],
      "exitTransitions": [
        {
          "to": "Observing",
          "strategy": {
            "strategyType": "AlwaysRun" 
          }
        }
      ]
    },

    {
      "from": "DriveOffChargerIntoObserving",
      "exitTransitions": [
        {
          "to": "Socializing",
          "preDefinedStrategyName": "CloseFaceForSocializing"
        },
        {
          // fall back to observing if can't eat after driving off the charger
          "to": "Observing",
          "strategy": {
            "strategyType": "AlwaysRun"  // TODO:(bn) rename this type
          }
        }
      ]
    },

    {
      "from": "DriveOffChargerIntoFeeding",
      "exitTransitions": [
        {
          "to": "Feeding",
          "preDefinedStrategyName": "HasCubeToEat"
        },
        {
          // fall back to observing if can't eat after driving off the charger
          "to": "Observing",
          "strategy": {
            "strategyType": "AlwaysRun"  // TODO:(bn) rename this type
          } // TODO:(bn) add "default" of "AlwaysRun" if nothing is specified?
        }
      ]
    },

    {
      "from": "DriveOffChargerIntoSocializing",
      "exitTransitions": [
        {
          "to": "Socializing",
          "strategy": {
            "strategyType": "AlwaysRun"  // TODO:(bn) rename this type
          }
        }
      ]
    },
    
    {
      "from": "Napping",
      "interruptingTransitions": [
        {
          "to": "WakingUp",
          "preDefinedStrategyName": "OffCharger"
        }
      ],
      "nonInterruptingTransitions": [
        {
          "to": "WakingUp",
          "strategy": {
            "strategyType": "InNeedsBracket",
            "need": "Energy",
            "needBracket": "Critical"
          }
        }
      ]
    },

    {
      "from": "WakingUp",
      "exitTransitions": [
        {
          "to": "ObservingOnCharger",
          "strategy": {
            "strategyType": "AlwaysRun" 
          }
        }
      ]
    },

    {
      "from": "ReturningToCharger",
      "exitTransitions": [
        {
          "to": "ObservingOnChargerRecentlyPlaced",
          "preDefinedStrategyName": "OnCharger"
        },
        {
          // TODO:(bn) this doesn't work right now because FindAndGoToHome never stops unless it find a charger
          "to": "FailedToFindCharger",
          "strategy": {
            "strategyType": "AlwaysRun" 
          }
        }
      ]
    },

    {
      "from": "FailedToFindCharger",
      "interruptingTransitions": [
        {
          "to": "ReturningToCharger",
          "preDefinedStrategyName": "ChargerLocated"
        }
      ],
      "exitTransitions": [
        {
          "to": "ObservingOnChargerRecentlyPlaced",
          "preDefinedStrategyName": "OnCharger"
        },
        {
          "to": "Napping",
          "strategy": {
            "strategyType": "AlwaysRun" 
          }
        }
      ]
    }
  ]

}
