{
  "behaviorID" : "HeldInPalmResponses",
  "behaviorClass" : "DispatcherStrictPriorityWithCooldown",

  "associatedActiveFeature": "HeldInPalm",

  "interruptActiveBehavior": true,
  
  "behaviors": [
    {
      "behavior": "ReactToJoltInPalm",
      "cooldown_s": 0.0,
      "linkedBehaviorTimer": "ReactToJoltInPalm",
      "resetLinkedTimerOnDispatcherActivation": true
    },
    {
      "behavior": "SleepInAirAnimLoopInternal",
      "cooldown_s": 0.0
    },
    {
      "behavior": "LookingNervousAnimLoopInternal",
      "cooldown_s": 0.0
    },
    {
      "behavior": "NestleWhileHeldInPalmAnim",
      "cooldown_s": 10.0
    },
    {
      "behavior": "ObservingLookAtFacesInAir",
      "cooldown_s": 60.0
    },
    {
      "behavior": "LookInPlaceAtEdgeOfPalm",
      "cooldown_s": 0.0
    }
  ],

  "anonymousBehaviors": [
    {
      "behaviorName"     : "SleepInAirAnimLoopInternal",
      "behaviorClass"    : "AnimGetInLoop",
      
      "getIn"            : "GoToSleepGetIn",
      "loopAnimation"    : "GoToSleepSleeping",
      "getOut"           : "WakeupGetout",
      "loopEndCondition" : {
        // Requires lower threshold than that of ReactToTouchPetting
        // in order to trigger "gentle wake-up" animation
        "conditionType" : "RobotTouched",
        "minTouchTime" : 0.05
      },
      
      // Force the get-out animation to play to completion, so that Vector
      // continues playing the "WakeupGetout" animation even if
      // ReactToTouchPetting wants to quickly force a deactivation.
      "shouldForceLoopGetOutAnim"   : true,
      "shouldCheckEndCondDuringAnim": true,
      "lockTreads"                  : true,

      // Go to "sleep" in the user's palm after 5 minutes of held-in-palm
      // activity with no jolts or shocks experienced.
      "wantsToBeActivatedCondition": {
        "conditionType": "BehaviorTimer",
        "timerName": "ReactToJoltInPalm",
        "cooldown_s": 300.0
      }
    },
    {
      "behaviorName"  : "LookingNervousAnimLoopInternal",
      "behaviorClass" : "AnimSequence",
      // Cooldown will handle how often this nervous animation repeats once
      // it wants to be activated.
      "num_loops"        : 1,
      "animTriggers"     : ["HeldOnPalmLookingNervous"],
      
      "wantsToBeActivatedCondition": {
        "conditionType": "Compound",
        "not": {
          "conditionType": "Compound",
          "and": [
            {
              "conditionType": "RobotPitchInRange",
              "minPitchThreshold_deg": -20.0,
              "maxPitchThreshold_deg": 20.0
            },
            {
              "conditionType": "RobotRollInRange",
              "minRollThreshold_deg": -20.0,
              "maxRollThreshold_deg": 20.0
            }
          ]
        }
      }
    }
  ],

  "wantsToCancelSelfCondition": {
    "conditionType": "Compound",
    "or": [
      {
        "conditionType": "Compound",
        "not": {
          "conditionType": "OffTreadsState",
          "targetState": "InAir"
        }
      },
      {
        // The turn in place actions commanded by ObservingLookAtFacesInAir or
        // LookInPlaceHeadDownInAir might cause the robot to rotate into a position where
        // it could almost fall off the user's hand, so for now, stop all responses if more
        // than a single cliff is detected.
        "conditionType": "CliffDetected",
        "numCliffDetectionsToTrigger": 2
      }
    ]
  }
}
