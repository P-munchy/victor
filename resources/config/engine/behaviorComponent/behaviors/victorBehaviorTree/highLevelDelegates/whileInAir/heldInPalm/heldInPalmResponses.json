{
  "behaviorID" : "HeldInPalmResponses",
  "behaviorClass" : "DispatcherStrictPriorityWithCooldown",
  
  "associatedActiveFeature": "HeldInPalm",
  
  "interruptActiveBehavior": true,
  
  "behaviors": [
    {
      "behavior": "ReactToJoltInPalm",
      "cooldown_s": 0.0
    },
    {
      "behavior": "SleepInAirAnimLoopInternal",
      "cooldown_s": 0.0
    },
    {
      "behavior": "NestleAnimLoopInternal",
      "cooldown_s": 0.0
    },
    {
      "behavior": "ObservingLookAtFacesInAir",
      "cooldown_s": 60.0
    },
    {
      "behavior": "LookInPlaceHeadDownInAir",
      "cooldown_s": 0.0
    }
  ],
  
  "anonymousBehaviors": [
    {
      // TODO(GB): Create behavior for this, add wantsToBeActivatedCondition
      // for checking prox sensor and/or using hand detector
      "behaviorName": "DriveOffPalm",
      "behaviorClass" : "AnimSequence",

      "animTriggers": ["DriveOffChargerStraight"],

      "wantsToBeActivatedCondition": {
        "conditionType": "RobotPitchInRange",
        "minPitchThreshold_deg": -80.0,
        "maxPitchThreshold_deg": -30.0
      }
    },
    {
      "behaviorName": "NestleAnimLoopInternal",
      "behaviorClass"    : "AnimGetInLoop",
      
      // TODO(GB): Change to corresponding "nestle" animations
      // and add corresponding tracks to lock for those animations
      "getIn"            : "StuckOnEdgeGetIn",
      "loopAnimation"    : "StuckOnEdgeIdle",
      "getOut"           : "WakeupGetout",
      "emergencyGetOut"  : "WakeupGetout",
      
      "shouldCheckEndCondDuringAnim": false,
      "lockTreads"       : false,
      
      "wantsToBeActivatedCondition": {
        "conditionType": "OffTreadsState",
        "targetState": "InAir",
        "minTimeSinceChange_ms": 180000 // Nestle in the user's palm after 3 minutes
      }
    },
    {
      "behaviorName"  : "SleepInAirAnimLoopInternal",
      "behaviorClass" : "AnimSequence",
      "tracksToLock"     : ["HEAD_TRACK", "LIFT_TRACK", "BODY_TRACK"],
      "num_loops"        : 0, // Loop forever
      
      "animTriggers": [
        "GoToSleepGetIn",
        "GoToSleepSleeping"
      ],
      
      "wantsToBeActivatedCondition": {
        "conditionType": "OffTreadsState",
        "targetState": "InAir",
        "minTimeSinceChange_ms": 300000 // Go to "sleep" after 5 minutes
      }
    }
  ]
}
