project(robot)

add_library(robot_interface INTERFACE IMPORTED GLOBAL)
set_property(TARGET robot_interface
             PROPERTY INTERFACE_INCLUDE_DIRECTORIES
               ${CMAKE_CURRENT_SOURCE_DIR}/include
               ${CMAKE_CURRENT_SOURCE_DIR}/generated)

set(ROBOT_BUILD_TYPE "DEVELOPMENT")
if (MACOSX)
    set(ROBOT_BUILD_TYPE "SIMULATOR")
endif()
set(WARN_AUTOGENERATED "This file is autogenerated. Do not edit.")
configure_file(build_type.h.in ${CMAKE_CURRENT_SOURCE_DIR}/generated/build_type.h)

add_subdirectory(clad)

#
# HACK
#
# halstub is defined here, because supervisor depends on it, even though
# the source file lives in robot2. This will be cleaned up after we fork
# the victor repo
#
add_library(halstub STATIC
    ${CMAKE_SOURCE_DIR}/robot2/hal/src/halStubs.cpp
)

target_link_libraries(halstub
PRIVATE
    robot_interface
    robot_clad_cpplite
    ${PLATFORM_LIBS}
)

target_include_directories(halstub
PRIVATE
    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/robot2/syscon>
PUBLIC
    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/robot2/hal/include>
)

target_compile_definitions(halstub
PRIVATE
    -DCOZMO_ROBOT
)


include(anki_build_cxx_library)
anki_build_cxx_library(supervisor ${ANKI_SRCLIST_DIR} STATIC)

target_link_libraries(supervisor
PRIVATE
    halstub
    robot_interface
    robot_clad_cpplite
)

target_compile_definitions(supervisor
PRIVATE
    -DCOZMO_ROBOT
    -DCORETECH_ROBOT
    -DCOZMO_V2
    -D_DEBUG
    #-DUSING_ANDROID_PHONE # Uncomment if deploying on non-Cozmo android device
)

target_include_directories(supervisor
    PRIVATE
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/generated>
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/generated/clad>
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/generated/clad/robot>
)
