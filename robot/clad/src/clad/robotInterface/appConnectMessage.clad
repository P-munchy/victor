/** CLAD definition of the app connect message sent over bluetooth to activate the robot's wifi and authenticate the
 * device.
 */

namespace Anki {
namespace Cozmo {
namespace RobotInterface {

/** The end of this message should always be at a 4 byte alignment so the message can grow over time without breaking
 * backwards compatibility with older firmware. New members must be added at the end.
 * If you don't do this carefully, you will brick Cozmos in the field!
 */

enum uint_32 APFlags
{
  AP_AP_HIDDEN      = 0x00000001,
  AP_AP_DHCP_START  = 0x00000002,
  AP_AP_DHCP_GW     = 0x00000004,
  AP_ROUTE          = 0x00000008,
  AP_PHY_B          = 0x00000010,
  AP_PHY_G          = 0x00000020,
  AP_PHY_N          = 0x00000030,
  AP_PHY_MASK       = 0x00000030,
  AP_PHY_SHIFT      = 4, // Shift for AP_PHY flags
  AP_STATION        = 0x00000040,
  AP_SOFTAP         = 0x00000080,
  AP_STA_AP         = 0x000000C0,
  AP_OPMODE_MSK     = 0x000000C0,
  AP_OPMODE_SHIFT   = 6, // Shift for STATION and SOFTAP flags
  AP_STA_DHCP       = 0x00000100,
  AP_BSSID          = 0x00000200,
  AP_FIXED_RATE_STA = 0x00000400,
  AP_FIXED_RATE_AP  = 0x00000800,
  AP_FIXED_RATE_ALL = 0x00000C00,
  AP_FIXED_RATE_MSK = 0x00000C00,
  AP_FIXED_SHIFT    = 10, // Shift for AP_FIXED_RATE flags
  AP_LIMIT_RATES    = 0x00001000,
  AP_STA_AUTOCON    = 0x00002000,
  AP_STA_RECON      = 0x00004000,
  AP_STA_HIDDEN     = 0x00008000,
  AP_AP_DHCP_STOP   = 0x00010000,
  AP_APPLY_SETTINGS = 0xC0000000, // Apply wifi config now
}

/* This is the single message version which we are not going to use due to
 * message passing size limitations in the robot spine.
message AppConnectConfig
{
  uint_8  ssid[32],
  uint_8  psk[64],
  uint_16 beaconInterval,
  uint_8  channel,
  uint_8  maxConnections,
  uint_8  authMode,
  uint_8  wifiMinRate,
  uint_8  wifiMaxRate,
  uint_8  wifiFixedRate,
  APFlags apFlags,
  uint_32 robotIp,
  uint_32 robotNetmask,
  uint_32 robotGateway,
  uint_32 sessionToken[4],
}
*/

enum uint_8 APConfigStringID
{
  AP_AP_SSID_0, // We can't pass around strings longer than 16 bytes so break longer ones into 16 byte pieces
  AP_AP_SSID_1,
  AP_AP_PSK_0,
  AP_AP_PSK_1,
  AP_AP_PSK_2,
  AP_AP_PSK_3,
  AP_STA_SSID_0,
  AP_STA_SSID_1,
  AP_STA_PSK_0,
  AP_STA_PSK_1,
  AP_STA_PSK_2,
  AP_STA_PSK_3,
  AP_STA_BSSID,
  AP_STA_HOSTNAME,
  AP_SESSION_TOKEN,
}

message AppConnectConfigString
{
  APConfigStringID id,
  uint_8 data[16],
}

// FF is used as a don't set / leave default value
message AppConnectConfigFlags
{
  APFlags apFlags,
  uint_32 apDHCPLeaseTime = 0xFFFFffff, // Don't set, use Espressif default
  uint_16 beaconInterval = 0xFFFF, // miliseconds
  uint_8  rfMax_dBm = 0xFF,
  uint_8  channel = 1,
  uint_8  maxConnections = 3,
  uint_8  authMode = 3, // WPA2_PSK
  uint_8  apMinMaxSupRate = 0xFF,
  uint_8  wifiFixedRate = 0xFF,
  uint_8  staDHCPMaxTry = 0xFF,
}

message AppConnectConfigIPInfo
{
  uint_32 robotIp,
  uint_32 robotNetmask,
  uint_32 robotGateway,
  uint_8  ifId,
}

message AppConnectGetRobotIP
{
  uint_8 ifId
}

message WiFiOff
{
  bool sleep
}


} // RobotInterface
} // Cozmo
} // Anki
