/** Clad for messages from active objects to Engine or Game
 * ROBOT_CLAD_SHARED
 */

#include "clad/types/activeObjectTypes.clad"


namespace Anki {
namespace Cozmo {

// Indicates that an active object is advertising, but not connected.
// This message is received by engine and then translated into ObjectAvailable
// that is sent up to game.
message ObjectDiscovered
{
  uint_32     factory_id,
  ActiveObjectType  device_type,
  int_8       rssi
}

// Indicates that an active object has connected or disconnected
message ObjectConnectionState
{  
  uint_32 objectID,   // The active ID when coming from Robot, the BlockWorld ID when coming from Engine!
  uint_32 factoryID,
  ActiveObjectType  device_type,
  bool connected
}

// Identical to ObjectConnectionState except instead of going to the engine
// it goes to the K02 from the body
message ObjectConnectionStateToRobot
{
  uint_32 objectID,   // The active ID when coming from Robot, the BlockWorld ID when coming from Engine!
  uint_32 factoryID,
  ActiveObjectType  device_type,
  bool connected
}

message ObjectMoved
{
  uint_32     timestamp,
  uint_32     objectID, // The active ID when coming from Robot, the BlockWorld ID when coming from Engine!
  uint_32     robotID,
  ActiveAccel accel,
  UpAxis      axisOfAccel, // The direction of acceleration, reported when object starts moving, and every time the direction changes.
}

message ObjectStoppedMoving
{
  uint_32 timestamp,
  uint_32 objectID, // The active ID when coming from Robot, the BlockWorld ID when coming from Engine!
  uint_32 robotID,
}

message ObjectUpAxisChanged
{
  uint_32 timestamp,
  uint_32 objectID, // The active ID when coming from Robot, the BlockWorld ID when coming from Engine!
  uint_32 robotID,
  UpAxis  upAxis,
}

message ObjectTapped
{
  uint_32     timestamp,
  uint_32 objectID, // The active ID when coming from Robot, the BlockWorld ID when coming from Engine!
  uint_32 robotID,
  uint_8  numTaps,
  uint_8  tapTime,
  int_8   tapNeg,
  int_8   tapPos,
}

message ObjectPowerLevel
{
  uint_8  objectID,
  uint_8  batteryLevel
}

} // Cozmo
} // Anki
