/** Clad for messages from Engine or Game to robot regarding active objects.
 * ROBOT_CLAD_SHARED
 */

// NOTE: These messages are exposed to engine, game, and robot.
//       The meaning of objectID varies depending on which two systems the message
//       is travelling between.
//       Between engine and game, objectID refers to the standard Blockworld ObjectID.
//       Between engine and robot, objectID refers to activeID or slot.
//       If you are sending an EngineToRobot message you'll need to set objectID with the activeID.
//       If you are listening for messages from the robot, you'll typically be subscribing
//       to the EngineToGame version of the message (which takes the RobotToEngine version of the
//       message containing the activeID and translates it into objectID).
//       Be sure you know which version of the message you're dealing with!

#include "clad/types/ledTypes.clad"

namespace Anki {
namespace Cozmo {

  message SetAccessoryDiscovery
  {
    bool enable
  }

  message CubeID
  {
    uint_32    objectID,
    uint_8     rotationPeriod_frames,
  }

  message CubeLights
  {
    LightState lights[4],
  }

  message FlashObjectIDs
  {
    uint_32 objectID, // Place holder
  }

  message ObjectBeingCarried
  {
    uint_32 objectID,
    bool    isBeingCarried,
  }


  // Enable/Disable streaming of ObjectAccel messages for the specified object
  message StreamObjectAccel
  {
    uint_32 objectID,
    bool enable
  }

  /// XXX Temporary messages until more of cube control is moved into body
  structure SetPropState
  {
    uint_16 colors[4],
    uint_8  slot,
  }

  message KillBodyCode
  {

  }
  
} // Cozmo
} // Anki
