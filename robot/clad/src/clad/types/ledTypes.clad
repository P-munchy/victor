/** Types and structures for controlling LEDs on the robot and accessories
 * ROBOT_CLAD_SHARED
 */

namespace Anki {
namespace Cozmo {

// Layer to set the animations for
enum uint_8 BackpackLightLayer {
  BPL_USER = 0, // Do not change, lest be eaten by a grue
  BPL_ANIMATION,
  BPL_NUM_LAYERS
}

// Health / direction bar on the top of the backpack
// TODO: Need to sync with HAL::LEDId
enum uint_8 LEDId {
  LED_BACKPACK_0 = 0, // This light is reserved as system indicator
  LED_BACKPACK_1,     // Maps to V1 FRONT
  LED_BACKPACK_2,     // Maps to V1 MIDDLE
  LED_BACKPACK_3,     // Maps to V1 BACK

  NUM_BACKPACK_LEDS
}

// The color format is identical to HTML Hex Triplets (RGB)
enum uint_32 LEDColor {
  LED_CURRENT_COLOR = 0xffffffff, // Don't change color: leave as is
  LED_OFF =   0x000000,
  LED_RED =   0xff0000,
  LED_GREEN = 0x00ff00,
  LED_YELLOW= 0xffff00,
  LED_BLUE =  0x0000ff,
  LED_PURPLE= 0xff00ff,
  LED_CYAN =  0x00ffff,
  LED_WHITE = 0xffffff,
  LED_IR    = 0xff000000,
}

/** 16 bit shortened encoding of color
 * 1 bit for IR
 * 5 bits each for reg green blue
 */
enum uint_16 LEDColorEncoded {
  LED_ENC_OFF    = 0x0000,
  LED_ENC_RED    = 0x7c00,
  LED_ENC_GRN    = 0x03e0,
  LED_ENC_BLU    = 0x001f,
  LED_ENC_YELLOW = 0x7fe0,
  LED_ENC_PURPLE = 0x7c1f,
  LED_ENC_CYAN   = 0x03ff,
  LED_ENC_WHITE  = 0x7fff,
  LED_ENC_IR     = 0x8000,
}

enum uint_16 LEDColorEncodedShifts {
  LED_ENC_RED_SHIFT = 10,
  LED_ENC_GRN_SHIFT = 5,
  LED_ENC_BLU_SHIFT = 0,
  LED_ENC_IR_SHIFT  = 15
}

/** Light state information to transmit to the robot.
 * frames are assumed to be 30ms for this purpose.
 * Note this structure must align to allow arrays of it
 */
structure LightState
{
  uint_16  onColor = 0,
  uint_16  offColor = 0,
  uint_8   onFrames = 0,
  uint_8   offFrames = 0,
  uint_8   transitionOnFrames = 0,
  uint_8   transitionOffFrames = 0,
  int_16   offset = 0
}


// Specify LEDs, relative to block's top face (as determined by accelerometer)
// Looking down at top face (and through to bottom face), LEDs are
// numbered as follows, with each value corresponding to a bit in a u8:
// Note that the face labels are done such that they match the way Blocks'
// faces are defined (imagine the robot is looking along the x axis, facing
// the "Front" of the block, then it makes sense...)
// NOTE: In the orientation displayed below, the Top marker is rightside up on screen
//
//
//                 (Left)             Y
//                 ---1---            ^
//                |   ^   |           |
//        (Front) 2  TOP  0 (Back)    |
//                |       |           +----> X
//                 ---3---
//                 (Right)
//
//  When the block is on its side, FRONT is synonymous with the upper LED.
enum uint_8 WhichCubeLEDs
{
  NONE = 0x00,
  ALL  = 0xff,
  // Individual LEDs masked by bit
  BACK  = 0x01,
  LEFT  = 0x02,
  FRONT = 0x04,
  RIGHT = 0x08,
  // Corner groups
  FRONT_LEFT  = 0x06, // Front | left
  FRONT_RIGHT = 0x0c, // Front | right
  BACK_LEFT   = 0x03, // Back  | left
  BACK_RIGHT  = 0x09, // Back  | right

  // Charger lights
  CHARGER_BACK   = 0x01,
  CHARGER_MIDDLE = 0x02,
  CHARGER_FRONT  = 0x04
}

enum uint_8 MakeRelativeMode
{
  RELATIVE_LED_MODE_OFF = 0,
  RELATIVE_LED_MODE_BY_CORNER,
  RELATIVE_LED_MODE_BY_SIDE
}

} // namespace Cozmo
} // namespace Anki
