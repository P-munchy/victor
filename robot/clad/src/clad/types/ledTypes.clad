/** Types and structures for controlling LEDs on the robot and accessories
 * ROBOT_CLAD_SHARED
 */

namespace Anki {
namespace Cozmo {

// Health / direction bar on the top of the backpack
enum uint_8 LEDId {
  // Directional arrangement
  LED_BACKPACK_LEFT = 0,
  LED_BACKPACK_FRONT,
  LED_BACKPACK_MIDDLE,
  LED_BACKPACK_BACK,
  LED_BACKPACK_RIGHT,
  NUM_BACKPACK_LEDS
}

// The color format is identical to HTML Hex Triplets (RGB)
enum uint_32 LEDColor {
  LED_CURRENT_COLOR = 0xffffffff, // Don't change color: leave as is
  LED_OFF =   0x000000,
  LED_RED =   0xff0000,
  LED_GREEN = 0x00ff00,
  LED_YELLOW= 0xffff00,
  LED_BLUE =  0x0000ff,
  LED_PURPLE= 0xff00ff,
  LED_CYAN =  0x00ffff,
  LED_WHITE = 0xffffff,
  LED_IR    = 0xff000000,
}

/** 16 bit shortened encoding of color
 * 1 bit for IR
 * 5 bits each for reg green blue
 */
enum uint_16 LEDColorEncoded {
  LED_ENC_OFF    = 0x0000,
  LED_ENC_RED    = 0x7c00,
  LED_ENC_GRN    = 0x03e0,
  LED_ENC_BLU    = 0x001f,
  LED_ENC_YELLOW = 0x7fe0,
  LED_ENC_PURPLE = 0x7c1f,
  LED_ENC_CYAN   = 0x03ff,
  LED_ENC_WHITE  = 0x7fff,
  LED_ENC_IR     = 0x8000,
}

enum uint_16 LEDColorEncodedShifts {
  LED_ENC_RED_SHIFT = 10,
  LED_ENC_GRN_SHIFT = 5,
  LED_ENC_BLU_SHIFT = 0,
  LED_ENC_IR_SHIFT  = 15
}

/** Light state information to transmit to the robot.
 * frames are assumed to be 30ms for this purpose.
 * Note this structure must align to allow arrays of it
 */
structure LightState
{
  uint_16  onColor = 0,
  uint_16  offColor = 0,
  uint_8   onFrames = 0,
  uint_8   offFrames = 0,
  uint_8   transitionOnFrames = 0,
  uint_8   transitionOffFrames = 0,
  int_16   offset = 0
}


} // namespace Cozmo
} // namespace Anki
