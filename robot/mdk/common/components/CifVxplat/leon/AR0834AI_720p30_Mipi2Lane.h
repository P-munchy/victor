///
/// @file
/// @copyright All code copyright Movidius Ltd 2012, all rights reserved
///            For License Warranty see: common/license.txt
///
/// @brief
///
///Configuration file for Aptina AR0834AI
//# 3264x2448 @ x fps 10bit MIPI

#include "icMipiTC358746Defines.h"

#define RES_WIDTH		1280
#define RES_HEIGHT		720
#define LINEBUFF_HEIGHT	2

#define FOV_CENTER		((360/LINEBUFF_HEIGHT)) //HW spec
#define FOV3_START		((20000/LINEBUFF_HEIGHT)) //NOT USED

#define INTEG_TIME		0x180

const unsigned short APT_AR0834AI_cfg[][2] =
{
/*
==============
XMCLK=24,000,000
STATE= Master Clock, 292,800,000
==============
*/
		{0x301A, 0x0019}, // Reset
		{0x301A, 0x0218}, // Disable Streaming

		//Default_3R_6M60 Rev3
		{0x3042, 0x0000},
		{0x30C0, 0x1810}, // Reserved
		{0x30C8, 0x0018}, // Reserved
		{0x30D2, 0x0000}, // Reserved
		{0x30D4, 0x3030}, // Reserved
		{0x30D6, 0x2200}, // Reserved
		{0x30DA, 0x0080}, // Reserved
		{0x30DC, 0x0080}, // Reserved
		{0x30EE, 0x0340}, // Reserved
		{0x316A, 0x8800}, // Reserved
		{0x316C, 0x8200}, // Reserved
		{0x316E, 0x8200}, // Reserved
		{0x3172, 0x0286}, // Reserved
		{0x3174, 0x8000}, // Reserved
		{0x317C, 0xE103}, // Reserved
		{0x3180, 0xB080}, // Reserved
		{0x31E0, 0x0000}, // Reserved
		{0x31E6, 0x0000}, // Reserved
		{0x3ECC, 0x0056}, // Reserved
		{0x3ED0, 0xC86A}, // Reserved
		{0x3ED2, 0x66A6}, // Reserved
		{0x3ED4, 0x6ACC}, // Reserved
		{0x3ED8, 0x7488}, // Reserved
		{0x3EDA, 0x77CB}, // Reserved
		{0x3EDE, 0x6664}, // Reserved
		{0x3EE0, 0x26D5}, // Reserved
		{0x3EE4, 0x3548}, // Reserved
		{0x3EE6, 0xB10C}, // Reserved
		{0x3EE8, 0x6E79}, // Reserved
		{0x3EEA, 0xC8B9}, // Reserved
		{0x3EFA, 0xA656}, // Reserved
		{0x3EFE, 0x99CC}, // Reserved
		{0x3F00, 0x0028}, // Reserved
		{0x3F02, 0x0140}, // Reserved
		{0x3F04, 0x0002}, // Reserved
		{0x3F06, 0x0004}, // Reserved
		{0x3F08, 0x0008}, // Reserved
		{0x3F0A, 0x0B09}, // Reserved
		{0x3F0C, 0x0302}, // Reserved
		{0x3F10, 0x0505}, // Reserved
		{0x3F12, 0x0303}, // Reserved
		{0x3F14, 0x0101}, // Reserved
		{0x3F16, 0x2020}, // Reserved
		{0x3F18, 0x0404}, // Reserved
		{0x3F1A, 0x7070}, // Reserved
		{0x3F1C, 0x003A}, // Reserved
		{0x3F1E, 0x003C}, // Reserved
		{0x3F20, 0x0209}, // Reserved
		{0x3F2C, 0x2210}, // Reserved
		{0x3F38, 0x44A8}, // Reserved
		{0x3F40, 0x2020}, // Reserved
		{0x3F42, 0x0808}, // Reserved
		{0x3F44, 0x0101}, // Reserved

		//Sequencer v13p3
		// @00 Jump Table
		{0x3D00, 0x0471},
		{0x3D02, 0xC9FF},
		{0x3D04, 0xFFFF},
		{0x3D06, 0xFFFF},
		// @04 Read
		{0x3D08, 0x6F40},
		{0x3D0A, 0x140E},
		{0x3D0C, 0x23C2},
		{0x3D0E, 0x4120},
		{0x3D10, 0x3054},
		{0x3D12, 0x8042},
		{0x3D14, 0x00C0},
		{0x3D16, 0x8357},
		{0x3D18, 0x8464},
		{0x3D1A, 0x6455},
		{0x3D1C, 0x8023},
		{0x3D1E, 0x0065},
		{0x3D20, 0x6582},
		{0x3D22, 0x00C0},
		{0x3D24, 0x6E80},
		{0x3D26, 0x5051},
		{0x3D28, 0x8342},
		{0x3D2A, 0x8358},
		{0x3D2C, 0x6E80},
		{0x3D2E, 0x5F87},
		{0x3D30, 0x6382},
		{0x3D32, 0x5B82},
		{0x3D34, 0x5980},
		{0x3D36, 0x5A5E},
		{0x3D38, 0xBD59},
		{0x3D3A, 0x599D},
		{0x3D3C, 0x6C80},
		{0x3D3E, 0x6DA3},
		{0x3D40, 0x5080},
		{0x3D42, 0x5182},
		{0x3D44, 0x5880},
		{0x3D46, 0x6683},
		{0x3D48, 0x6464},
		{0x3D4A, 0x8030},
		{0x3D4C, 0x50DC},
		{0x3D4E, 0x6A83},
		{0x3D50, 0x6BAA},
		{0x3D52, 0x3094},
		{0x3D54, 0x6784},
		{0x3D56, 0x6565},
		{0x3D58, 0x814D},
		{0x3D5A, 0x686A},
		{0x3D5C, 0xAC06},
		{0x3D5E, 0x088D},
		{0x3D60, 0x4596},
		{0x3D62, 0x4585},
		{0x3D64, 0x6A83},
		{0x3D66, 0x6B06},
		{0x3D68, 0x08A9},
		{0x3D6A, 0x3090},
		{0x3D6C, 0x6764},
		{0x3D6E, 0x6489},
		{0x3D70, 0x6565},
		{0x3D72, 0x8158},
		{0x3D74, 0x8810},
		{0x3D76, 0xC0B1},
		{0x3D78, 0x5E96},
		{0x3D7A, 0x5382},
		{0x3D7C, 0x5E52},
		{0x3D7E, 0x6680},
		{0x3D80, 0x5883},
		{0x3D82, 0x6464},
		{0x3D84, 0x805B},
		{0x3D86, 0x815A},
		{0x3D88, 0x1D0C},
		{0x3D8A, 0x8055},
		{0x3D8C, 0x3060},
		{0x3D8E, 0x4182},
		{0x3D90, 0x42B2},
		{0x3D92, 0x4280},
		{0x3D94, 0x4081},
		{0x3D96, 0x4089},
		{0x3D98, 0x06C0},
		{0x3D9A, 0x4180},
		{0x3D9C, 0x4285},
		{0x3D9E, 0x4483},
		{0x3DA0, 0x4382},
		{0x3DA2, 0x6A83},
		{0x3DA4, 0x6B8D},
		{0x3DA6, 0x4383},
		{0x3DA8, 0x4481},
		{0x3DAA, 0x4185},
		{0x3DAC, 0x06C0},
		{0x3DAE, 0x8C30},
		{0x3DB0, 0xA467},
		{0x3DB2, 0x8142},
		{0x3DB4, 0x8265},
		{0x3DB6, 0x6581},
		{0x3DB8, 0x696A},
		{0x3DBA, 0x9640},
		{0x3DBC, 0x8240},
		{0x3DBE, 0x8906},
		{0x3DC0, 0xC041},
		{0x3DC2, 0x8042},
		{0x3DC4, 0x8544},
		{0x3DC6, 0x8343},
		{0x3DC8, 0x9243},
		{0x3DCA, 0x8344},
		{0x3DCC, 0x8541},
		{0x3DCE, 0x8106},
		{0x3DD0, 0xC081},
		{0x3DD2, 0x6A83},
		{0x3DD4, 0x6B82},
		{0x3DD6, 0x42A0},
		{0x3DD8, 0x4084},
		{0x3DDA, 0x38A8},
		{0x3DDC, 0x3300},
		{0x3DDE, 0x2830},
		{0x3DE0, 0x7000},
		{0x3DE2, 0x6F40},
		{0x3DE4, 0x140E},
		{0x3DE6, 0x23C2},
		{0x3DE8, 0x4182},
		{0x3DEA, 0x4200},
		{0x3DEC, 0xC05D},
		{0x3DEE, 0x805A},
		{0x3DF0, 0x8057},
		{0x3DF2, 0x8464},
		{0x3DF4, 0x8055},
		{0x3DF6, 0x8664},
		{0x3DF8, 0x8065},
		{0x3DFA, 0x8865},
		{0x3DFC, 0x8254},
		{0x3DFE, 0x8058},
		{0x3E00, 0x8000},
		{0x3E02, 0xC086},
		{0x3E04, 0x4282},
		{0x3E06, 0x1030},
		{0x3E08, 0x9C5C},
		{0x3E0A, 0x806E},
		{0x3E0C, 0x865B},
		{0x3E0E, 0x8063},
		{0x3E10, 0x9E59},
		{0x3E12, 0x8C5E},
		{0x3E14, 0x8A6C},
		{0x3E16, 0x806D},
		{0x3E18, 0x815F},
		{0x3E1A, 0x6061},
		{0x3E1C, 0x8810},
		{0x3E1E, 0x3066},
		{0x3E20, 0x836E},
		{0x3E22, 0x8064},
		{0x3E24, 0x8764},
		{0x3E26, 0x3050},
		{0x3E28, 0xD36A},
		{0x3E2A, 0x6BAD},
		{0x3E2C, 0x3094},
		{0x3E2E, 0x6784},
		{0x3E30, 0x6582},
		{0x3E32, 0x4D83},
		{0x3E34, 0x6530},
		{0x3E36, 0x50A7},
		{0x3E38, 0x4306},
		{0x3E3A, 0x008D},
		{0x3E3C, 0x459A},
		{0x3E3E, 0x6A6B},
		{0x3E40, 0x4585},
		{0x3E42, 0x0600},
		{0x3E44, 0x8143},
		{0x3E46, 0x8A6F},
		{0x3E48, 0x9630},
		{0x3E4A, 0x9067},
		{0x3E4C, 0x6488},
		{0x3E4E, 0x6480},
		{0x3E50, 0x6582},
		{0x3E52, 0x10C0},
		{0x3E54, 0x8465},
		{0x3E56, 0xEF10},
		{0x3E58, 0xC066},
		{0x3E5A, 0x8564},
		{0x3E5C, 0x8117},
		{0x3E5E, 0x0080},
		{0x3E60, 0x200D},
		{0x3E62, 0x8018},
		{0x3E64, 0x0C80},
		{0x3E66, 0x6430},
		{0x3E68, 0x6041},
		{0x3E6A, 0x8242},
		{0x3E6C, 0xB242},
		{0x3E6E, 0x8040},
		{0x3E70, 0x8240},
		{0x3E72, 0x4C45},
		{0x3E74, 0x926A},
		{0x3E76, 0x6B9B},
		{0x3E78, 0x4581},
		{0x3E7A, 0x4C40},
		{0x3E7C, 0x8C30},
		{0x3E7E, 0xA467},
		{0x3E80, 0x8565},
		{0x3E82, 0x8765},
		{0x3E84, 0x3060},
		{0x3E86, 0xD36A},
		{0x3E88, 0x6BAC},
		{0x3E8A, 0x6C32},
		{0x3E8C, 0xA880},
		{0x3E8E, 0x2830},
		{0x3E90, 0x7000},
		{0x3E92, 0x8040},
		{0x3E94, 0x4CBD},
		{0x3E96, 0x000E},
		{0x3E98, 0xBE44},
		{0x3E9A, 0x8844},
		{0x3E9C, 0xBC78},
		{0x3E9E, 0x0900},
		{0x3EA0, 0x8904},
		{0x3EA2, 0x8080},
		{0x3EA4, 0x0240},
		{0x3EA6, 0x8609},
		{0x3EA8, 0x008E},
		{0x3EAA, 0x0900},
		{0x3EAC, 0x8002},
		{0x3EAE, 0x4080},
		{0x3EB0, 0x0480},
		{0x3EB2, 0x887D},
		{0x3EB4, 0xA086},
		{0x3EB6, 0x0900},
		{0x3EB8, 0x877A},
		{0x3EBA, 0x000E},
		{0x3EBC, 0xC379},
		{0x3EBE, 0x4C40},
		{0x3EC0, 0xBF70},
		{0x3EC2, 0x0000},
		{0x3EC4, 0x0000},
		{0x3EC6, 0x0000},
		{0x3EC8, 0x0000},
		{0x3ECA, 0x0000},

		//PLL Configuration
		{0x0300, 0x5},		//VT_PIX_CLK_DIV=5
		{0x0302, 0x1},		//VT_SYS_CLK_DIV=1
		{0x0304, 0x4},		//PRE_PLL_CLK_DIV=4 //Note: 24MHz/4=6MHz
		{0x0306, 0x7A},		//PLL_MULTIPLIER=122 //Note: Running at 732MHz
		{0x0308, 0xA},		//OP_PIX_CLK_DIV=10
		{0x030A, 0x1},		//OP_SYS_CLK_DIV=1
		{0x3064, 0x7800},

		///MIPI Timings
		{0x31AE, 0x0202},
		{0x31B0, 0x60},
		{0x31B2, 0x42},
		{0x31B4, 0x4C36},
		{0x31B6, 0x5218},
		{0x31B8, 0x404A},
		{0x31BA, 0x28A},
		{0x31BC, 0x08},
/*
		//MIPI Timings HS
		{0x31AE, 0x0202},
		{0x31B0, 0x42},
		{0x31B2, 0x18},
		{0x31B4, 0x7A68},
		{0x31B6, 0x629F},
		{0x31B8, 0x404C},
		{0x31BA, 0x030D},
		{0x31BC, 0x800A},
*/

		//Frame Timing
		{0x0342, 0x2500	},			//LINE_LENGTH_PCK 9932
		{0x0340, 0x408},			//FRAME_LENGTH_LINES 1031
		{0x0202, INTEG_TIME},			//COARSE_INTEGRATION_TIME 1031

		//Array Readout Settings
		{0x0344, 0x170},			//X_ADDR_START
		{0x0348, 0xB6F},			//X_ADDR_END
		{0x0346, 0x1e8},			//Y_ADDR_START
		{0x034A, 0x787},			//Y_ADDR_END
		{0x034C, 0x500},			//X_OUTPUT_SIZE
		{0x034E, 0x2D0},			//Y_OUTPUT_SIZE
		{0x3040, 0x40C3},			//X_ODD_INC and Y_ODD_INC

		//Sub-sampling
		{0x0400, 0x0},			 	//Scaling Enabling: 0= disable, 1= x-dir, 2= xy-dir
		{0x0402, 0x0},			 	//Co-Site Scaling
		{0x0404, 0x14},				//Scale_M = 20
		{0x0408, 0x1414},
		{0x040A, 0x18C},
		{0x306E, 0x9080	},			//Data Path Select

		//Start Streaming
		//{0x3070, 0x2},				// Test pattern SET
		{0x301A, 0x1C},				// Enable Streaming and mask bad frame
};

CamSpec APT_AR0834AI = {
    {
            .height     = 720,
            .width      = 1280,
            .hBackP    	= 0,
            .hFrontP    = 0,
            .vBackP     = 0,
            .vFrontP    = 0
    },
    .idealRefFreq        = 24,
    .cfgDelay            = 400000,
    .sensorI2CAddress    = 0x36,
    .regNumber           = sizeof(APT_AR0834AI_cfg)/(sizeof(unsigned short[2])),
    .regSize             = 2,
    .regValues           = APT_AR0834AI_cfg
};

u64 mipiCfg[] = {
		MIPIB_SysCtl__Sreset__Reset_operation,
		        MIPIB_SysCtl__Sreset__Normal_operation,
		        MIPIB_SysCtl__SLEEP__Sleep_mode,
		        // note: the PLL can be safely configured while in sleep mode

		        // 624 MHz PLL clock
		        // Mclk out: 24 mhz
		        // Pclk: 78 mhz

		        ( MIPIB_PLLCtl0__PLL_PRD(2  - 1)
		        | MIPIB_PLLCtl0__PLL_FBD(52 - 1) ),

		        ( MIPIB_PLLCtl1__PLL_FRS__500M_1G_HSCK_freq
		        | MIPIB_PLLCtl1__PLL_LBWS__PERCENT_50
		        | MIPIB_PLLCtl1__PLL_LFBREN__no_oscillation
		        | MIPIB_PLLCtl1__PLL_BYPCKEN__Normal_operation
		        | MIPIB_PLLCtl1__PLL_CKEN__clocks_on
		        | MIPIB_PLLCtl1__PLL_RESETB__Normal_operation
		        | MIPIB_PLLCtl1__PLL_EN__on
		        ),

		        ( MIPIB_ClkCtl__MclkRefDiv__DIV2
		        | MIPIB_ClkCtl__SclkDiv__DIV8
		        | MIPIB_ClkCtl__PPIclkDiv__DIV8),

		        ( MIPIB_MclkCtl__mclk_high(7 - 1)
		        | MIPIB_MclkCtl__mclk_low(6 - 1) ),

		        MIPIB_SysCtl__SLEEP__Normal_operation,

		        ( MIPIB_PHYTimDly__DSettle(8)
		        | MIPIB_PHYTimDly__Tc_term_sel__please_set_to_1
		        | MIPIB_PHYTimDly__Td_term_sel__HS_termination_immediately ),

		        MIPIB_DataFmt__PDFormat__RAW10,

		        MIPIB_FiFoCtl__FifoLevel(2),

		        ( MIPIB_ConfCtl__Auto__INCREMENT
		        | MIPIB_ConfCtl__Bt656En__Disable
		        | MIPIB_ConfCtl__DataLanes__NR_2
		        | MIPIB_ConfCtl__HsyncP__active_high
		        | MIPIB_ConfCtl__INTE2n__Normal
		        | MIPIB_ConfCtl__PCLKP__Normal
		        | MIPIB_ConfCtl__PPEn__Enable
		        | MIPIB_ConfCtl__PdataF__Mode_0
		        | MIPIB_ConfCtl__TriEn__Disable
		        | MIPIB_ConfCtl__VsyncP__active_high ),
};
