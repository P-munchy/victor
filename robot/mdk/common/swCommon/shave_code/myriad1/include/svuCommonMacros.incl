; ///
; /// @file
; /// @copyright All code copyright Movidius Ltd 2012, all rights reserved.
; ///            For License Warranty see: common/license.txt
; ///
; /// @brief
; ///

.version 00.51.04

.ifndef SVU_COMMON_MACROS
.set SVU_COMMON_MACROS

;stack manipulation macros

.macro PUSH_V_REG VREG
lsu0.sto64.h \VREG,StackPtr,-8 || lsu1.sto64.l \VREG,StackPtr,-16 || iau.incs StackPtr,-16
.endm

.macro POP_V_REG VREG 
lsu0.ldo64.l \VREG,StackPtr,0 || lsu1.ldo64.h \VREG, StackPtr, 8 || iau.incs StackPtr,16
.endm

.macro PUSH_2_32BIT_REG REG1, REG2
lsu0.sto32 \REG1,StackPtr,-4 || lsu1.sto32 \REG2,StackPtr,-8 || iau.incs StackPtr,-8
.endm

.macro POP_2_32BIT_REG REG1, REG2
lsu0.ldo32 \REG2,StackPtr,0 || lsu1.ldo32 \REG1,StackPtr,4 || iau.incs StackPtr,8
.endm

.macro PUSH_1_32BIT_REG REG
lsu0.sto32 \REG,StackPtr,-4 || iau.incs StackPtr,-4
.endm

.macro POP_1_32BIT_REG REG
lsu0.ldo32 \REG,StackPtr,0 || iau.incs StackPtr,4
.endm

; define macro to wait for mutex complete
; note that this macro is independent of the mutex number requested
.macro request_mutex mutex_nmb_reg, i_temp_reg
  lsu0.ldil \i_temp_reg, MUTEX_REQUEST_0
  iau.or \mutex_nmb_reg, \mutex_nmb_reg, \i_temp_reg
  lsu0.sta32 \mutex_nmb_reg, SLICE_LOCAL, MUTEX_CTRL_ADDR
  nop
  nop
  ;Init to something harmless
  lsu0.ldil \i_temp_reg, 0x0020
  cmu.cmti.bitp \i_temp_reg, P_GPI
  peu.pcxc 0x6, 0x1 || cmu.cmti.bitp \i_temp_reg, P_GPI || bru.rpim 0
.endm

.macro release_mutex mutex_nmb_reg, i_temp_reg
  lsu1.ldil \i_temp_reg, MUTEX_RELEASE_0
  iau.or \mutex_nmb_reg, \mutex_nmb_reg, \i_temp_reg
  lsu1.sta32 \i_temp_reg, SLICE_LOCAL, MUTEX_CTRL_ADDR
  nop
  nop
.endm

.endif