#VRML_SIM V7.3.0 utf8

PROTO Platform [
  field SFString name "Platform000"
  field SFFloat length .120
  field SFFloat width  .120
  field SFFloat height .044
  field SFString type "1" # PlatformType
  field SFVec3f translation 0 0 0.022
  field SFRotation rotation 0 0 1 0
  field SFFloat density 250
  field SFColor platformColor .2 .2 .2
  field SFBool  useWhiteMarkerBackgrounds TRUE
  field SFString markerImg ""  # Image path relative to textures/
]
{
Solid {

  # Set markerURL
  %{
    markerURL = ""
    if fields.markerImg ~= "" then
      markerURL = "textures/" .. fields.markerImg
    end 
  }%

  name IS name
  model IS type
  translation IS translation
  rotation IS rotation
  contactMaterial "cmat_block"
  children [
        
    # Front Face
    VisionMarker {
      rotation 0 0 1 1.5708
      translation %{=-fields.length/2}% 0 0
      image "symbols/inverted/rampFront.png"
      isDockable FALSE
    }
    
    # Back Face
    VisionMarker { 
      rotation 0 0 1 -1.5708
      translation %{=fields.length/2}% 0 0
      image "symbols/inverted/rampBack.png"
      isDockable FALSE
    }
          
    # Right Face
    VisionMarker {
      rotation 0 0 1 3.1415
      translation 0 %{=fields.width/2}% 0
      image "symbols/inverted/rampRight.png"
    }
    
    # Left Face
    VisionMarker {
      rotation 0 0 1 0
      translation 0 %{=-fields.width/2}% 0
      image "symbols/inverted/rampLeft.png"
    }
    
    # Top Face(s)
		VisionMarker {
			rotation 1 0 0 1.5708
			translation 0 0 %{=fields.height/2}% 
			image IS "letters/inverted/A.png"
		}

#     Connector {
#       name "leftConnector"
#       translation 0.01 %{=-fields.width/2}% 0
#       rotation 1 0 0 1.57079
#       model "magnetic"
#       type "passive"
#       autoLock TRUE
#     }
#     Connector {
#       name "rightConnector"
#       translation 0.01 %{=fields.width/2}% 0
#       rotation 1 0 0 -1.57079
#       model "magnetic"
#       type "passive"
#       autoLock TRUE
#     }

    DEF PlatformShape Group {
      children [
        Shape {
          appearance Appearance {
            material Material {
              diffuseColor IS platformColor
            }
          }
          geometry Box {
            size %{=fields.length}% %{=fields.width}% %{=fields.height}%
          }
        }
      ] # PlatformShape Children
    } # PlatformShape Group
    

  ] # Block Children
  
  boundingObject USE PlatformShape
  
  physics Physics {
    density IS density
  }
} # Solid (the actual platform)

  
} # PROTO


