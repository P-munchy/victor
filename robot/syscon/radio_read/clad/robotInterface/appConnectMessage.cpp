// Autogenerated C++ Lite (embedded) message buffer code.
// Source: clad/robotInterface/appConnectMessage.clad
// Full command line: ../../tools/message-buffers/emitters/CPPLite_emitter.py --max-message-size 1400 -C ./src/ -I -o ../generated/clad//robot/ clad/robotInterface/appConnectMessage.clad

#include "clad/robotInterface/appConnectMessage.h"

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

#ifdef CLAD_DEBUG
const char* APFlagsToString(APFlags m)
{
  switch(m) {
    case AP_AP_HIDDEN:
      return "AP_AP_HIDDEN";
    case AP_AP_DHCP_START:
      return "AP_AP_DHCP_START";
    case AP_AP_DHCP_GW:
      return "AP_AP_DHCP_GW";
    case AP_ROUTE:
      return "AP_ROUTE";
    case AP_PHY_B:
      return "AP_PHY_B";
    case AP_PHY_G:
      return "AP_PHY_G";
    case AP_PHY_N:
      return "AP_PHY_N";
    case AP_STATION:
      return "AP_STATION";
    case AP_SOFTAP:
      return "AP_SOFTAP";
    case AP_STA_AP:
      return "AP_STA_AP";
    case AP_OPMODE_SHIFT:
      return "AP_OPMODE_SHIFT";
    case AP_STA_DHCP:
      return "AP_STA_DHCP";
    case AP_BSSID:
      return "AP_BSSID";
    case AP_FIXED_RATE_STA:
      return "AP_FIXED_RATE_STA";
    case AP_FIXED_RATE_AP:
      return "AP_FIXED_RATE_AP";
    case AP_FIXED_RATE_ALL:
      return "AP_FIXED_RATE_ALL";
    case AP_FIXED_SHIFT:
      return "AP_FIXED_SHIFT";
    case AP_LIMIT_RATES:
      return "AP_LIMIT_RATES";
    case AP_STA_AUTOCON:
      return "AP_STA_AUTOCON";
    case AP_STA_RECON:
      return "AP_STA_RECON";
    case AP_STA_HIDDEN:
      return "AP_STA_HIDDEN";
    case AP_AP_DHCP_STOP:
      return "AP_AP_DHCP_STOP";
    case AP_APPLY_SETTINGS:
      return "AP_APPLY_SETTINGS";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

#ifdef CLAD_DEBUG
const char* APConfigStringIDToString(APConfigStringID m)
{
  switch(m) {
    case AP_AP_SSID_0:
      return "AP_AP_SSID_0";
    case AP_AP_SSID_1:
      return "AP_AP_SSID_1";
    case AP_AP_PSK_0:
      return "AP_AP_PSK_0";
    case AP_AP_PSK_1:
      return "AP_AP_PSK_1";
    case AP_AP_PSK_2:
      return "AP_AP_PSK_2";
    case AP_AP_PSK_3:
      return "AP_AP_PSK_3";
    case AP_STA_SSID_0:
      return "AP_STA_SSID_0";
    case AP_STA_SSID_1:
      return "AP_STA_SSID_1";
    case AP_STA_PSK_0:
      return "AP_STA_PSK_0";
    case AP_STA_PSK_1:
      return "AP_STA_PSK_1";
    case AP_STA_PSK_2:
      return "AP_STA_PSK_2";
    case AP_STA_PSK_3:
      return "AP_STA_PSK_3";
    case AP_STA_BSSID:
      return "AP_STA_BSSID";
    case AP_STA_HOSTNAME:
      return "AP_STA_HOSTNAME";
    case AP_SESSION_TOKEN:
      return "AP_SESSION_TOKEN";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

