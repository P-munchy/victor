// Autogenerated C++ Lite (embedded) message buffer code.
// Source: clad/robotInterface/bleMessages.clad
// Full command line: ../../tools/message-buffers/emitters/CPPLite_emitter.py --max-message-size 1400 -C ./src/ -I -o ../generated/clad//robot/ clad/robotInterface/bleMessages.clad

#include "clad/robotInterface/bleMessages.h"

namespace Anki {

namespace Cozmo {

namespace BLE {

#ifdef CLAD_DEBUG
const char* BluetoothConstantsToString(BluetoothConstants m)
{
  switch(m) {
    case COZMO_FRAME_DATA_LENGTH:
      return "COZMO_FRAME_DATA_LENGTH";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

#ifdef CLAD_DEBUG
const char* BluetoothConnectionStateToString(BluetoothConnectionState m)
{
  switch(m) {
    case BLE_CONNECTED:
      return "BLE_CONNECTED";
    case BLE_DISCONNECTED_NORMALLY:
      return "BLE_DISCONNECTED_NORMALLY";
    case BLE_CANNOT_CONFIGURE_CONN_PARAMS:
      return "BLE_CANNOT_CONFIGURE_CONN_PARAMS";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

#ifdef CLAD_DEBUG
const char* PayloadFlagsToString(PayloadFlags m)
{
  switch(m) {
    case START_OF_MESSAGE:
      return "START_OF_MESSAGE";
    case END_OF_MESSAGE:
      return "END_OF_MESSAGE";
    case MESSAGE_ENCRYPTED:
      return "MESSAGE_ENCRYPTED";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

} // namespace BLE

} // namespace Cozmo

} // namespace Anki

