// Autogenerated C++ Lite (embedded) message buffer code.
// Source: clad/robotInterface/messageEngineToRobot.clad
// Full command line: ./cozmo_CPPLite_send_helper_emitter.py -C ./src/ -I -o ../generated/clad/robot/ clad/robotInterface/messageEngineToRobot.clad

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace AnimKeyFrame {

} // namespace AnimKeyFrame

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

namespace OTA {

} // namespace OTA

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace NVStorage {

} // namespace NVStorage

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace NVStorage {

} // namespace NVStorage

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

inline bool SendMessage(const Anki::Cozmo::RobotInterface::BackpackLights& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 3); }
inline bool SendMessage(const Anki::Cozmo::CubeLights& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 4); }
inline bool SendMessage(const Anki::Cozmo::SetPropSlot& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 5); }
inline bool SendMessage(const Anki::Cozmo::KillBodyCode& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 6); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SetBodyRadioMode& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 7); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::NVReadResultToBody& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 8); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::NVOpResultToBody& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 9); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SendDTMCommand& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 10); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SetHeadlight& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 11); }
inline bool SendMessage(const Anki::Cozmo::SetCubeGamma& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 12); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::OTA::BodyRestart& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 13); }
inline bool SendMessage(const Anki::Cozmo::GetBodyVersion& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 37); }
inline bool SendMessage(const Anki::Cozmo::BLE_RecvHello& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 38); }
inline bool SendMessage(const Anki::Cozmo::BLE_EnterPairing& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 39); }
inline bool SendMessage(const Anki::Cozmo::BLE_SendHello& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 40); }
inline bool SendMessage(const Anki::Cozmo::BLE_EncodedKey& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 41); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppConnectRobotIP& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 46); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppConnectConfigResult& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 47); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::OTA::EnterRecoveryMode& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 48); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::RadioState& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 49); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::DriveWheels& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 50); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::DriveWheelsCurvature& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 51); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::MoveLift& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 52); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::MoveHead& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 53); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SetLiftHeight& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 54); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SetHeadAngle& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 55); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::HeadAngleUpdate& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 56); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SetBodyAngle& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 57); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::TurnInPlaceAtSpeed& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 58); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::StopAllMotors& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 59); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::ClearPath& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 60); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppendPathSegmentLine& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 61); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppendPathSegmentArc& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 62); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppendPathSegmentPointTurn& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 63); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::TrimPath& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 64); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::ExecutePath& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 65); }
inline bool SendMessage(const Anki::Cozmo::DockWithObject& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 66); }
inline bool SendMessage(const Anki::Cozmo::AbortDocking& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 67); }
inline bool SendMessage(const Anki::Cozmo::PlaceObjectOnGround& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 68); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AbsoluteLocalizationUpdate& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 69); }
inline bool SendMessage(const Anki::Cozmo::StartControllerTestMode& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 70); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::ControllerGains& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 71); }
inline bool SendMessage(const Anki::Cozmo::DockingErrorSignal& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 72); }
inline bool SendMessage(const Anki::Cozmo::CarryStateUpdate& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 73); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::ImuRequest& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 74); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SyncTime& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 75); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::ImageRequest& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 76); }
inline bool SendMessage(const Anki::Cozmo::FlashObjectIDs& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 77); }
inline bool SendMessage(const Anki::Cozmo::ObjectBeingCarried& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 78); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::EnablePickupParalysis& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 79); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::EnableLiftPower& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 80); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SetMotionModelParams& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 81); }
inline bool SendMessage(const Anki::Cozmo::PowerState& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 83); }
inline bool SendMessage(const Anki::Cozmo::PropState& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 84); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::EnableReadToolCodeMode& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 85); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::EnableTestStateMessage& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 86); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SetHeadDeviceLock& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 87); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::StartMotorCalibration& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 88); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::IMUCalibrationData& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 96); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::GenerateTestTone& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 97); }
inline bool SendMessage(const Anki::Cozmo::NVStorage::NVStorageWrite& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 131); }
inline bool SendMessage(const Anki::Cozmo::NVStorage::NVStorageRead& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 132); }
inline bool SendMessage(const Anki::Cozmo::NVStorage::NVWipeAll& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 133); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::RTIPVersionInfo& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 135); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::DebugSetRTTO& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 137); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AbortAnimation& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 144); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::AudioSample& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 145); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::AudioSilence& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 146); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::HeadAngle& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 147); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::LiftHeight& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 148); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::Event& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 149); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AnimEventToRTIP& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 150); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::FaceImage& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 151); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::BackpackLights& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 152); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::BodyMotion& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 153); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::EndOfAnimation& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 154); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::StartOfAnimation& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 155); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::DisableAnimTracks& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 157); }
inline bool SendMessage(const Anki::Cozmo::AnimKeyFrame::EnableAnimTracks& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 158); }
inline bool SendMessage(const Anki::Cozmo::CubeSlots& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 160); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::TestState& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 161); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::EnterFactoryTestMode& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 162); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::DisplayNumber& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 163); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::OTA::Write& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 175); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppConnectConfigString& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 170); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppConnectConfigFlags& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 171); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppConnectConfigIPInfo& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 172); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AppConnectGetRobotIP& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 173); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::WiFiOff& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 174); }
} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

