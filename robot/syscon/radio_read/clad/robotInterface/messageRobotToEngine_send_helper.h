// Autogenerated C++ Lite (embedded) message buffer code.
// Source: clad/robotInterface/messageRobotToEngine.clad
// Full command line: ./cozmo_CPPLite_send_helper_emitter.py -C ./src/ -I -o ../generated/clad/robot/ clad/robotInterface/messageRobotToEngine.clad

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

namespace OTA {

} // namespace OTA

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace NVStorage {

} // namespace NVStorage

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace NVStorage {

} // namespace NVStorage

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

namespace Anki {

namespace Cozmo {

namespace RobotInterface {

inline bool SendMessage(const Anki::Cozmo::RobotInterface::PrintTrace& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 176); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::PrintText& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 177); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::MainCycleTimeError& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 178); }
inline bool SendMessage(const Anki::Cozmo::GoalPose& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 179); }
inline bool SendMessage(const Anki::Cozmo::ObjectMoved& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 180); }
inline bool SendMessage(const Anki::Cozmo::ObjectStoppedMoving& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 181); }
inline bool SendMessage(const Anki::Cozmo::ObjectTapped& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 182); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::DataDump& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 183); }
inline bool SendMessage(const Anki::Cozmo::BlockPickedUp& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 184); }
inline bool SendMessage(const Anki::Cozmo::BlockPlaced& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 185); }
inline bool SendMessage(const Anki::Cozmo::RampTraverseStart& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 186); }
inline bool SendMessage(const Anki::Cozmo::RampTraverseComplete& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 187); }
inline bool SendMessage(const Anki::Cozmo::BridgeTraverseStart& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 188); }
inline bool SendMessage(const Anki::Cozmo::BridgeTraverseComplete& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 189); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::TimeProfileStat& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 190); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::IMUDataChunk& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 191); }
inline bool SendMessage(const Anki::Cozmo::CliffEvent& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 192); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::SyncTimeAck& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 194); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::RobotPoked& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 195); }
inline bool SendMessage(const Anki::Cozmo::ChargerMountComplete& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 196); }
inline bool SendMessage(const Anki::Cozmo::MovingLiftPostDock& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 197); }
inline bool SendMessage(const Anki::Cozmo::ProxObstacle& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 198); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::IMURawDataChunk& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 199); }
inline bool SendMessage(const Anki::Cozmo::CameraCalibration& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 200); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::RobotAvailable& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 201); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AnimationStarted& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 202); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AnimationEnded& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 203); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::NVReadResultToEngine& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 205); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::NVOpResultToEngine& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 206); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::CrashReport& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 207); }
inline bool SendMessage(const Anki::Cozmo::ObjectConnectionState& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 208); }
inline bool SendMessage(const Anki::Cozmo::MotorCalibration& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 209); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::FWVersionInfo& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 210); }
inline bool SendMessage(const Anki::Cozmo::DockingStatus& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 211); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::RobotStopped& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 212); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AnimationEvent& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 213); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::FactoryTestParameter& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 214); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::BodyVersion& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 238); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::OTA::Ack& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 239); }
inline bool SendMessage(const Anki::Cozmo::RobotState& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 240); }
inline bool SendMessage(const Anki::Cozmo::RobotInterface::AnimationState& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 241); }
inline bool SendMessage(const Anki::Cozmo::ImageChunk& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 242); }
inline bool SendMessage(const Anki::Cozmo::ObjectDiscovered& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 243); }
inline bool SendMessage(const Anki::Cozmo::ImageImuData& msg) { return Anki::Cozmo::HAL::RadioSendMessage(msg.GetBuffer(), msg.Size(), 244); }
} // namespace RobotInterface

} // namespace Cozmo

} // namespace Anki

