// Autogenerated C++ Lite (embedded) message buffer code.
// Source: clad/types/ledTypes.clad
// Full command line: ../../tools/message-buffers/emitters/CPPLite_emitter.py --max-message-size 1400 -C ./src/ -I -o ../generated/clad//robot/ clad/types/ledTypes.clad

#include "clad/types/ledTypes.h"

namespace Anki {

namespace Cozmo {

#ifdef CLAD_DEBUG
const char* LEDIdToString(LEDId m)
{
  switch(m) {
    case LED_BACKPACK_LEFT:
      return "LED_BACKPACK_LEFT";
    case LED_BACKPACK_FRONT:
      return "LED_BACKPACK_FRONT";
    case LED_BACKPACK_MIDDLE:
      return "LED_BACKPACK_MIDDLE";
    case LED_BACKPACK_BACK:
      return "LED_BACKPACK_BACK";
    case LED_BACKPACK_RIGHT:
      return "LED_BACKPACK_RIGHT";
    case NUM_BACKPACK_LEDS:
      return "NUM_BACKPACK_LEDS";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

#ifdef CLAD_DEBUG
const char* LEDColorToString(LEDColor m)
{
  switch(m) {
    case LED_CURRENT_COLOR:
      return "LED_CURRENT_COLOR";
    case LED_OFF:
      return "LED_OFF";
    case LED_RED:
      return "LED_RED";
    case LED_GREEN:
      return "LED_GREEN";
    case LED_YELLOW:
      return "LED_YELLOW";
    case LED_BLUE:
      return "LED_BLUE";
    case LED_PURPLE:
      return "LED_PURPLE";
    case LED_CYAN:
      return "LED_CYAN";
    case LED_WHITE:
      return "LED_WHITE";
    case LED_IR:
      return "LED_IR";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

#ifdef CLAD_DEBUG
const char* LEDColorEncodedToString(LEDColorEncoded m)
{
  switch(m) {
    case LED_ENC_OFF:
      return "LED_ENC_OFF";
    case LED_ENC_RED:
      return "LED_ENC_RED";
    case LED_ENC_GRN:
      return "LED_ENC_GRN";
    case LED_ENC_BLU:
      return "LED_ENC_BLU";
    case LED_ENC_YELLOW:
      return "LED_ENC_YELLOW";
    case LED_ENC_PURPLE:
      return "LED_ENC_PURPLE";
    case LED_ENC_CYAN:
      return "LED_ENC_CYAN";
    case LED_ENC_WHITE:
      return "LED_ENC_WHITE";
    case LED_ENC_IR:
      return "LED_ENC_IR";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

#ifdef CLAD_DEBUG
const char* LEDColorEncodedShiftsToString(LEDColorEncodedShifts m)
{
  switch(m) {
    case LED_ENC_RED_SHIFT:
      return "LED_ENC_RED_SHIFT";
    case LED_ENC_GRN_SHIFT:
      return "LED_ENC_GRN_SHIFT";
    case LED_ENC_BLU_SHIFT:
      return "LED_ENC_BLU_SHIFT";
    case LED_ENC_IR_SHIFT:
      return "LED_ENC_IR_SHIFT";
    default:
      return 0;
  }
}
#endif // CLAD_DEBUG

} // namespace Cozmo

} // namespace Anki

