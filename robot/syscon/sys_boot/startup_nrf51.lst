


ARM Macro Assembler    Page 1 


    1 00000000         ; Copyright (c) 2015, Nordic Semiconductor ASA
    2 00000000         ; All rights reserved.
    3 00000000         ; 
    4 00000000         ; Redistribution and use in source and binary forms, wit
                       h or without
    5 00000000         ; modification, are permitted provided that the followin
                       g conditions are met:
    6 00000000         ; 
    7 00000000         ; * Redistributions of source code must retain the above
                        copyright notice, this
    8 00000000         ;   list of conditions and the following disclaimer.
    9 00000000         ; 
   10 00000000         ; * Redistributions in binary form must reproduce the ab
                       ove copyright notice,
   11 00000000         ;   this list of conditions and the following disclaimer
                        in the documentation
   12 00000000         ;   and/or other materials provided with the distributio
                       n.
   13 00000000         ; 
   14 00000000         ; * Neither the name of Nordic Semiconductor ASA nor the
                        names of its
   15 00000000         ;   contributors may be used to endorse or promote produ
                       cts derived from
   16 00000000         ;   this software without specific prior written permiss
                       ion.
   17 00000000         ; 
   18 00000000         ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
                        CONTRIBUTORS "AS IS"
   19 00000000         ; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT 
                       NOT LIMITED TO, THE
   20 00000000         ; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
                       A PARTICULAR PURPOSE ARE
   21 00000000         ; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
                       CONTRIBUTORS BE LIABLE
   22 00000000         ; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLA
                       RY, OR CONSEQUENTIAL
   23 00000000         ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
                        SUBSTITUTE GOODS OR
   24 00000000         ; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS I
                       NTERRUPTION) HOWEVER
   25 00000000         ; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONT
                       RACT, STRICT LIABILITY,
   26 00000000         ; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
                        ANY WAY OUT OF THE USE
   27 00000000         ; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY O
                       F SUCH DAMAGE.
   28 00000000         
   29 00000000         ; NOTE: Template files (including this one) are applicat
                       ion specific and therefore 
   30 00000000         ; expected to be copied into the application project fol
                       der prior to its use!
   31 00000000         
   32 00000000         ; Description message
   33 00000000         
   34 00000000                 IF               :DEF: __STACK_SIZE
   37 00000000 00000800 
                       Stack_Size
                               EQU              2048
   38 00000000                 ENDIF



ARM Macro Assembler    Page 2 


   39 00000000         
   40 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   41 00000000         Stack_Mem
                               SPACE            Stack_Size
   42 00000800         __initial_sp
   43 00000800         
   44 00000800         
   45 00000800                 PRESERVE8
   46 00000800                 THUMB
   47 00000800         
   48 00000800         ; Vector Table Mapped to Address 0 at Reset
   49 00000800         
   50 00000800                 AREA             RESET, DATA, READONLY
   51 00000000                 EXPORT           __Vectors
   52 00000000                 EXPORT           __Vectors_End
   53 00000000                 EXPORT           __Vectors_Size
   54 00000000         
   55 00000000                 IMPORT           SVC_Handler
   56 00000000         
   57 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   58 00000004 00000000        DCD              Reset_Handler
   59 00000008 00000000        DCD              NMI_Handler
   60 0000000C 00000000        DCD              HardFault_Handler
   61 00000010 00000000        DCD              0           ; Reserved
   62 00000014 00000000        DCD              0           ; Reserved
   63 00000018 00000000        DCD              0           ; Reserved
   64 0000001C 00000000        DCD              0           ; Reserved
   65 00000020 00000000        DCD              0           ; Reserved
   66 00000024 00000000        DCD              0           ; Reserved
   67 00000028 00000000        DCD              0           ; Reserved
   68 0000002C 00000000        DCD              SVC_Handler
   69 00000030 00000000        DCD              0           ; Reserved
   70 00000034 00000000        DCD              0           ; Reserved
   71 00000038 00000000        DCD              PendSV_Handler
   72 0000003C 00000000        DCD              SysTick_Handler
   73 00000040         
   74 00000040         ; External Interrupts
   75 00000040 00000000        DCD              Trampoline
   76 00000044 00000000        DCD              Trampoline
   77 00000048 00000000        DCD              Trampoline
   78 0000004C 00000000        DCD              Trampoline
   79 00000050 00000000        DCD              Trampoline
   80 00000054 00000000        DCD              0           ; Reserved
   81 00000058 00000000        DCD              Trampoline
   82 0000005C 00000000        DCD              Trampoline
   83 00000060 00000000        DCD              Trampoline
   84 00000064 00000000        DCD              Trampoline
   85 00000068 00000000        DCD              Trampoline
   86 0000006C 00000000        DCD              Trampoline
   87 00000070 00000000        DCD              Trampoline
   88 00000074 00000000        DCD              Trampoline
   89 00000078 00000000        DCD              Trampoline
   90 0000007C 00000000        DCD              Trampoline
   91 00000080 00000000        DCD              Trampoline
   92 00000084 00000000        DCD              Trampoline
   93 00000088 00000000        DCD              Trampoline



ARM Macro Assembler    Page 3 


   94 0000008C 00000000        DCD              Trampoline
   95 00000090 00000000        DCD              Trampoline
   96 00000094 00000000        DCD              Trampoline
   97 00000098 00000000        DCD              Trampoline
   98 0000009C 00000000        DCD              Trampoline
   99 000000A0 00000000        DCD              Trampoline
  100 000000A4 00000000        DCD              Trampoline
  101 000000A8 00000000        DCD              0           ; Reserved
  102 000000AC 00000000        DCD              0           ; Reserved
  103 000000B0 00000000        DCD              0           ; Reserved
  104 000000B4 00000000        DCD              0           ; Reserved
  105 000000B8 00000000        DCD              0           ; Reserved
  106 000000BC 00000000        DCD              0           ; Reserved
  107 000000C0         
  108 000000C0         __Vectors_End
  109 000000C0         
  110 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  111 000000C0         
  112 000000C0                 AREA             |.text|, CODE, READONLY
  113 00000000         
  114 00000000         ; Reset Handler
  115 00000000         
  116 00000000 40000524 
                       NRF_POWER_RAMON_ADDRESS
                               EQU              0x40000524  ; NRF_POWER->RAMON 
                                                            address
  117 00000000 40000554 
                       NRF_POWER_RAMONB_ADDRESS
                               EQU              0x40000554  ; NRF_POWER->RAMONB
                                                             address
  118 00000000 00000003 
                       NRF_POWER_RAMONx_RAMxON_ONMODE_Msk
                               EQU              0x3         ; All RAM blocks on
                                                             in onmode bit mask
                                                            
  119 00000000         
  120 00000000                 EXPORT           Reset_Handler
  121 00000000                 IMPORT           SystemInit
  122 00000000                 IMPORT           __main
  123 00000000         
  124 00000000         Reset_Handler
                               PROC
  125 00000000         
  126 00000000 B672            CPSID            I
  127 00000002 2103            MOVS             R1, #NRF_POWER_RAMONx_RAMxON_ON
MODE_Msk
  128 00000004         
  129 00000004 480C            LDR              R0, =NRF_POWER_RAMON_ADDRESS
  130 00000006 6802            LDR              R2, [R0]
  131 00000008 430A            ORRS             R2, R2, R1
  132 0000000A 6002            STR              R2, [R0]
  133 0000000C         
  134 0000000C 480B            LDR              R0, =NRF_POWER_RAMONB_ADDRESS
  135 0000000E 6802            LDR              R2, [R0]
  136 00000010 430A            ORRS             R2, R2, R1
  137 00000012 6002            STR              R2, [R0]
  138 00000014         



ARM Macro Assembler    Page 4 


  139 00000014 480A            LDR              R0, =SystemInit
  140 00000016 4780            BLX              R0
  141 00000018 480A            LDR              R0, =__main
  142 0000001A 4700            BX               R0
  143 0000001C                 ENDP
  144 0000001C         
  145 0000001C         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  146 0000001C         
  147 0000001C         ResetStack
                               PROC
  148 0000001C                 EXPORT           ResetStack
  149 0000001C 480A            LDR              r0, =0x20004000
  150 0000001E 4685            MOV              sp, r0
  151 00000020 4770            BX               LR
  152 00000022                 ENDP
  153 00000022         
  154 00000022         
  155 00000022         NMI_Handler
                               PROC
  156 00000022                 EXPORT           NMI_Handler               [WEAK
]
  157 00000022 E7FE            B                .
  158 00000024                 ENDP
  160 00000024         HardFault_Handler
                               PROC
  161 00000024                 EXPORT           HardFault_Handler         [WEAK
]
  162 00000024 E7FE            B                .
  163 00000026                 ENDP
  164 00000026         PendSV_Handler
                               PROC
  165 00000026                 EXPORT           PendSV_Handler            [WEAK
]
  166 00000026 E7FE            B                .
  167 00000028                 ENDP
  168 00000028         SysTick_Handler
                               PROC
  169 00000028                 EXPORT           SysTick_Handler           [WEAK
]
  170 00000028 E7FE            B                .
  171 0000002A                 ENDP
  172 0000002A         
  173 0000002A         Trampoline
                               PROC
  174 0000002A 4908            LDR              R1, =(0x1028) ; Vector table of
                                                            fset
  175 0000002C F3EF 8005       MRS              R0, IPSR    ; Get exception num
                                                            ber
  176 00000030 0680            LSLS             R0, #26     ; Clear all bits sa
                                                            ve bottom 6
  177 00000032 0E00            LSRS             R0, #24     ; Multiply by 4
  178 00000034 5808            LDR              R0, [R1,R0] ; Load vector addre
                                                            ss (base+exception*
                                                            4)
  179 00000036 4700            BX               R0          ; Jump to it
  180 00000038                 ENDP
  181 00000038         
  182 00000038                 ALIGN



ARM Macro Assembler    Page 5 


  183 00000038         
  184 00000038         
  185 00000038         ; User Initial Stack & Heap
  186 00000038         
  187 00000038                 IF               :DEF:__MICROLIB
  188 00000038         
  189 00000038                 EXPORT           __initial_sp
  190 00000038         
  191 00000038                 ELSE
  205                          ENDIF
  206 00000038         
  207 00000038                 END
              40000524 
              40000554 
              00000000 
              00000000 
              20004000 
              00001028 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\build\startup_nrf51.d -o.\build\startup_nrf51.o -IC:\Users\aster
ick\Documents\GitHub\products-cozmo\robot\syscon\sys_boot\RTE -IC:\Keil_v5\ARM\
PACK\ARM\CMSIS\4.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nR
F_DeviceFamilyPack\8.0.3\Device\Include --predefine="__MICROLIB SETA 1" --prede
fine="__UVISION_VERSION SETA 515" --predefine="_RTE_ SETA 1" --predefine="NRF51
 SETA 1" --list=.\startup_nrf51.lst startup\startup_nrf51.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 40 in file startup\startup_nrf51.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 41 in file startup\startup_nrf51.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000800

Symbol: __initial_sp
   Definitions
      At line 42 in file startup\startup_nrf51.s
   Uses
      At line 57 in file startup\startup_nrf51.s
      At line 189 in file startup\startup_nrf51.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 50 in file startup\startup_nrf51.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 57 in file startup\startup_nrf51.s
   Uses
      At line 51 in file startup\startup_nrf51.s
      At line 110 in file startup\startup_nrf51.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 108 in file startup\startup_nrf51.s
   Uses
      At line 52 in file startup\startup_nrf51.s
      At line 110 in file startup\startup_nrf51.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 112 in file startup\startup_nrf51.s
   Uses
      None
Comment: .text unused
HardFault_Handler 00000024

Symbol: HardFault_Handler
   Definitions
      At line 160 in file startup\startup_nrf51.s
   Uses
      At line 60 in file startup\startup_nrf51.s
      At line 161 in file startup\startup_nrf51.s

NMI_Handler 00000022

Symbol: NMI_Handler
   Definitions
      At line 155 in file startup\startup_nrf51.s
   Uses
      At line 59 in file startup\startup_nrf51.s
      At line 156 in file startup\startup_nrf51.s

PendSV_Handler 00000026

Symbol: PendSV_Handler
   Definitions
      At line 164 in file startup\startup_nrf51.s
   Uses
      At line 71 in file startup\startup_nrf51.s
      At line 165 in file startup\startup_nrf51.s

ResetStack 0000001C

Symbol: ResetStack
   Definitions
      At line 147 in file startup\startup_nrf51.s
   Uses
      At line 148 in file startup\startup_nrf51.s
Comment: ResetStack used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 124 in file startup\startup_nrf51.s
   Uses
      At line 58 in file startup\startup_nrf51.s
      At line 120 in file startup\startup_nrf51.s

SysTick_Handler 00000028

Symbol: SysTick_Handler
   Definitions
      At line 168 in file startup\startup_nrf51.s
   Uses
      At line 72 in file startup\startup_nrf51.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 169 in file startup\startup_nrf51.s

Trampoline 0000002A

Symbol: Trampoline
   Definitions
      At line 173 in file startup\startup_nrf51.s
   Uses
      At line 75 in file startup\startup_nrf51.s
      At line 76 in file startup\startup_nrf51.s
      At line 77 in file startup\startup_nrf51.s
      At line 78 in file startup\startup_nrf51.s
      At line 79 in file startup\startup_nrf51.s
      At line 81 in file startup\startup_nrf51.s
      At line 82 in file startup\startup_nrf51.s
      At line 83 in file startup\startup_nrf51.s
      At line 84 in file startup\startup_nrf51.s
      At line 85 in file startup\startup_nrf51.s
      At line 86 in file startup\startup_nrf51.s
      At line 87 in file startup\startup_nrf51.s
      At line 88 in file startup\startup_nrf51.s
      At line 89 in file startup\startup_nrf51.s
      At line 90 in file startup\startup_nrf51.s
      At line 91 in file startup\startup_nrf51.s
      At line 92 in file startup\startup_nrf51.s
      At line 93 in file startup\startup_nrf51.s
      At line 94 in file startup\startup_nrf51.s
      At line 95 in file startup\startup_nrf51.s
      At line 96 in file startup\startup_nrf51.s
      At line 97 in file startup\startup_nrf51.s
      At line 98 in file startup\startup_nrf51.s
      At line 99 in file startup\startup_nrf51.s
      At line 100 in file startup\startup_nrf51.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NRF_POWER_RAMONB_ADDRESS 40000554

Symbol: NRF_POWER_RAMONB_ADDRESS
   Definitions
      At line 117 in file startup\startup_nrf51.s
   Uses
      At line 134 in file startup\startup_nrf51.s
Comment: NRF_POWER_RAMONB_ADDRESS used once
NRF_POWER_RAMON_ADDRESS 40000524

Symbol: NRF_POWER_RAMON_ADDRESS
   Definitions
      At line 116 in file startup\startup_nrf51.s
   Uses
      At line 129 in file startup\startup_nrf51.s
Comment: NRF_POWER_RAMON_ADDRESS used once
NRF_POWER_RAMONx_RAMxON_ONMODE_Msk 00000003

Symbol: NRF_POWER_RAMONx_RAMxON_ONMODE_Msk
   Definitions
      At line 118 in file startup\startup_nrf51.s
   Uses
      At line 127 in file startup\startup_nrf51.s
Comment: NRF_POWER_RAMONx_RAMxON_ONMODE_Msk used once
Stack_Size 00000800

Symbol: Stack_Size
   Definitions
      At line 37 in file startup\startup_nrf51.s
   Uses
      At line 41 in file startup\startup_nrf51.s
Comment: Stack_Size used once
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 110 in file startup\startup_nrf51.s
   Uses
      At line 53 in file startup\startup_nrf51.s
Comment: __Vectors_Size used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 55 in file startup\startup_nrf51.s
   Uses
      At line 68 in file startup\startup_nrf51.s
Comment: SVC_Handler used once
SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 121 in file startup\startup_nrf51.s
   Uses
      At line 139 in file startup\startup_nrf51.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 122 in file startup\startup_nrf51.s
   Uses
      At line 141 in file startup\startup_nrf51.s
Comment: __main used once
3 symbols
360 symbols in table
