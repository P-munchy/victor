#!/usr/bin/env python2

import json

print "// GENERATED BY CALCMIC.PY"

TAP_12d = [
  0.00511761021328065,
  0.007821114228739089,
  0.01301685877250557,
  0.01966325666098887,
  0.02760838739634942,
  0.0365232040042163,
  0.045924412667292455,
  0.05522213381871476,
  0.06374470040398832,
  0.07084137707212111,
  0.07592819944341692,
  0.07858874531838657
]

TAP_8d =[
  0.007747753909443319,
  0.017022339924869234,
  0.03197380257628307,
  0.05112661162621403,
  0.0724330961428503,
  0.09284586447428968,
  0.10896948559596391,
  0.11788104575008655
]

def calc_tables():
	DECIMATION_TABLE = [
		[None] * 0x100,
		[None] * 0x100,
		[None] * 0x100
	]

	for i in range(0x100):
		a = [
			1 if (i &  1) else -1,
			1 if (i &  4) else -1,
			1 if (i & 16) else -1,
			1 if (i & 64) else -1
		]

		b = [
			1 if (i &   2) else -1,
			1 if (i &   8) else -1,
			1 if (i &  32) else -1,
			1 if (i & 128) else -1
		]

		for k in range(3):
			DECIMATION_TABLE[k][i] = [0] * 4

			for g in range(4):
				idx = k * 4 + g
				inv = 11 - idx

				DECIMATION_TABLE[k][i][0] += int(TAP_12d[idx] * a[g] * 0x7FFFFFFF)
				DECIMATION_TABLE[k][i][1] += int(TAP_12d[inv] * a[g] * 0x7FFFFFFF)
				DECIMATION_TABLE[k][i][2] += int(TAP_12d[idx] * b[g] * 0x7FFFFFFF)
				DECIMATION_TABLE[k][i][3] += int(TAP_12d[inv] * b[g] * 0x7FFFFFFF)

	return DECIMATION_TABLE

for i, v in enumerate(TAP_8d):
	print ("static const int32_t DECIMATION_TAP_%i = 0x%04x;" % (i, int(v * 0x10000)))

print "const int32_t DECIMATION_TABLE[3][0x100][4] = %s;" % json.dumps(calc_tables()).replace("[", "{").replace("]", "}").replace("}, {","},\n{").replace("}}", "}\n}")
