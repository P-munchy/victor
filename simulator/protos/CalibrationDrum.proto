#VRML_SIM V7.3.0 utf8

PROTO CalibrationDrum [
  field SFString name "CalibrationDrum"

  field SFVec3f       translation  0 0 0
  field SFRotation    rotation     0 0 1 0

  field SFFloat       patternWidth  0.05
  field SFFloat       numPatterns   5

  # Value from 0 to numPatterns - 1 which defines
  # which pattern is facing horizontally (for viewing)
  field SFInt32       step 0

  field SFFloat       upDownAngleDegrees     45
  field SFFloat       leftRightAngleDegrees  45

  field SFColor       drumColor 1 0 0
]
{
Solid {

  name IS name

  translation IS translation
  rotation IS rotation


  %{ angleStep = 2*3.1415926 / fields.numPatterns.value
     nextAngle = 0
     radius = 0.05
     upDownAngleRad = fields.upDownAngleDegrees.value * 3.14159 / 180
     leftRightAngleRad = fields.leftRightAngleDegrees.value * 3.14159 / 180
  }%

  children [
  Transform {
  rotation 1 0 0 %{=fields.step.value * angleStep}%
  children [

    # Main cylinder
    Transform {
      rotation 0 0 1 1.5707963
      children [
        Shape {
          appearance Appearance {
            material Material {
              diffuseColor IS drumColor
            }
          }
          geometry Cylinder {
            height 0.1
            radius 0.02
          }
        }
      ]
    }

    # Straight on
    Transform {
      rotation 1 0 0 %{=nextAngle}%
      children [
        CalibrationPattern {
          translation 0 %{=radius}% 0
          rotation 1 0 0 0
          patternWidth %{=fields.patternWidth.value}%
        }
      ]
    }

    %{nextAngle = nextAngle + angleStep}%

    # Tilted up
    Transform {
      rotation 1 0 0 %{=nextAngle}%
      children [
        CalibrationPattern {
          translation 0 %{=radius}% 0
          rotation 1 0 0 %{=upDownAngleRad}%
          patternWidth %{=fields.patternWidth.value}%
        }
      ]
    }

    %{nextAngle = nextAngle + angleStep}%

    # Tilted down
    Transform {
      rotation 1 0 0 %{=nextAngle}%
      children [
        CalibrationPattern {
          translation 0 %{=radius}% 0
          rotation 1 0 0 %{=-upDownAngleRad}%
          patternWidth %{=fields.patternWidth.value}%
        }
      ]
    }

    %{nextAngle = nextAngle + angleStep}%

    # Tilted leftward
    Transform {
      rotation 1 0 0 %{=nextAngle}%
      children [
        CalibrationPattern {
          translation 0 %{=radius}% 0
          rotation 0 0 1 %{=-leftRightAngleRad}%
          patternWidth %{=fields.patternWidth.value}%
        }
      ]
    }

    %{nextAngle = nextAngle + angleStep}%

    # Tilted rightward
    Transform {
      rotation 1 0 0 %{=nextAngle}%
      children [
        CalibrationPattern {
          translation 0 %{=radius}% 0
          rotation 0 0 1 %{=leftRightAngleRad}%
          patternWidth %{=fields.patternWidth.value}%
        }
      ]
    }


  ] # Transform children
  }
  ] # Solid Children

} # Parent Solid


} # PROTO
