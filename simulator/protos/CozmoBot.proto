#VRML_SIM V7.3.0 utf8
PROTO CozmoBot [

  field SFString advertisementHost "127.0.0.1"

  field SFVec3f translation 0 0 0
  field SFRotation rotation 0 0 1 0
  field SFString name "Cozmo"

  # CVGA Crop:
  field SFInt32  cameraWidth  400
  field SFInt32  cameraHeight 296
  field SFFloat  fieldOfView  1.2

  # QVGA Crop:
#  field SFInt32  cameraWidth  320
#  field SFInt32  cameraHeight 240
#  field SFFloat  fieldOfView  0.72
  
  # VGA Wide:
#    field SFInt32  cameraWidth  640
#    field SFInt32  cameraHeight 480
#    field SFFloat  fieldOfView  1.21
  
  field SFBool   hideCameraDisplay FALSE

  field SFFloat headAngle          0
  field SFFloat headAngle_lowLimit -0.4363 # 25 degrees down
  field SFFloat headAngle_highLimit 0.6108 # 35 degrees up
  
  field SFFloat liftAngle 0
  field SFFloat liftAngle_lowLimit  -0.01  # Should be 0, but Webots needs it to be less than liftAngle
  field SFFloat liftAngle_highLimit 1.047  # 60 degrees up
  #field SFFloat liftAngle_highLimit 0.96  # 55 degrees up

  field SFInt32 usbChannel 88
  
  field SFString controller "webotsCtrlRobot"
  field SFString controllerArgs ""

  field SFColor bodyColor 0.92 0.92 0.8

  # Set to TRUE if you just want to use the model for visualization.
  field SFBool vizMode FALSE
  
  # Set to TRUE to use treads
  field SFBool useTreads TRUE

  # Whether or not to enable video
  field SFBool enableVideo TRUE
  
  # Tread wheel parameters
  field SFFloat frontWheelRadiusM   0.0145
  field SFFloat rearWheelRadiusM    0.01075
  field SFFloat rearWheelDistToFrontWheelM 0.048
  
  # The number of intermediate wheels to simulate in each tread between the two end wheels.
  field SFInt32 numInterTreadWheels 2
  
]
{

Supervisor {
  translation IS translation
  rotation IS rotation
  name IS name

  %{ if not fields.vizMode.value then }%
  controller IS controller
  controllerArgs IS controllerArgs
  %{ else }%
  controller ""
  controllerArgs ""
  %{ end }%
  
  %{ if not fields.vizMode.value then }%
  physics Physics {
    density 0.1  # This value needs to be small for some reason otherwise it starts doing the slow-mo rocking thing
    #mass 0.17 # about 6 ounces
  }
  %{ end }%
  
  children [
    Transform {
      translation 0 0 0.0142 # wheel radius
      children [ 
    
		# Comms for communicating with blocks
		Emitter { 
		  name "blockCommsEmitter"
		}
		
		Receiver {
		  name "blockCommsReceiver"
		}
   	
		# Are these still needed?
		GPS {
		  name "gps"
		  translation 0 0 0
		}    
		Compass {
		  name "compass"
		}
	
	
		DEF BODY Solid {
		  translation -0.015 0 0
		  children [
				DEF BODY_SHAPE Group { 
					children [
						Transform {
							translation 0.015 0 0
							children [
							Shape {
								appearance DEF MAIN_BODY_APPEARANCE Appearance {
								material Material {
									diffuseColor IS bodyColor
									shininess 0
								}
								}  
								geometry Cylinder {
								height 0.0322
								radius 0.013
								subdivision 12
								}
							}
							]
						}
						Transform {
							translation -0.015 0 0
							children [
								Shape {
									appearance USE MAIN_BODY_APPEARANCE 
									geometry Cylinder {
										height 0.0322
										radius 0.013
										subdivision 12
									}
								}
							]
						}
						Shape {
							appearance USE MAIN_BODY_APPEARANCE  
							geometry Box {
								size 0.03 0.0322 0.026
							}
						}

					] # BODY_SHAPE Group children
				} # BODY_SHAPE Group

				Transform {
				  translation 0 0 -0.013
				  rotation 0 1 0 3.14159
				  children [
					Connector {
					  name			"ChargeContact"
					  model         "ChargeContact"
					  type 			"symmetric"
					  isLocked		FALSE
					  autoLock		FALSE
					  distanceTolerance	0.01
					  axisTolerance		0.2
					  rotationTolerance 	1.5708
					  numberOfRotations 	4
					  snap			FALSE
					}
				  ]
				}

		  ] # BODY Solid children
		  %{ if not fields.vizMode.value then }%
		  boundingObject USE BODY_SHAPE
		  physics Physics {
			 density 5000
		  }
		  %{ end }%
		} # BODY Solid
		
		DEF HEAD Transform {
		  translation -0.013 0 0.0335
		  children [
			HingeJoint {
			  jointParameters HingeJointParameters {
					dampingConstant 1
					position IS headAngle
					maxStop IS headAngle_highLimit
					minStop IS headAngle_lowLimit
					axis 0 -1 0
			  }
			  %{ if not fields.vizMode.value then }%
			  device [
			    RotationalMotor {
					name "HeadMotor"
			    }
			    PositionSensor {
			      name "HeadMotorPosSensor"
			    }
			  ]
			  %{ end }%
			  endPoint Solid {            
					children [
						DEF EAR_SQUARES Shape {
							appearance Appearance {
								material DEF OrangePlastic Material {
									diffuseColor 0.8 0.404776 0
								}
							}
							geometry Box {
								size 0.005 0.0405 0.005
							}
						}
						DEF EARS Shape {
							appearance Appearance {
								material Material {
									diffuseColor 0.5 0.5 0.5
								}
							}
							geometry Cylinder {
								height 0.040
								radius 0.007
								subdivision 12
							}
						}

				  Camera {
						name "HeadCamera"
						# Note: 8.8mm to lens face, 5.8mm to PCB mount, optical center = ?
						translation 0.0058 0 -0.006
						rotation 0.57735 -0.57735 -0.57735 2.0944
						width IS cameraWidth
						height IS cameraHeight
						fieldOfView IS fieldOfView
						near 0.018
						antiAliasing TRUE
						
						%{ if fields.vizMode.value or fields.hideCameraDisplay.value then }%
              pixelSize 0
						%{ else }%
              %{ if fields.cameraWidth.value == 640 then }%
                pixelSize 0.5
              %{ elseif fields.cameraWidth.value == 400 then }%
                pixelSize 1
              %{ elseif fields.cameraWidth.value == 320 then }%
                pixelSize 1
              %{ elseif fields.cameraWidth.value == 160 then }%
                pixelSize 2
              %{ elseif fields.cameraWidth.value == 80 then }%
                pixelSize 4
              %{ end }%      
						%{ end }%

				  }
				  Gyro {
				  	name "gyro"
						translation 0.0058 -0.0135 0

						# +/- 500 deg/s range expressed by 16-bits
						# resolution 0.0002663
				  }
				  Accelerometer {
						name "accel"
						translation 0.0058 -0.0135 0

						# +/-2g (+/- 19.62m/s^2) range expressed by 12-bits
						# resolution 0.00958
				  }
				  DistanceSensor {
						name "proxSensorCenter"
						translation 0.022 0 0.008
						rotation 0 1 0 0
						type "infra-red"
						lookupTable [ 0.0   255   0,
						              0.01   200  0.1,
						              0.02   60   0.1,
						              0.03   20   0.1,
						              0.04   12   0.1,   
						              0.06   3    0.1,   
						              0.08   2    0.1,   
						              0.1    1    0.1,
						              0.12   0    0.1]
						numberOfRays 1
						aperture 0.1
				  }
				  DistanceSensor {
						name "proxSensorLeft"
						translation 0.022 0.013 0.008
						rotation -0.1 -0.4 1 0.3
						type "infra-red"
						lookupTable [ 0.0   255   0,
						              0.01   200  0.1,
						              0.02   60   0.1,
						              0.03   20   0.1,
						              0.04   12   0.1,   
						              0.06   3    0.1,   
						              0.08   2    0.1,   
						              0.1    1    0.1,
						              0.12   0    0.1]
						numberOfRays 1
						aperture 0.1
				  }
				  DistanceSensor {
						name "proxSensorRight"
						translation 0.022 -0.013 0.008
						rotation -0.1 0.4 1 -0.3
						type "infra-red"
						lookupTable [ 0.0   255   0,
						              0.01   200  0.1,
						              0.02   60   0.1,
						              0.03   20   0.1,
						              0.04   12   0.1,   
						              0.06   3    0.1,   
						              0.08   2    0.1,   
						              0.1    1    0.1,
						              0.12   0    0.1]
						numberOfRays 1
						aperture 0.1
				  }
				  DEF FACE Transform {
						translation 0.016 0 0
						children [
							Shape {
								appearance Appearance {
									material DEF DarkGray Material {
										diffuseColor 0.5 0.5 0.5
									}
								}
								geometry DEF FACE_PLATE Box {
									size  0.01 0.032 0.025 
								}
							}
							
							Transform {
							  translation 0.00451 0 0
							  rotation 1 0 0 1.5708
							  children[
								Display {
								  name           "face_display"
								  width          128
								  height         64
								  windowPosition 0 0
								  pixelSize      1.0
								  children [
								    Shape {
								      appearance Appearance {
								        texture ImageTexture {
								        }
								      }
								      geometry Box {
								        size 0.001 0.013 0.026
								      }
								    }
								  ]
								}
							  ]
							}
						]
				  }
				  
				  DEF HEAD_SHAPE Group {
				    children [
					  Transform {
						translation 0.016 0 0.012 
						children [
							DEF HEAD_CAPSULE_WIDTH Shape {
							  geometry Capsule {
							    height 0.03
							    radius 0.005
							  }
							  appearance USE MAIN_BODY_APPEARANCE 
							}
					    ]				          
				      }
				      
				      Transform {
				        translation 0.016 0 -0.012 
				        children [
				          USE HEAD_CAPSULE_WIDTH
				        ]
				      }
				      
				      Transform {
				        translation -0.01 0 0.007
				        children [
				          USE HEAD_CAPSULE_WIDTH
				        ]
				      }
				      
				      Transform {
				        translation -0.01 0 -0.007
				        children [
				          USE HEAD_CAPSULE_WIDTH
				        ]
				      }
				      
				      # Front height capsules
					  Transform {
						translation 0.016 0.015 0
						rotation 1 0 0 1.5708
						children [
							DEF HEAD_CAPSULE_HEIGHT_FRONT Shape {
							  geometry Capsule {
							    height 0.024
							    radius 0.005
							  }
							  appearance USE MAIN_BODY_APPEARANCE
							}
					    ]				          
				      }			

				      Transform {
				        translation 0.016 -0.015 0
						rotation 1 0 0 1.5708				        
				        children [
				          USE HEAD_CAPSULE_HEIGHT_FRONT
				        ]
				      }
				      
				      # Rear height capsules
				      Transform {
						translation -0.01 0.015 0
						rotation 1 0 0 1.5708
						children [
							DEF HEAD_CAPSULE_HEIGHT_REAR Shape {
							  geometry Capsule {
							    height 0.014
							    radius 0.005
							  }
							  appearance USE MAIN_BODY_APPEARANCE
							}
					    ]				          
				      }			

				      Transform {
				        translation -0.01 -0.015 0
						rotation 1 0 0 1.5708				        
				        children [
				          USE HEAD_CAPSULE_HEIGHT_REAR
				        ]
				      }
				      
				      # Length-wise capsules
				      Transform {
						translation 0.003 0.015 0.0095
						rotation -0.0944316 -0.0944316 0.991043 1.57979
						children [
							DEF HEAD_CAPSULE_LENGTH Shape {
							  geometry Capsule {
							    height 0.02648
							    radius 0.005
							  }
							  appearance USE MAIN_BODY_APPEARANCE 
							}
					    ]				          
				      }
				      
				      Transform {
						translation 0.003 0.015 -0.0095
						rotation 0.0944316 0.0944316 0.991043 1.57979
				        children [
				          USE HEAD_CAPSULE_LENGTH
				        ]
				      }

				      Transform {
						translation 0.003 -0.015 0.0095
						rotation -0.0944316 -0.0944316 0.991043 1.57979
				        children [
				          USE HEAD_CAPSULE_LENGTH
				        ]
				      }

				      Transform {
						translation 0.003 -0.015 -0.0095
						rotation 0.0944316 0.0944316 0.991043 1.57979
				        children [
				          USE HEAD_CAPSULE_LENGTH
				        ]
				      }

					  # Head cap (top)
					  Transform {
					    translation 0.003 0 0.014
						rotation 0 -1 0 0.189997				    
					    children [
					      Shape {
					        geometry Box {
					          size 0.027 0.03 0.001
					        }
 							appearance USE MAIN_BODY_APPEARANCE 
					      }
					    ]
					  }
					  
					  # Head cap (back)
					  Transform {
					    translation -0.0145 0 0
					    children [
					      Shape {
					        geometry Box {
					          size 0.001 0.03 0.014
					        }
 							appearance USE MAIN_BODY_APPEARANCE 
					      }
					    ]
					  }
				      
				      
				    ]
				  } # End of HEAD_SHAPE
				  
				]
				name "head"

				%{ if not fields.vizMode.value then }%
				boundingObject USE HEAD_SHAPE
				physics Physics {
					density 1000
				}
				%{ end }%
			  }
			}
		  ]
		} # DEF HEAD Transform
	
		DEF BACKPACK Solid {
		  translation -0.04 0 0.018
		  children [
		    DEF BACKPACK_GROUP Group {
		      children [
						Transform {
							children [
							Shape {
								appearance USE MAIN_BODY_APPEARANCE 
								geometry Box {
								size 0.03 0.03905 0.0206
								}
							}
							]
						}
						Transform {
							translation 0 0 0.0113
							children [
							Shape {
								appearance USE MAIN_BODY_APPEARANCE 
								geometry Cylinder {
								height 0.039
								radius 0.015
								subdivision 16
								}
							}
							]
						}
						Transform {
							translation 0 0 -0.0113
							children [
								Shape {
									appearance USE MAIN_BODY_APPEARANCE
									geometry Cylinder {
										height 0.039
										radius 0.015
										subdivision 16
									}
								}
							]
						}
		      ]
		    }     
		    

			#Backpack lights (directional)
			Transform {
				translation -0.009 0 0.025
				children [
					%{
					  for i=0,2 do
					    led_name = string.format("ledHealth%d", i)
					    xpos = (i)*0.006
					}%
					LED {
					  name "%{=led_name}%"
					  children [
						DEF BACKPACK_HEALTH_LED_SHAPE Group {
						  children [
							Shape {
							  appearance Appearance {
								material Material {
                 				diffuseColor 0.3 0.3 0.3
								}
							  }
							  geometry Box {
								size 0.005 0.005 0.005
							  }
							}
						  ]
						}
					  ]
					  translation %{=xpos}% 0 0
					  color []
					  gradual TRUE
					}
					%{ end }%   # End light for loop
					%{
					  for i=0,1 do
					    if (i == 0) then
					      led_name = "ledDirLeft"
					      ypos = 0.006
					    else 
					      led_name = "ledDirRight"
					      ypos = -0.006
					    end
					}%
					LED {
					  name "%{=led_name}%"
					  children [
						DEF BACKPACK_DIR_LED_SHAPE Group {
						  children [
							Shape {
							  appearance Appearance {
								material Material {
                 				diffuseColor 0.3 0.3 0.3
								}
							  }
							  geometry Box {
								size 0.003 0.005 0.005
							  }
							}
						  ]
						}
					  ]
					  translation 0.003 %{=ypos}% 0
					  color []
					  gradual TRUE
					}
					%{ end }%							
				]
			} # Backpack lights
		                     
		  ] # BACKPACK Solid children

		  %{ if not fields.vizMode.value then }%
	          boundingObject USE BACKPACK_GROUP
		  physics Physics {
			density 2000
		  }
		  %{ end }%
		} # BACKPACK Solid


					
		%{ if fields.useTreads.value then }%

		Track {
		  translation 0 0.023 0
		  rotation 1 0 0 -1.5707963
		  children [

                DEF FRONT_TRACK_WHEEL TrackWheel {
                  position 0 0
                  radius 0.0145
                  children [
                    DEF TRACK_WHEEL_BIG Transform {
                    rotation 1 0 0 1.5707963  
                    children [
					    Shape {
							appearance DEF WHEEL_MATERIAL Appearance {
							  material Material {
							    diffuseColor 0.7 0.7 0.7
							  }
							}
							geometry Cylinder {
							  height 0.01
							  radius 0.0145
							  subdivision 14
							}
					    }
					  ]
                    }
                  ]
                }
                
                DEF REAR_TRACK_WHEEL TrackWheel {
                  position -0.048 0.00375
                  radius 0.01075
                  children [
                    DEF TRACK_WHEEL_SMALL Transform {
                    rotation 1 0 0 1.5707963  
                    children [
					    Shape {
							appearance USE WHEEL_MATERIAL
							geometry Cylinder {
							  height 0.01
							  radius 0.01075
							  subdivision 14
							}
					    }
                      ]					    
                    }
                  ]
                }
                		
		  ]
		  name "left track"
		  contactMaterial "highfriction"
		  
		  # The boundingObject is the thing that actually determines the physical shape 
		  # of the track
		  %{ if not fields.vizMode.value then }%
		  boundingObject DEF TRACK_BO Group {
			children [
			
              # Front wheel
			  Transform {
				translation 0 0 0
				rotation 1 0 0 -1.5707963
				children [
				  Cylinder {
					height 0.01
					radius %{=fields.frontWheelRadiusM.value}%
					subdivision 14
				  }
				]
			  }
			  
			  # Create intermediate wheels
			  %{ totalRadDistM = (fields.frontWheelRadiusM.value - fields.rearWheelRadiusM.value) 
			     distStepM = fields.rearWheelDistToFrontWheelM.value / (fields.numInterTreadWheels.value + 1)
			     radStepM  = totalRadDistM / (fields.numInterTreadWheels.value + 1)
			     if fields.numInterTreadWheels.value > 0 then 
			       for iw=1,fields.numInterTreadWheels.value do
			  }%
			  
			  Transform {
				translation %{= iw * distStepM - fields.rearWheelDistToFrontWheelM.value}% %{= totalRadDistM - (iw * radStepM) }% 0
				rotation 1 0 0 -1.5707963
				children [
				  Cylinder {
					height 0.01
					radius %{= fields.rearWheelRadiusM.value + (iw * radStepM) }%
					subdivision 14
				  }
				]
			  }

			  %{   end }%
			  %{ end }%  # intermediate tread wheels
			  
			  # Rear wheel
			  Transform {
				translation %{=-fields.rearWheelDistToFrontWheelM.value}% 0.00375 0
				rotation 1 0 0 -1.5707963
				children [
				  Cylinder {
					height 0.01
					radius %{=fields.rearWheelRadiusM.value}%
					subdivision 14
				  }
				]
			  }
			]
		  }
		  physics Physics {
		  }
		  %{ end }%
		  device [
		    LinearMotor {
			  name "LeftWheelMotor"
		    }
  		    PositionSensor {
		      name "LeftWheelMotorPosSensor"
		    }
		  ]
		  
		  # Shape of tread studs
		  animatedGeometry DEF ANIMATED_SHAPE Shape {
			appearance Appearance {
			  material Material {
				diffuseColor 0.141176 0.141176 0.141176
			  }
			}
			geometry Box {
			  size 0.002 0.001 0.01
			}
		  }
		  geometriesCount 40
		}

		Track {
		  translation 0 -0.023 0
		  rotation 1 0 0 -1.5707963       
		  children [
		  
			USE FRONT_TRACK_WHEEL
			USE REAR_TRACK_WHEEL
			
		  ]
		  name "right track"
		  contactMaterial "highfriction"

		  %{ if not fields.vizMode.value then }%      
		  boundingObject USE TRACK_BO
		  physics Physics {
		  }
		  %{ end }%
		  device [
		    LinearMotor {
			  name "RightWheelMotor"
		    }
		    PositionSensor {
		      name "RightWheelMotorPosSensor"
		    }		    
		  ]
		  animatedGeometry USE ANIMATED_SHAPE
		  geometriesCount 40
		}



        # else if not useTreads
		%{ else }%
	
	
		DEF CASTER Solid {
		  translation -0.03 0 -0.009575
		  children [
				Shape {
					appearance Appearance {
						material Material {
							diffuseColor 0.57995 0.464927 0.275319
						}
					}
					geometry DEF CASTER_SHAPE Cylinder {
						height 0.010
						radius 0.004625
						subdivision 32
					}
				}
		  ]
		  contactMaterial "nofriction"

		  %{ if not fields.vizMode.value then }%
		  boundingObject USE CASTER_SHAPE
		  physics Physics {
			 density 5000
		  }	
		  %{ end }%
		} # CASTER Solid
	
		DEF LEFT_FRONT_WHEEL HingeJoint {
		  jointParameters HingeJointParameters {
				dampingConstant 0.75
				axis 0 1 0
		  }
		  device [
		    RotationalMotor {
				name "LeftWheelMotor"
				maxVelocity 30
		    }
		    PositionSensor {
		      name "LeftWheelMotorPosSensor"
		    }
		  ]
		  endPoint Solid {
			translation 0 0.02385 0
				children [
					Transform {
						translation 0 -0.00225 0
						children [
							DEF DRIVE_HUB Group {
								children [
									Shape {
									appearance Appearance {
										material DEF WHEEL_HUB_MATERIAL Material {
										diffuseColor 0.6 0.6 0.6
										}
									}
									geometry Cylinder {
										height 0.011
										radius 0.0132
										subdivision 18
									}
								 }
								 Transform {
									 translation .005 0 0
									 children [
											Shape {
												appearance Appearance {
													material USE OrangePlastic
												}
												geometry Box {
													size .01 .0125 .004
												}
											}
										]
									}
								]
							}
						]
					}
					DEF DRIVE_TIRE Shape {
					appearance Appearance {
						material Material {
						diffuseColor 0.25 0.25 0.25
						}
					}
					geometry Cylinder {
						height 0.003
						radius 0.0142
						subdivision 24
					}
			  }
			]
			contactMaterial "highfriction"

			%{ if not fields.vizMode.value then }%
			boundingObject USE DRIVE_TIRE
			physics DEF FRONT_WHEEL_PHYSICS Physics {
			  density 1000 # Make heavier than rear wheels to simulate weights in front
			}
			%{ end }%
		  }
		}
		DEF RIGHT_FRONT_WHEEL HingeJoint {
		  jointParameters HingeJointParameters {
				dampingConstant 0.75
				axis 0 1 0
		  }
		  device [
		    RotationalMotor {
				name "RightWheelMotor"
				maxVelocity 30
		    }
		    PositionSensor {
		      name "RightWheelMotorPosSensor"
		    }
		  ]
		  endPoint Solid {
				translation 0 -0.02385 0
				children [
					Transform {
						translation 0 0.00225 0
						children [
							USE DRIVE_HUB
						]
					}
					USE DRIVE_TIRE
				]
				contactMaterial "highfriction"

				%{ if not fields.vizMode.value then }%
				boundingObject USE DRIVE_TIRE
				physics USE FRONT_WHEEL_PHYSICS
				%{ end }%
		  }
		}
		DEF REAR_AXLE Transform {
		  translation -.03 0 0 
		  children [
				DEF LEFT_REAR_WHEEL HingeJoint {
					jointParameters HingeJointParameters {
						axis 0 1 0
					}
			  	endPoint Solid {
						translation 0 0.02385 0
						children [
							Transform {
								translation 0 -0.00225 0
								children [
									DEF REAR_HUB Shape {
										appearance Appearance {
											material USE WHEEL_HUB_MATERIAL
										}
										geometry Cylinder {
											height 0.011
											radius 0.0127
											subdivision 22
										}
									}
								]
							}
							DEF REAR_TIRE Shape {
								appearance Appearance {
									material Material {
									diffuseColor 0.25 0.25 0.25
									}
								}
								geometry Cylinder {
									height 0.003
									radius 0.0137
									subdivision 22
								}
							}
						]
						contactMaterial "nofriction"

						%{ if not fields.vizMode.value then }%
						boundingObject USE REAR_TIRE
						physics DEF REAR_WHEEL_PHYSICS Physics {
						  density 1000
						}
						%{ end }%
			  	} # endPoint Solit
				}
				DEF RIGHT_REAR_WHEEL HingeJoint {
			  	jointParameters HingeJointParameters {
						axis 0 1 0
			  	}
			  	endPoint Solid {
						translation 0 -0.02385 0
						children [
							USE REAR_TIRE
							Transform {
								translation 0 0.00225 0
								children [
									USE REAR_HUB
								]
							}
						]
						contactMaterial "nofriction"

						%{ if not fields.vizMode.value then }%
						boundingObject USE REAR_TIRE
						physics USE REAR_WHEEL_PHYSICS
						%{ end }%
					}
				}
		  ] # Transform children
		} # REAR_AXLE Transform

	
        # end if useTreads
		%{ end }%
	
	
		DEF LIFT Transform {
		  translation -0.04 0 0.0295
	  
		  children [
				Shape {
					geometry Cylinder {
					height 0.048
					radius 0.0035
					subdivision 10
					}
					appearance USE MAIN_BODY_APPEARANCE
				}
			
				DEF SHOULDER HingeJoint {
					jointParameters HingeJointParameters {
						axis 0 -1 0
						dampingConstant 1
						position IS liftAngle
						minStop IS liftAngle_lowLimit
						maxStop IS liftAngle_highLimit
					}
					%{ if not fields.vizMode.value then }%
					device [
					  RotationalMotor {
						name "LiftMotor"
						maxVelocity 30
					  }
					  PositionSensor {
					    name "LiftMotorPosSensor"
					  }
					]
					%{ end }%
					endPoint Solid {
					children [

					    #GRIPPER PLATE
					    Transform {
						translation 0.0626 0 -0.012
						children [
							HingeJoint {
							jointParameters HingeJointParameters {
								axis 0 1 0
							}
							endPoint DEF SmallFingerGripper Solid {
								name "GripperPlate"
								children [

								Transform {
									translation 0.0035 -0.017 -0.012
									children [
										DEF GRIPPER_FINGER Group {
											children [
												Shape {
													appearance USE MAIN_BODY_APPEARANCE
													geometry IndexedFaceSet {
														coord Coordinate {
															point [
																0 0.00075 0
																0 0.00075 0.0075
																0.0026 0.00075 0.0075
																0.0046 0.00075 0.0108
																0.006 0.00075 0.0108
																0.006 0.00075 0.008
																0.0034 0.00075 0
																0 -0.00075 0
																0 -0.00075 0.008
																0.0026 -0.00075 0.008
																0.0046 -0.00075 0.0108
																0.006 -0.00075 0.0108
																0.006 -0.00075 0.008
																0.0034 -0.00075 0
															]
														}
														coordIndex [
															0, 1, 6, -1, 1, 2, 6, -1, 2, 5
															6, -1, 2, 3, 4, -1, 2, 4, 5, -1
															13, 8, 7, -1, 13, 9, 8, -1, 13, 12
															9, -1, 11, 10, 9, -1, 12, 11, 9, -1
															1, 8, 2, -1, 2, 8, 9, -1, 3, 10
															4, -1, 4, 10, 11, -1, 2, 9, 3, -1
															3, 9, 10, -1, 4, 11, 12, -1, 4, 12
															5, -1, 5, 12, 13, -1, 5, 13, 6, -1
															13, 7, 0, -1, 6, 13, 0, -1
														]
													}
												}
											] # GRIPPER_FINGER Group Children
										} # GRIPPER_FINGER Group
									] # Transform children
								} # Transform
								Transform {
									translation 0.0035 0.017 -0.012
									children [
									USE GRIPPER_FINGER
									]
								}

								DEF LIFTER_SHAPE Group {
									children [
									Transform {
										translation 0 -0.0165 -0.01155
										children [
										DEF GRIPPER_SIDE Shape {
											geometry Box {
											size 0.007 0.004 0.0289
											}
											appearance USE MAIN_BODY_APPEARANCE
										}
										]
									}
									Transform {
										translation 0 0.0165 -0.01155
										children [
											USE GRIPPER_SIDE
										]
									}
									Transform {
										translation 0.001 0 -0.0235
										children [
										DEF GRIPPER_BOTTOM Shape {
											geometry Box {
											size 0.005 0.029 0.005
											}
											appearance USE MAIN_BODY_APPEARANCE
										}
										]
									}
								
									# Screws and washers
									Transform {
										translation 0 -0.01375 0
										children [
											DEF LIFTER_SCREW Shape {
											geometry Cylinder {
												height .0025
												radius .00175
											}
											appearance Appearance {
												material Material {
																diffuseColor 0.7 0.7 0.7
																shininess 0.95
																} 
															}
											}
										]
									}
									Transform {
										translation 0 -0.014 0
										children [
											DEF LIFTER_WASHER Shape {
											geometry Cylinder {
												height .001
												radius .003
											}
											appearance Appearance {
												material Material {
																diffuseColor 1.0 1.0 1.0
																transparency 0.15
																shininess 0
															}
															}
											}
										]
									}
																	
									Transform {
										translation 0 0.01375 0
										children [
											USE LIFTER_SCREW
										]
									}
									Transform {
										translation 0 0.014 0
										children [
											USE LIFTER_WASHER
										]
									}
								
									Transform {
										translation 0 0.01375 -0.012
										children [
											USE LIFTER_SCREW
										]
									}
									Transform {
										translation 0 0.014 -0.012
										children [
											USE LIFTER_WASHER
										]
									}
								
									Transform {
										translation 0 -0.01375 -0.012
										children [
											USE LIFTER_SCREW
										]
									}
									Transform {
										translation 0 -0.014 -0.012
										children [
											USE LIFTER_WASHER
										]
									}								
									 
									] # LIFTER_SHAPE Group Children
								} # LIFTER_SHAPE Group
							 
	#							DEF CALIBRATION_RIG Group {
	# 							  children [
	# 							    Transform {
	# 							      translation 0 -.0125 -0.0135
	# 							      children [
	# 							        DEF CALIBRATION_TAB Group {
	# 							          children [
	# 							            Shape {
	# 							              geometry Box {
	# 							                size .003 .003 .003
	# 							              }
	# 							            }
	# 							            Transform {
	# 							              translation -.0015 0 0
	# 							              children [
	# 							                Shape {
	# 							                  geometry Box {
	# 							                    size .0002 .0029 .0029
	# 							                  }
	# 							                  appearance Appearance {
	#                						            texture ImageTexture {
	# 					                              url "textures/calibrationDot.png"
	#                 						        }
	#                 						      }
	#                 						    }
	#                 						  ] # Transform children
	#                 						} # Transform
	#                 					  ] # CALIBRATION_TAB Group Children
	#               						} # CALIBRATION_TAB Group   
	# 							      ] # Transform Children
	# 							    } # Transform
	# 							    Transform {
	# 							      translation 0 .0125 -0.0135
	# 							      children [
	# 							        USE CALIBRATION_TAB
	# 							      ]
	# 							    }
	# 							    Transform {
	# 							      translation 0 .0125 0.0035
	# 							      children [
	# 							        USE CALIBRATION_TAB
	# 							      ]
	# 							    }
	# 							    Transform {
	# 							      translation 0 -.0125 0.0035
	# 							      children [
	# 							        USE CALIBRATION_TAB
	# 							      ]
	# 							    }
	# 							  ] # CALIBRATION_RIG children
	# 							} # CALIBRATION_RIG Group        
								Connector {
									name "gripperConnector"
									translation 0.0035 0 -0.0145
									rotation 0 1 0 1.57
									model "magnetic"
									distanceTolerance 0.0038
									type "active"
									isLocked FALSE
									autoLock TRUE
									tensileStrength 1
									shearStrength 1
								}

								] # SmallFingerGripper Children

								%{ if not fields.vizMode.value then }%
								boundingObject USE LIFTER_SHAPE
								physics Physics {
									density 1000
								}
								%{ end }%
							}  # SmallFingerGripper Solid
							} # Hinge Joint
						] # Transform children
						} # Transform

						DEF LEFT_LIFT_ARM Transform {
						translation 0 0.022 0
						children [
							DEF LIFT_ARM_SHAPE Shape {
							geometry IndexedFaceSet {
								coord Coordinate {
								point [
									0 0.00175 -0.0025
									0 0.00175 0.0025
									0.043 0.00175 0.0025
									0.0626 0.00175 -0.0108
									0.0626 0.00175 -0.0158
									0.043 0.00175 -0.0025
									0 -0.00175 -0.0025
									0 -0.00175 0.0025
									0.043 -0.00175 0.0025
									0.0626 -0.00175 -0.0102
									0.0626 -0.00175 -0.0152
									0.043 -0.00175 -0.0025
								]
								}
								coordIndex [
								0, 1, 2, -1, 0, 2, 5, -1, 2, 3
								4, -1, 2, 4, 5, -1, 8, 7, 6, -1
								11, 8, 6, -1, 10, 9, 8, -1, 11, 10
								8, -1, 1, 7, 8, -1, 1, 8, 2, -1
								2, 8, 9, -1, 2, 9, 3, -1, 3, 9
								10, -1, 3, 10, 4, -1, 0, 6, 7, -1
								0, 7, 1, -1, 11, 6, 0, -1, 11, 0
								5, -1, 10, 11, 5, -1, 10, 5, 4, -1
								]
								creaseAngle 12
							}
							appearance USE MAIN_BODY_APPEARANCE
							} # DEF LIFT_ARM_SHIFT
						
							Transform {
								translation 0.0626 -0.0005 -0.012
								children [
									Shape {
									geometry Cylinder {
										height 0.006
										radius 0.0025
									}
									appearance USE MAIN_BODY_APPEARANCE
									}
								]
							}
						]
						} # LEFT_LIFT_ARM Transform
				
						DEF RIGHT_LIFT_ARM Transform {
							translation 0 -0.022 0
							children [
								USE LIFT_ARM_SHAPE
								Transform {
									translation 0.0626 0.0005 -0.012
									children [
										Shape {
										geometry Cylinder {
											height 0.006
											radius 0.0025
										}
										appearance USE MAIN_BODY_APPEARANCE
										}
									]
								}
							]
						} # RIGHT_LIFT_ARM Transform
					
					] # endPoint Solid children

					%{ if not fields.vizMode.value then }%
					boundingObject Group {
						children [
							# Right arm
							Transform {
								translation 0 -0.02225 0
								children [
									USE LIFT_ARM_SHAPE
								]
							}

							# Left arm
							Transform {
								translation 0 0.02225 0
								children [
									USE LIFT_ARM_SHAPE
								]
							}
						]
					}
					physics Physics {
						density 1000
					}
					%{ end }%

					} # endPoint Transform
				} # HingeJoint

				# Lower Set of Arms
				DEF LOWER_LIFT Transform {
					translation 0 0 -0.012
				
					children [
						Shape {
							geometry Cylinder {
							height 0.048
							radius 0.0045
							 subdivision 10
							}
							appearance USE MAIN_BODY_APPEARANCE
						}
					
						# Lower set of arms
						# Note these have no motor and will move with the upper set					
						DEF SHOULDER_LOWER HingeJoint {
							jointParameters HingeJointParameters {
								axis 0 -1 0
							}
							endPoint Solid {
								children [

									# Hinge to close mechanical loop back to gripper plate
									Transform {
									  translation 0.0626 0 -0.012
									  children [
									    HingeJoint {
									      jointParameters HingeJointParameters {
									        axis 0 1 0
									      }
	
									      endPoint SolidReference { 
										  solidName "GripperPlate"
									      }
									    }
									  ]
									}



									DEF RIGHT_LIFT_ARM_LOWER Transform {
										translation 0 -0.022 0
										children [
											USE LIFT_ARM_SHAPE
											Transform {
												translation 0.0626 0.0005 -0.012
												children [
													Shape {
														geometry Cylinder {
															height 0.006
															radius 0.0025
														}
														appearance USE MAIN_BODY_APPEARANCE
													}
												]
											}
										]
									} # RIGHT_LIFT_ARM_LOWER Transform
			
									DEF LEFT_LIFT_ARM_LOWER Transform {
										translation 0 0.022 0
										children [
											USE LIFT_ARM_SHAPE
											Transform {
												translation 0.0626 -0.0005 -0.012
												children [
													Shape {
														geometry Cylinder {
															height 0.006
															radius 0.0025
														}
														appearance USE MAIN_BODY_APPEARANCE
													}
												]
											}
										]
									} # LEFT_LIFT_ARM_LOWER Transform
								] # endPoint Solid Children (lower)


								%{ if not fields.vizMode.value then }%
								boundingObject Group {
									children [
										# Right arm
										Transform {
											translation 0 -0.02225 0
											children [
												USE LIFT_ARM_SHAPE
											]
										}

										# Left arm
										Transform {
											translation 0 0.02225 0
											children [
												USE LIFT_ARM_SHAPE
											]
										}
									]
								}
								physics Physics {
									density 1000
								}
								%{ end }%


							} # endPoint Solid (lower)
						} # DEF SHOULDER_LOWER HingeJoint
					] # LOWER lift transform children
				} # LOWER lift Transofrm

			] # LIFT Transform children
			
			#physics Physics {
			#  density 5000
			#}
			
		} # Lift Transform
		
  ] # Wheel RadiusTransform Children
  
  } # Wheel Radius Transform
    
  ] # Supervisor children
} # Supervisor

} # PROTO definition