#VRML_SIM V7.3.0 utf8
# Simple version of Cozmo charger because strange physics things
# happen on the other one.

PROTO CozmoChargerSimple [
  field SFString name "CozmoChargerSimple000"

  # Dimensions
  field SFFloat wallWidth     .01
  field SFFloat wallHeight    .026
  field SFFloat platformWidth .06  # Platform is the flat part that robot sits on when charging
  field SFFloat platformLength .042
  field SFFloat platformHeight .0001
  field SFFloat rampLength     .044      # The ramp is the part that leads up to the platform
  field SFFloat rampWidthAtGround  .072

  field SFFloat dockMarkerWidth  0.027
  field SFFloat dockMarkerHeight 0.020

  field SFVec3f translation 0 0 0
  field SFRotation rotation 0 0 1 0
  field SFFloat mass 0.2
  field SFColor color .3 .3 .3

]
{
Robot {

  name IS name
  translation IS translation
  rotation IS rotation
  contactMaterial "cmat_ramp"

  children [

    # Ramp marker
    Transform {
      rotation 0 0 1 1.5708 # 90 deg about z-axis
      translation %{=fields.wallWidth.value}% 0 %{=fields.platformHeight.value + fields.wallHeight.value/2}%
      children [
        VisionMarker {
          #rotation 0 0 1 1.5708
          #image "symbols/rampFront.png"
          image "charger.png"
          markerWidth IS dockMarkerWidth
          markerHeight IS dockMarkerHeight
        }
      ]
    }

    DEF ChargerGroup Group {
      children [

        # Back side
        # Origin is center of back side of charger
        # x-axis points toward ramp, y-axis points to robot left when robot is in charger, z-axis points up
      	Transform {
      	  translation %{=fields.wallWidth.value/2}% 0 %{=fields.wallHeight.value/2}%
          children [
            Shape {
              appearance Appearance {
				material DEF ChargerPlastic Material {
				  diffuseColor 0.5 0.5 0.5
				}
	   		  }
			  geometry Box {
			    size %{=fields.wallWidth.value}% %{=fields.platformWidth.value + 2*fields.wallWidth.value}% %{=fields.wallHeight.value}%
			  }
			}
		  ]
      	}


        # Left Side
#        Transform {
#          translation %{=fields.platformLength.value/2+fields.wallWidth.value}% %{=fields.platformWidth.value/2+fields.wallWidth.value/2}% %{=fields.wallHeight.value/2}%
#          children [
#            Shape {
#              appearance Appearance {
#				material USE ChargerPlastic
#	   		  }
#			  geometry Box {
#			    size %{=fields.platformLength.value}% %{=fields.wallWidth.value}% %{=fields.wallHeight.value}%
#			  }
#			}
#          ]
#        } # Left Side Transform

        # Right Side
#        Transform {
#          translation %{=fields.platformLength.value/2+fields.wallWidth.value}% %{=-fields.platformWidth.value/2-fields.wallWidth.value/2}% %{=fields.wallHeight.value/2}%
#          children [
#          Shape {
#            appearance Appearance {
#				material USE ChargerPlastic
#	   		  }
#			  geometry Box {
#			    size %{=fields.platformLength.value}% %{=fields.wallWidth.value}% %{=fields.wallHeight.value}%
#			  }
#			}
#          ]
#        } # Right Side Transform


        # Platform
        Transform {
          translation %{=fields.platformLength.value/2+fields.wallWidth.value}% 0 %{=fields.platformHeight.value/2}%
          children [
            Shape {
              appearance Appearance {
				material USE ChargerPlastic
	   		  }
			  geometry Box {
			    size %{=fields.platformLength.value}% %{=fields.platformWidth.value}% %{=fields.platformHeight.value}%
			  }
			}
          ]
        } # Platform Transform


        # Ramp
        Transform {
          translation %{=fields.platformLength.value+fields.wallWidth.value+0.5*fields.rampLength.value}% 0 %{=0.5*fields.platformHeight.value}%
          children [
            Shape {
              appearance Appearance {
		material USE ChargerPlastic
              }
              geometry Box {
                size %{=fields.rampLength.value}% %{=fields.rampWidthAtGround.value}% %{=fields.platformHeight.value}%
              }
            }
          ]
        } # Ramp Transform

      ] # ChargerGroup Children
    } # ChargerGroup

    Transform {
      translation %{=fields.wallWidth.value + 0.038}% 0 %{=fields.platformHeight.value}%
      rotation 1 0 0 0
      children [
		Connector {
		  name			"ChargeContact"
		  model         "ChargeContact"
		  type 			"symmetric"
		  isLocked		FALSE
		  autoLock		FALSE
		  distanceTolerance	0.01
		  axisTolerance		0.2
		  rotationTolerance 	1.5708
		  numberOfRotations 	4
		  snap			FALSE
		}
      ]
    }

  ] # Solid Children

  boundingObject USE ChargerGroup

  physics Physics {
    density -1
    mass IS mass
  }

} # Parent Solid (the actual ramp)


} # PROTO
