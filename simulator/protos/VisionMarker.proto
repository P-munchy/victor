#VRML_SIM V7.3.0 utf8

PROTO VisionMarker [
  field SFVec3f    translation  0 0 0
  field SFRotation rotation     0 0 1 0
  
  field SFFloat    markerWidth  0.025
  field SFFloat    padding      0.002
  
  #field SFBool     isDockable   FALSE
  field SFString   connectorName ""
  field SFRotation connectorRotation 0 0 1 0

  field SFBool     useWhiteBackground TRUE
  field SFString   image              ""  # Image path relative to textures/
]
{
  %{
    imageURL = ""
    if fields.markerImg ~= "" then
      imageURL = "textures/" .. fields.image
    end 
    
    if fields.useWhiteBackground then 
      whiteFaceSize = fields.markerWidth+2*fields.padding
    end 
  }%  
 
  Group {
    
    children [
      Transform {
        rotation IS rotation
        translation IS translation
        children [
          Shape {
            appearance Appearance {
              texture ImageTexture {
                url [ "%{= imageURL }%" ]
              }
            }
            geometry DEF MARKER_BOX Box {
              size %{= fields.markerWidth }% 0.0001 %{= fields.markerWidth }%
            }
          }
          %{ if fields.useWhiteBackground then }%
          DEF FACE_SHAPE Shape {
            appearance Appearance {
              material Material {
                diffuseColor 1 1 1
              }
            }
            geometry Box {
              size %{=whiteFaceSize}% 0.00005 %{=whiteFaceSize}%
            }
          }
          %{ end }%        
        ] # Transform children
      } # Transform 
      
      %{ if fields.connectorName ~= "" then }%
      #Transform {
        
       # children [
          Connector {
            rotation IS connectorRotation
            translation IS translation
            #name "%{=fields.translation.x}%  %{=fields.translation.y}% %{=fields.translation.z}%"
            name IS connectorName
            model "magnetic"
            type "passive"
            autoLock TRUE
          }
        #] # Transform children
      #} # Transform
      %{ end }%
      
    ] # Group children
    
  } # Group  
      
} # PROTO